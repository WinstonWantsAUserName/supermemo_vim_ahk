#Requires AutoHotkey v1.1.1+  ; so that the editor would recognise this script as AHK V1
; https://gist.github.com/kbauer/e8fee6514d124d5961f51fd7ba571bfd
;; -*- mode: text; coding: utf-8 -*-
;;
;;              DO NOT EDIT MANUALLY!
;; 
;; FILE IS GENERATED BY EMACS LISP SCRIPT 
;;   `%((file-name-nondirectory qta-ahkdata:generator-script-file)%)'
;;   
;;   
;; Writing LaTeX glyphs with 
;; AutoHotKey (unicode versions only)
;;
;; Character table based on emacs quail package: 
;;   `TeX'.
;;
;; In emacs use `M-X set-input-method TeX' if you need the original 
;; (and more powerful) functionality.
;; 
;; The hotstrings are case sensitive (`C' option)
;; 
;; In GTK-Applications, the shortcut `C-S-u' folloed by the hexadecimal
;; unicode ID can be used, while standard Alt+Numpad combinations 
;; fail, which is reflected in separate hotstrings.
;; 
;; The hotkey `C-M-S-u' toggles hotkey replacement on and off.
;;
;;

;; ========= CONDITION FUNCTIONS =====================================

EmacsCase() { 
  global Vim
  return (Vim.State.IsCurrentVimMode("Insert_Unicode") && WinActive("ahk_class Emacs"))
}

GtkApplicationCase() {
  global Vim
  return (Vim.State.IsCurrentVimMode("Insert_Unicode") && WinActive("ahk_class gdkWindowToplevel"))
}

ExcludedProgramCase() { 
  global Vim
  return (Vim.State.IsCurrentVimMode("Insert_Unicode") && 0)
}

OtherCase() {
  global Vim
  return (Vim.State.IsCurrentVimMode("Insert_Unicode")
       && !EmacsCase() 
       && !GtkApplicationCase()
       && !ExcludedProgramCase())
}

;; ========= REQUIRED GLOBAL SETTINGS ================================
#Hotstring EndChars `n `t
#Hotstring C O ?
#SingleInstance force

EmacsEnabled = 0  ; For emacs there is (set-input-method "TeX") 
Suspend

#if
!^+u::Vim.State.SetMode("Insert_Unicode")
#if (Vim.State.IsCurrentVimMode("Insert_Unicode"))
!^+u::Vim.State.SetMode("Insert")

;; ========= TABLE OF SYMBOLS ========================================
;; 
;;  [   U005B     91  \lbrack              LEFT SQUARE BRACKET
;;  \   U005C     92  \\                   REVERSE SOLIDUS
;;  \   U005C     92  \backslash           REVERSE SOLIDUS
;;  ]   U005D     93  \rbrack              RIGHT SQUARE BRACKET
;;  {   U007B    123  \lbrace              LEFT CURLY BRACKET
;;  |   U007C    124  \vert                VERTICAL LINE
;;  }   U007D    125  \rbrace              RIGHT CURLY BRACKET
;;  ¡   U00A1    161  !`                   INVERTED EXCLAMATION MARK
;;  ¢   U00A2    162  \cent                CENT SIGN
;;  £   U00A3    163  \pound               POUND SIGN
;;  £   U00A3    163  \pounds              POUND SIGN
;;  ¤   U00A4    164  \currency            CURRENCY SIGN
;;  ¥   U00A5    165  \yen                 YEN SIGN
;;  §   U00A7    167  \S                   SECTION SIGN
;;  §   U00A7    167  \section             SECTION SIGN
;;  ¨   U00A8    168  \"{}                 DIAERESIS
;;  ©   U00A9    169  \copyright           COPYRIGHT SIGN
;;  ª   U00AA    170  $^a$                 FEMININE ORDINAL INDICATOR
;;  ª   U00AA    170  \ordfeminine         FEMININE ORDINAL INDICATOR
;;  «   U00AB    171  \"<                  LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
;;  «   U00AB    171  \flqq                LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
;;  ¬   U00AC    172  \lnot                NOT SIGN
;;  ¬   U00AC    172  \neg                 NOT SIGN
;;  ­   U00AD    173  \-                   SOFT HYPHEN
;;  ®   U00AE    174  \circledR            REGISTERED SIGN
;;  ®   U00AE    174  \registered          REGISTERED SIGN
;;  ¯   U00AF    175  \={}                 MACRON
;;  °   U00B0    176  \degree              DEGREE SIGN
;;  ±   U00B1    177  $\pm$                PLUS-MINUS SIGN
;;  ±   U00B1    177  \pm                  PLUS-MINUS SIGN
;;  ²   U00B2    178  $^2$                 SUPERSCRIPT TWO
;;  ²   U00B2    178  ^2                   SUPERSCRIPT TWO
;;  ³   U00B3    179  $^3$                 SUPERSCRIPT THREE
;;  ³   U00B3    179  ^3                   SUPERSCRIPT THREE
;;  ´   U00B4    180  \'{}                 ACUTE ACCENT
;;  µ   U00B5    181  \micro               MICRO SIGN
;;  µ   U00B5    181  \textmu              MICRO SIGN
;;  ¶   U00B6    182  \P                   PILCROW SIGN
;;  ¶   U00B6    182  \paragraph           PILCROW SIGN
;;  ¶   U00B6    182  \pilcrow             PILCROW SIGN
;;  ·   U00B7    183  $\cdot$              MIDDLE DOT
;;  ·   U00B7    183  \cdot                MIDDLE DOT
;;  ·   U00B7    183  \centerdot           MIDDLE DOT
;;  ¸   U00B8    184  \c{}                 CEDILLA
;;  ¹   U00B9    185  $^1$                 SUPERSCRIPT ONE
;;  ¹   U00B9    185  ^1                   SUPERSCRIPT ONE
;;  º   U00BA    186  $^o$                 MASCULINE ORDINAL INDICATOR
;;  º   U00BA    186  \ordmasculine        MASCULINE ORDINAL INDICATOR
;;  º   U00BA    186  ^o_                  MASCULINE ORDINAL INDICATOR
;;  »   U00BB    187  \">                  RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
;;  »   U00BB    187  \frqq                RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
;;  ¼   U00BC    188  \frac14              VULGAR FRACTION ONE QUARTER
;;  ½   U00BD    189  \frac12              VULGAR FRACTION ONE HALF
;;  ¾   U00BE    190  \frac34              VULGAR FRACTION THREE QUARTERS
;;  ¿   U00BF    191  ?`                   INVERTED QUESTION MARK
;;  À   U00C0    192  \`A                  LATIN CAPITAL LETTER A WITH GRAVE
;;  À   U00C0    192  \`{A}                LATIN CAPITAL LETTER A WITH GRAVE
;;  Á   U00C1    193  \'A                  LATIN CAPITAL LETTER A WITH ACUTE
;;  Á   U00C1    193  \'{A}                LATIN CAPITAL LETTER A WITH ACUTE
;;  Â   U00C2    194  \^A                  LATIN CAPITAL LETTER A WITH CIRCUMFLEX
;;  Â   U00C2    194  \^{A}                LATIN CAPITAL LETTER A WITH CIRCUMFLEX
;;  Ã   U00C3    195  \~A                  LATIN CAPITAL LETTER A WITH TILDE
;;  Ã   U00C3    195  \~{A}                LATIN CAPITAL LETTER A WITH TILDE
;;  Ä   U00C4    196  \"A                  LATIN CAPITAL LETTER A WITH DIAERESIS
;;  Ä   U00C4    196  \"{A}                LATIN CAPITAL LETTER A WITH DIAERESIS
;;  Å   U00C5    197  \AA                  LATIN CAPITAL LETTER A WITH RING ABOVE
;;  Æ   U00C6    198  \AE                  LATIN CAPITAL LETTER AE
;;  Ç   U00C7    199  \cC                  LATIN CAPITAL LETTER C WITH CEDILLA
;;  Ç   U00C7    199  \c{C}                LATIN CAPITAL LETTER C WITH CEDILLA
;;  È   U00C8    200  \`E                  LATIN CAPITAL LETTER E WITH GRAVE
;;  È   U00C8    200  \`{E}                LATIN CAPITAL LETTER E WITH GRAVE
;;  É   U00C9    201  \'E                  LATIN CAPITAL LETTER E WITH ACUTE
;;  É   U00C9    201  \'{E}                LATIN CAPITAL LETTER E WITH ACUTE
;;  Ê   U00CA    202  \^E                  LATIN CAPITAL LETTER E WITH CIRCUMFLEX
;;  Ê   U00CA    202  \^{E}                LATIN CAPITAL LETTER E WITH CIRCUMFLEX
;;  Ë   U00CB    203  \"E                  LATIN CAPITAL LETTER E WITH DIAERESIS
;;  Ë   U00CB    203  \"{E}                LATIN CAPITAL LETTER E WITH DIAERESIS
;;  Ì   U00CC    204  \`I                  LATIN CAPITAL LETTER I WITH GRAVE
;;  Ì   U00CC    204  \`{I}                LATIN CAPITAL LETTER I WITH GRAVE
;;  Í   U00CD    205  \'I                  LATIN CAPITAL LETTER I WITH ACUTE
;;  Í   U00CD    205  \'{I}                LATIN CAPITAL LETTER I WITH ACUTE
;;  Î   U00CE    206  \^I                  LATIN CAPITAL LETTER I WITH CIRCUMFLEX
;;  Î   U00CE    206  \^{I}                LATIN CAPITAL LETTER I WITH CIRCUMFLEX
;;  Ï   U00CF    207  \"I                  LATIN CAPITAL LETTER I WITH DIAERESIS
;;  Ï   U00CF    207  \"{I}                LATIN CAPITAL LETTER I WITH DIAERESIS
;;  Ð   U00D0    208  \DH                  LATIN CAPITAL LETTER ETH
;;  Ñ   U00D1    209  \~N                  LATIN CAPITAL LETTER N WITH TILDE
;;  Ñ   U00D1    209  \~{N}                LATIN CAPITAL LETTER N WITH TILDE
;;  Ò   U00D2    210  \`O                  LATIN CAPITAL LETTER O WITH GRAVE
;;  Ò   U00D2    210  \`{O}                LATIN CAPITAL LETTER O WITH GRAVE
;;  Ó   U00D3    211  \'O                  LATIN CAPITAL LETTER O WITH ACUTE
;;  Ó   U00D3    211  \'{O}                LATIN CAPITAL LETTER O WITH ACUTE
;;  Ô   U00D4    212  \^O                  LATIN CAPITAL LETTER O WITH CIRCUMFLEX
;;  Ô   U00D4    212  \^{O}                LATIN CAPITAL LETTER O WITH CIRCUMFLEX
;;  Õ   U00D5    213  \~O                  LATIN CAPITAL LETTER O WITH TILDE
;;  Õ   U00D5    213  \~{O}                LATIN CAPITAL LETTER O WITH TILDE
;;  Ö   U00D6    214  \"O                  LATIN CAPITAL LETTER O WITH DIAERESIS
;;  Ö   U00D6    214  \"{O}                LATIN CAPITAL LETTER O WITH DIAERESIS
;;  ×   U00D7    215  $\times$             MULTIPLICATION SIGN
;;  ×   U00D7    215  \multiplication      MULTIPLICATION SIGN
;;  ×   U00D7    215  \times               MULTIPLICATION SIGN
;;  Ø   U00D8    216  \O                   LATIN CAPITAL LETTER O WITH STROKE
;;  Ù   U00D9    217  \`U                  LATIN CAPITAL LETTER U WITH GRAVE
;;  Ù   U00D9    217  \`{U}                LATIN CAPITAL LETTER U WITH GRAVE
;;  Ú   U00DA    218  \'U                  LATIN CAPITAL LETTER U WITH ACUTE
;;  Ú   U00DA    218  \'{U}                LATIN CAPITAL LETTER U WITH ACUTE
;;  Û   U00DB    219  \^U                  LATIN CAPITAL LETTER U WITH CIRCUMFLEX
;;  Û   U00DB    219  \^{U}                LATIN CAPITAL LETTER U WITH CIRCUMFLEX
;;  Ü   U00DC    220  \"U                  LATIN CAPITAL LETTER U WITH DIAERESIS
;;  Ü   U00DC    220  \"{U}                LATIN CAPITAL LETTER U WITH DIAERESIS
;;  Ý   U00DD    221  \'Y                  LATIN CAPITAL LETTER Y WITH ACUTE
;;  Ý   U00DD    221  \'{Y}                LATIN CAPITAL LETTER Y WITH ACUTE
;;  Þ   U00DE    222  \TH                  LATIN CAPITAL LETTER THORN
;;  ß   U00DF    223  \ss                  LATIN SMALL LETTER SHARP S
;;  à   U00E0    224  \`a                  LATIN SMALL LETTER A WITH GRAVE
;;  à   U00E0    224  \`{a}                LATIN SMALL LETTER A WITH GRAVE
;;  á   U00E1    225  \'a                  LATIN SMALL LETTER A WITH ACUTE
;;  á   U00E1    225  \'{a}                LATIN SMALL LETTER A WITH ACUTE
;;  â   U00E2    226  \^a                  LATIN SMALL LETTER A WITH CIRCUMFLEX
;;  â   U00E2    226  \^{a}                LATIN SMALL LETTER A WITH CIRCUMFLEX
;;  ã   U00E3    227  \~a                  LATIN SMALL LETTER A WITH TILDE
;;  ã   U00E3    227  \~{a}                LATIN SMALL LETTER A WITH TILDE
;;  ä   U00E4    228  \"a                  LATIN SMALL LETTER A WITH DIAERESIS
;;  ä   U00E4    228  \"{a}                LATIN SMALL LETTER A WITH DIAERESIS
;;  å   U00E5    229  \aa                  LATIN SMALL LETTER A WITH RING ABOVE
;;  æ   U00E6    230  \ae                  LATIN SMALL LETTER AE
;;  ç   U00E7    231  \cc                  LATIN SMALL LETTER C WITH CEDILLA
;;  ç   U00E7    231  \c{c}                LATIN SMALL LETTER C WITH CEDILLA
;;  è   U00E8    232  \`e                  LATIN SMALL LETTER E WITH GRAVE
;;  è   U00E8    232  \`{e}                LATIN SMALL LETTER E WITH GRAVE
;;  é   U00E9    233  \'e                  LATIN SMALL LETTER E WITH ACUTE
;;  é   U00E9    233  \'{e}                LATIN SMALL LETTER E WITH ACUTE
;;  ê   U00EA    234  \^e                  LATIN SMALL LETTER E WITH CIRCUMFLEX
;;  ê   U00EA    234  \^{e}                LATIN SMALL LETTER E WITH CIRCUMFLEX
;;  ë   U00EB    235  \"e                  LATIN SMALL LETTER E WITH DIAERESIS
;;  ë   U00EB    235  \"{e}                LATIN SMALL LETTER E WITH DIAERESIS
;;  ì   U00EC    236  \`i                  LATIN SMALL LETTER I WITH GRAVE
;;  ì   U00EC    236  \`{i}                LATIN SMALL LETTER I WITH GRAVE
;;  í   U00ED    237  \'i                  LATIN SMALL LETTER I WITH ACUTE
;;  í   U00ED    237  \'{i}                LATIN SMALL LETTER I WITH ACUTE
;;  î   U00EE    238  \^i                  LATIN SMALL LETTER I WITH CIRCUMFLEX
;;  î   U00EE    238  \^{i}                LATIN SMALL LETTER I WITH CIRCUMFLEX
;;  ï   U00EF    239  \"i                  LATIN SMALL LETTER I WITH DIAERESIS
;;  ï   U00EF    239  \"{i}                LATIN SMALL LETTER I WITH DIAERESIS
;;  ð   U00F0    240  \dh                  LATIN SMALL LETTER ETH
;;  ñ   U00F1    241  \~n                  LATIN SMALL LETTER N WITH TILDE
;;  ñ   U00F1    241  \~{n}                LATIN SMALL LETTER N WITH TILDE
;;  ò   U00F2    242  \`o                  LATIN SMALL LETTER O WITH GRAVE
;;  ò   U00F2    242  \`{o}                LATIN SMALL LETTER O WITH GRAVE
;;  ó   U00F3    243  \'o                  LATIN SMALL LETTER O WITH ACUTE
;;  ó   U00F3    243  \'{o}                LATIN SMALL LETTER O WITH ACUTE
;;  ô   U00F4    244  \^o                  LATIN SMALL LETTER O WITH CIRCUMFLEX
;;  ô   U00F4    244  \^{o}                LATIN SMALL LETTER O WITH CIRCUMFLEX
;;  õ   U00F5    245  \~o                  LATIN SMALL LETTER O WITH TILDE
;;  õ   U00F5    245  \~{o}                LATIN SMALL LETTER O WITH TILDE
;;  ö   U00F6    246  \"o                  LATIN SMALL LETTER O WITH DIAERESIS
;;  ö   U00F6    246  \"{o}                LATIN SMALL LETTER O WITH DIAERESIS
;;  ÷   U00F7    247  $\div$               DIVISION SIGN
;;  ÷   U00F7    247  \div                 DIVISION SIGN
;;  ÷   U00F7    247  \division            DIVISION SIGN
;;  ø   U00F8    248  \o                   LATIN SMALL LETTER O WITH STROKE
;;  ù   U00F9    249  \`u                  LATIN SMALL LETTER U WITH GRAVE
;;  ù   U00F9    249  \`{u}                LATIN SMALL LETTER U WITH GRAVE
;;  ú   U00FA    250  \'u                  LATIN SMALL LETTER U WITH ACUTE
;;  ú   U00FA    250  \'{u}                LATIN SMALL LETTER U WITH ACUTE
;;  û   U00FB    251  \^u                  LATIN SMALL LETTER U WITH CIRCUMFLEX
;;  û   U00FB    251  \^{u}                LATIN SMALL LETTER U WITH CIRCUMFLEX
;;  ü   U00FC    252  \"u                  LATIN SMALL LETTER U WITH DIAERESIS
;;  ü   U00FC    252  \"{u}                LATIN SMALL LETTER U WITH DIAERESIS
;;  ý   U00FD    253  \'y                  LATIN SMALL LETTER Y WITH ACUTE
;;  ý   U00FD    253  \'{y}                LATIN SMALL LETTER Y WITH ACUTE
;;  þ   U00FE    254  \th                  LATIN SMALL LETTER THORN
;;  ÿ   U00FF    255  \"y                  LATIN SMALL LETTER Y WITH DIAERESIS
;;  ÿ   U00FF    255  \"{y}                LATIN SMALL LETTER Y WITH DIAERESIS
;;  Ā   U0100    256  \=A                  LATIN CAPITAL LETTER A WITH MACRON
;;  Ā   U0100    256  \={A}                LATIN CAPITAL LETTER A WITH MACRON
;;  ā   U0101    257  \=a                  LATIN SMALL LETTER A WITH MACRON
;;  ā   U0101    257  \={a}                LATIN SMALL LETTER A WITH MACRON
;;  Ă   U0102    258  \uA                  LATIN CAPITAL LETTER A WITH BREVE
;;  Ă   U0102    258  \u{A}                LATIN CAPITAL LETTER A WITH BREVE
;;  ă   U0103    259  \ua                  LATIN SMALL LETTER A WITH BREVE
;;  ă   U0103    259  \u{a}                LATIN SMALL LETTER A WITH BREVE
;;  Ą   U0104    260  \kA                  LATIN CAPITAL LETTER A WITH OGONEK
;;  Ą   U0104    260  \k{A}                LATIN CAPITAL LETTER A WITH OGONEK
;;  ą   U0105    261  \ka                  LATIN SMALL LETTER A WITH OGONEK
;;  ą   U0105    261  \k{a}                LATIN SMALL LETTER A WITH OGONEK
;;  Ć   U0106    262  \'C                  LATIN CAPITAL LETTER C WITH ACUTE
;;  Ć   U0106    262  \'{C}                LATIN CAPITAL LETTER C WITH ACUTE
;;  ć   U0107    263  \'c                  LATIN SMALL LETTER C WITH ACUTE
;;  ć   U0107    263  \'{c}                LATIN SMALL LETTER C WITH ACUTE
;;  Ĉ   U0108    264  \^C                  LATIN CAPITAL LETTER C WITH CIRCUMFLEX
;;  Ĉ   U0108    264  \^{C}                LATIN CAPITAL LETTER C WITH CIRCUMFLEX
;;  ĉ   U0109    265  \^c                  LATIN SMALL LETTER C WITH CIRCUMFLEX
;;  ĉ   U0109    265  \^{c}                LATIN SMALL LETTER C WITH CIRCUMFLEX
;;  Ċ   U010A    266  \.C                  LATIN CAPITAL LETTER C WITH DOT ABOVE
;;  Ċ   U010A    266  \.{C}                LATIN CAPITAL LETTER C WITH DOT ABOVE
;;  ċ   U010B    267  \.c                  LATIN SMALL LETTER C WITH DOT ABOVE
;;  ċ   U010B    267  \.{c}                LATIN SMALL LETTER C WITH DOT ABOVE
;;  Č   U010C    268  \vC                  LATIN CAPITAL LETTER C WITH CARON
;;  Č   U010C    268  \v{C}                LATIN CAPITAL LETTER C WITH CARON
;;  č   U010D    269  \vc                  LATIN SMALL LETTER C WITH CARON
;;  č   U010D    269  \v{c}                LATIN SMALL LETTER C WITH CARON
;;  Ď   U010E    270  \vD                  LATIN CAPITAL LETTER D WITH CARON
;;  Ď   U010E    270  \v{D}                LATIN CAPITAL LETTER D WITH CARON
;;  ď   U010F    271  \vd                  LATIN SMALL LETTER D WITH CARON
;;  ď   U010F    271  \v{d}                LATIN SMALL LETTER D WITH CARON
;;  Ē   U0112    274  \=E                  LATIN CAPITAL LETTER E WITH MACRON
;;  Ē   U0112    274  \={E}                LATIN CAPITAL LETTER E WITH MACRON
;;  ē   U0113    275  \=e                  LATIN SMALL LETTER E WITH MACRON
;;  ē   U0113    275  \={e}                LATIN SMALL LETTER E WITH MACRON
;;  Ĕ   U0114    276  \uE                  LATIN CAPITAL LETTER E WITH BREVE
;;  Ĕ   U0114    276  \u{E}                LATIN CAPITAL LETTER E WITH BREVE
;;  ĕ   U0115    277  \ue                  LATIN SMALL LETTER E WITH BREVE
;;  ĕ   U0115    277  \u{e}                LATIN SMALL LETTER E WITH BREVE
;;  Ė   U0116    278  \.E                  LATIN CAPITAL LETTER E WITH DOT ABOVE
;;  Ė   U0116    278  \.{E}                LATIN CAPITAL LETTER E WITH DOT ABOVE
;;  ė   U0117    279  \.e                  LATIN SMALL LETTER E WITH DOT ABOVE
;;  ė   U0117    279  \.{e}                LATIN SMALL LETTER E WITH DOT ABOVE
;;  Ę   U0118    280  \kE                  LATIN CAPITAL LETTER E WITH OGONEK
;;  Ę   U0118    280  \k{E}                LATIN CAPITAL LETTER E WITH OGONEK
;;  ę   U0119    281  \ke                  LATIN SMALL LETTER E WITH OGONEK
;;  ę   U0119    281  \k{e}                LATIN SMALL LETTER E WITH OGONEK
;;  Ě   U011A    282  \vE                  LATIN CAPITAL LETTER E WITH CARON
;;  Ě   U011A    282  \v{E}                LATIN CAPITAL LETTER E WITH CARON
;;  ě   U011B    283  \ve                  LATIN SMALL LETTER E WITH CARON
;;  ě   U011B    283  \v{e}                LATIN SMALL LETTER E WITH CARON
;;  Ĝ   U011C    284  \^G                  LATIN CAPITAL LETTER G WITH CIRCUMFLEX
;;  Ĝ   U011C    284  \^{G}                LATIN CAPITAL LETTER G WITH CIRCUMFLEX
;;  ĝ   U011D    285  \^g                  LATIN SMALL LETTER G WITH CIRCUMFLEX
;;  ĝ   U011D    285  \^{g}                LATIN SMALL LETTER G WITH CIRCUMFLEX
;;  Ğ   U011E    286  \uG                  LATIN CAPITAL LETTER G WITH BREVE
;;  Ğ   U011E    286  \u{G}                LATIN CAPITAL LETTER G WITH BREVE
;;  ğ   U011F    287  \ug                  LATIN SMALL LETTER G WITH BREVE
;;  ğ   U011F    287  \u{g}                LATIN SMALL LETTER G WITH BREVE
;;  Ġ   U0120    288  \.G                  LATIN CAPITAL LETTER G WITH DOT ABOVE
;;  Ġ   U0120    288  \.{G}                LATIN CAPITAL LETTER G WITH DOT ABOVE
;;  ġ   U0121    289  \.g                  LATIN SMALL LETTER G WITH DOT ABOVE
;;  ġ   U0121    289  \.{g}                LATIN SMALL LETTER G WITH DOT ABOVE
;;  Ģ   U0122    290  \cG                  LATIN CAPITAL LETTER G WITH CEDILLA
;;  Ģ   U0122    290  \c{G}                LATIN CAPITAL LETTER G WITH CEDILLA
;;  ģ   U0123    291  \cg                  LATIN SMALL LETTER G WITH CEDILLA
;;  ģ   U0123    291  \c{g}                LATIN SMALL LETTER G WITH CEDILLA
;;  Ĥ   U0124    292  \^H                  LATIN CAPITAL LETTER H WITH CIRCUMFLEX
;;  Ĥ   U0124    292  \^{H}                LATIN CAPITAL LETTER H WITH CIRCUMFLEX
;;  ĥ   U0125    293  \^h                  LATIN SMALL LETTER H WITH CIRCUMFLEX
;;  ĥ   U0125    293  \^{h}                LATIN SMALL LETTER H WITH CIRCUMFLEX
;;  Ĩ   U0128    296  \~I                  LATIN CAPITAL LETTER I WITH TILDE
;;  Ĩ   U0128    296  \~{I}                LATIN CAPITAL LETTER I WITH TILDE
;;  ĩ   U0129    297  \~i                  LATIN SMALL LETTER I WITH TILDE
;;  ĩ   U0129    297  \~{\i}               LATIN SMALL LETTER I WITH TILDE
;;  ĩ   U0129    297  \~{i}                LATIN SMALL LETTER I WITH TILDE
;;  Ī   U012A    298  \=I                  LATIN CAPITAL LETTER I WITH MACRON
;;  Ī   U012A    298  \={I}                LATIN CAPITAL LETTER I WITH MACRON
;;  ī   U012B    299  \=i                  LATIN SMALL LETTER I WITH MACRON
;;  ī   U012B    299  \={\i}               LATIN SMALL LETTER I WITH MACRON
;;  ī   U012B    299  \={i}                LATIN SMALL LETTER I WITH MACRON
;;  Ĭ   U012C    300  \uI                  LATIN CAPITAL LETTER I WITH BREVE
;;  Ĭ   U012C    300  \u{I}                LATIN CAPITAL LETTER I WITH BREVE
;;  ĭ   U012D    301  \ui                  LATIN SMALL LETTER I WITH BREVE
;;  ĭ   U012D    301  \u{\i}               LATIN SMALL LETTER I WITH BREVE
;;  ĭ   U012D    301  \u{i}                LATIN SMALL LETTER I WITH BREVE
;;  Į   U012E    302  \kI                  LATIN CAPITAL LETTER I WITH OGONEK
;;  Į   U012E    302  \k{I}                LATIN CAPITAL LETTER I WITH OGONEK
;;  į   U012F    303  \ki                  LATIN SMALL LETTER I WITH OGONEK
;;  į   U012F    303  \k{i}                LATIN SMALL LETTER I WITH OGONEK
;;  İ   U0130    304  \.I                  LATIN CAPITAL LETTER I WITH DOT ABOVE
;;  İ   U0130    304  \.{I}                LATIN CAPITAL LETTER I WITH DOT ABOVE
;;  ı   U0131    305  \i                   LATIN SMALL LETTER DOTLESS I
;;  ı   U0131    305  \imath               LATIN SMALL LETTER DOTLESS I
;;  Ĵ   U0134    308  \^J                  LATIN CAPITAL LETTER J WITH CIRCUMFLEX
;;  Ĵ   U0134    308  \^{J}                LATIN CAPITAL LETTER J WITH CIRCUMFLEX
;;  ĵ   U0135    309  \^j                  LATIN SMALL LETTER J WITH CIRCUMFLEX
;;  ĵ   U0135    309  \^{\j}               LATIN SMALL LETTER J WITH CIRCUMFLEX
;;  ĵ   U0135    309  \^{j}                LATIN SMALL LETTER J WITH CIRCUMFLEX
;;  Ķ   U0136    310  \cK                  LATIN CAPITAL LETTER K WITH CEDILLA
;;  Ķ   U0136    310  \c{K}                LATIN CAPITAL LETTER K WITH CEDILLA
;;  ķ   U0137    311  \ck                  LATIN SMALL LETTER K WITH CEDILLA
;;  ķ   U0137    311  \c{k}                LATIN SMALL LETTER K WITH CEDILLA
;;  Ĺ   U0139    313  \'L                  LATIN CAPITAL LETTER L WITH ACUTE
;;  Ĺ   U0139    313  \'{L}                LATIN CAPITAL LETTER L WITH ACUTE
;;  ĺ   U013A    314  \'l                  LATIN SMALL LETTER L WITH ACUTE
;;  ĺ   U013A    314  \'{l}                LATIN SMALL LETTER L WITH ACUTE
;;  Ļ   U013B    315  \cL                  LATIN CAPITAL LETTER L WITH CEDILLA
;;  Ļ   U013B    315  \c{L}                LATIN CAPITAL LETTER L WITH CEDILLA
;;  ļ   U013C    316  \cl                  LATIN SMALL LETTER L WITH CEDILLA
;;  ļ   U013C    316  \c{l}                LATIN SMALL LETTER L WITH CEDILLA
;;  Ľ   U013D    317  \vL                  LATIN CAPITAL LETTER L WITH CARON
;;  Ľ   U013D    317  \v{L}                LATIN CAPITAL LETTER L WITH CARON
;;  ľ   U013E    318  \vl                  LATIN SMALL LETTER L WITH CARON
;;  ľ   U013E    318  \v{l}                LATIN SMALL LETTER L WITH CARON
;;  Ł   U0141    321  \L                   LATIN CAPITAL LETTER L WITH STROKE
;;  ł   U0142    322  \l                   LATIN SMALL LETTER L WITH STROKE
;;  Ń   U0143    323  \'N                  LATIN CAPITAL LETTER N WITH ACUTE
;;  Ń   U0143    323  \'{N}                LATIN CAPITAL LETTER N WITH ACUTE
;;  ń   U0144    324  \'n                  LATIN SMALL LETTER N WITH ACUTE
;;  ń   U0144    324  \'{n}                LATIN SMALL LETTER N WITH ACUTE
;;  Ņ   U0145    325  \cN                  LATIN CAPITAL LETTER N WITH CEDILLA
;;  Ņ   U0145    325  \c{N}                LATIN CAPITAL LETTER N WITH CEDILLA
;;  ņ   U0146    326  \cn                  LATIN SMALL LETTER N WITH CEDILLA
;;  ņ   U0146    326  \c{n}                LATIN SMALL LETTER N WITH CEDILLA
;;  Ň   U0147    327  \vN                  LATIN CAPITAL LETTER N WITH CARON
;;  Ň   U0147    327  \v{N}                LATIN CAPITAL LETTER N WITH CARON
;;  ň   U0148    328  \vn                  LATIN SMALL LETTER N WITH CARON
;;  ň   U0148    328  \v{n}                LATIN SMALL LETTER N WITH CARON
;;  Ō   U014C    332  \=O                  LATIN CAPITAL LETTER O WITH MACRON
;;  Ō   U014C    332  \={O}                LATIN CAPITAL LETTER O WITH MACRON
;;  ō   U014D    333  \=o                  LATIN SMALL LETTER O WITH MACRON
;;  ō   U014D    333  \={o}                LATIN SMALL LETTER O WITH MACRON
;;  Ŏ   U014E    334  \uO                  LATIN CAPITAL LETTER O WITH BREVE
;;  Ŏ   U014E    334  \u{O}                LATIN CAPITAL LETTER O WITH BREVE
;;  ŏ   U014F    335  \uo                  LATIN SMALL LETTER O WITH BREVE
;;  ŏ   U014F    335  \u{o}                LATIN SMALL LETTER O WITH BREVE
;;  Ő   U0150    336  \HO                  LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
;;  Ő   U0150    336  \H{O}                LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
;;  ő   U0151    337  \Ho                  LATIN SMALL LETTER O WITH DOUBLE ACUTE
;;  ő   U0151    337  \H{o}                LATIN SMALL LETTER O WITH DOUBLE ACUTE
;;  ő   U0151    337  \Uo                  LATIN SMALL LETTER O WITH DOUBLE ACUTE
;;  ő   U0151    337  \U{o}                LATIN SMALL LETTER O WITH DOUBLE ACUTE
;;  Œ   U0152    338  \OE                  LATIN CAPITAL LIGATURE OE
;;  œ   U0153    339  \oe                  LATIN SMALL LIGATURE OE
;;  Ŕ   U0154    340  \'R                  LATIN CAPITAL LETTER R WITH ACUTE
;;  Ŕ   U0154    340  \'{R}                LATIN CAPITAL LETTER R WITH ACUTE
;;  ŕ   U0155    341  \'r                  LATIN SMALL LETTER R WITH ACUTE
;;  ŕ   U0155    341  \'{r}                LATIN SMALL LETTER R WITH ACUTE
;;  Ŗ   U0156    342  \cR                  LATIN CAPITAL LETTER R WITH CEDILLA
;;  Ŗ   U0156    342  \c{R}                LATIN CAPITAL LETTER R WITH CEDILLA
;;  ŗ   U0157    343  \cr                  LATIN SMALL LETTER R WITH CEDILLA
;;  ŗ   U0157    343  \c{r}                LATIN SMALL LETTER R WITH CEDILLA
;;  Ř   U0158    344  \vR                  LATIN CAPITAL LETTER R WITH CARON
;;  Ř   U0158    344  \v{R}                LATIN CAPITAL LETTER R WITH CARON
;;  ř   U0159    345  \vr                  LATIN SMALL LETTER R WITH CARON
;;  ř   U0159    345  \v{r}                LATIN SMALL LETTER R WITH CARON
;;  Ś   U015A    346  \'S                  LATIN CAPITAL LETTER S WITH ACUTE
;;  Ś   U015A    346  \'{S}                LATIN CAPITAL LETTER S WITH ACUTE
;;  ś   U015B    347  \'s                  LATIN SMALL LETTER S WITH ACUTE
;;  ś   U015B    347  \'{s}                LATIN SMALL LETTER S WITH ACUTE
;;  Ŝ   U015C    348  \^S                  LATIN CAPITAL LETTER S WITH CIRCUMFLEX
;;  Ŝ   U015C    348  \^{S}                LATIN CAPITAL LETTER S WITH CIRCUMFLEX
;;  ŝ   U015D    349  \^s                  LATIN SMALL LETTER S WITH CIRCUMFLEX
;;  ŝ   U015D    349  \^{s}                LATIN SMALL LETTER S WITH CIRCUMFLEX
;;  Ş   U015E    350  \cS                  LATIN CAPITAL LETTER S WITH CEDILLA
;;  Ş   U015E    350  \c{S}                LATIN CAPITAL LETTER S WITH CEDILLA
;;  ş   U015F    351  \cs                  LATIN SMALL LETTER S WITH CEDILLA
;;  ş   U015F    351  \c{s}                LATIN SMALL LETTER S WITH CEDILLA
;;  Š   U0160    352  \vS                  LATIN CAPITAL LETTER S WITH CARON
;;  Š   U0160    352  \v{S}                LATIN CAPITAL LETTER S WITH CARON
;;  š   U0161    353  \vs                  LATIN SMALL LETTER S WITH CARON
;;  š   U0161    353  \v{s}                LATIN SMALL LETTER S WITH CARON
;;  Ţ   U0162    354  \cT                  LATIN CAPITAL LETTER T WITH CEDILLA
;;  Ţ   U0162    354  \c{T}                LATIN CAPITAL LETTER T WITH CEDILLA
;;  ţ   U0163    355  \ct                  LATIN SMALL LETTER T WITH CEDILLA
;;  ţ   U0163    355  \c{t}                LATIN SMALL LETTER T WITH CEDILLA
;;  Ť   U0164    356  \vT                  LATIN CAPITAL LETTER T WITH CARON
;;  Ť   U0164    356  \v{T}                LATIN CAPITAL LETTER T WITH CARON
;;  ť   U0165    357  \vt                  LATIN SMALL LETTER T WITH CARON
;;  ť   U0165    357  \v{t}                LATIN SMALL LETTER T WITH CARON
;;  Ũ   U0168    360  \~U                  LATIN CAPITAL LETTER U WITH TILDE
;;  Ũ   U0168    360  \~{U}                LATIN CAPITAL LETTER U WITH TILDE
;;  ũ   U0169    361  \~u                  LATIN SMALL LETTER U WITH TILDE
;;  ũ   U0169    361  \~{u}                LATIN SMALL LETTER U WITH TILDE
;;  Ū   U016A    362  \=U                  LATIN CAPITAL LETTER U WITH MACRON
;;  Ū   U016A    362  \={U}                LATIN CAPITAL LETTER U WITH MACRON
;;  ū   U016B    363  \=u                  LATIN SMALL LETTER U WITH MACRON
;;  ū   U016B    363  \={u}                LATIN SMALL LETTER U WITH MACRON
;;  Ŭ   U016C    364  \uU                  LATIN CAPITAL LETTER U WITH BREVE
;;  Ŭ   U016C    364  \u{U}                LATIN CAPITAL LETTER U WITH BREVE
;;  ŭ   U016D    365  \uu                  LATIN SMALL LETTER U WITH BREVE
;;  ŭ   U016D    365  \u{u}                LATIN SMALL LETTER U WITH BREVE
;;  Ű   U0170    368  \HU                  LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
;;  Ű   U0170    368  \H{U}                LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
;;  ű   U0171    369  \Hu                  LATIN SMALL LETTER U WITH DOUBLE ACUTE
;;  ű   U0171    369  \H{u}                LATIN SMALL LETTER U WITH DOUBLE ACUTE
;;  Ų   U0172    370  \kU                  LATIN CAPITAL LETTER U WITH OGONEK
;;  Ų   U0172    370  \k{U}                LATIN CAPITAL LETTER U WITH OGONEK
;;  ų   U0173    371  \ku                  LATIN SMALL LETTER U WITH OGONEK
;;  ų   U0173    371  \k{u}                LATIN SMALL LETTER U WITH OGONEK
;;  Ŵ   U0174    372  \^W                  LATIN CAPITAL LETTER W WITH CIRCUMFLEX
;;  Ŵ   U0174    372  \^{W}                LATIN CAPITAL LETTER W WITH CIRCUMFLEX
;;  ŵ   U0175    373  \^w                  LATIN SMALL LETTER W WITH CIRCUMFLEX
;;  ŵ   U0175    373  \^{w}                LATIN SMALL LETTER W WITH CIRCUMFLEX
;;  Ŷ   U0176    374  \^Y                  LATIN CAPITAL LETTER Y WITH CIRCUMFLEX
;;  Ŷ   U0176    374  \^{Y}                LATIN CAPITAL LETTER Y WITH CIRCUMFLEX
;;  ŷ   U0177    375  \^y                  LATIN SMALL LETTER Y WITH CIRCUMFLEX
;;  ŷ   U0177    375  \^{y}                LATIN SMALL LETTER Y WITH CIRCUMFLEX
;;  Ÿ   U0178    376  \"Y                  LATIN CAPITAL LETTER Y WITH DIAERESIS
;;  Ÿ   U0178    376  \"{Y}                LATIN CAPITAL LETTER Y WITH DIAERESIS
;;  Ź   U0179    377  \'Z                  LATIN CAPITAL LETTER Z WITH ACUTE
;;  Ź   U0179    377  \'{Z}                LATIN CAPITAL LETTER Z WITH ACUTE
;;  ź   U017A    378  \'z                  LATIN SMALL LETTER Z WITH ACUTE
;;  ź   U017A    378  \'{z}                LATIN SMALL LETTER Z WITH ACUTE
;;  Ż   U017B    379  \.Z                  LATIN CAPITAL LETTER Z WITH DOT ABOVE
;;  Ż   U017B    379  \.{Z}                LATIN CAPITAL LETTER Z WITH DOT ABOVE
;;  ż   U017C    380  \.z                  LATIN SMALL LETTER Z WITH DOT ABOVE
;;  ż   U017C    380  \.{z}                LATIN SMALL LETTER Z WITH DOT ABOVE
;;  Ž   U017D    381  \vZ                  LATIN CAPITAL LETTER Z WITH CARON
;;  Ž   U017D    381  \v{Z}                LATIN CAPITAL LETTER Z WITH CARON
;;  ž   U017E    382  \vz                  LATIN SMALL LETTER Z WITH CARON
;;  ž   U017E    382  \v{z}                LATIN SMALL LETTER Z WITH CARON
;;  ƛ   U019B    411  \lambdabar           LATIN SMALL LETTER LAMBDA WITH STROKE
;;  Ǎ   U01CD    461  \vA                  LATIN CAPITAL LETTER A WITH CARON
;;  Ǎ   U01CD    461  \v{A}                LATIN CAPITAL LETTER A WITH CARON
;;  ǎ   U01CE    462  \va                  LATIN SMALL LETTER A WITH CARON
;;  ǎ   U01CE    462  \v{a}                LATIN SMALL LETTER A WITH CARON
;;  Ǐ   U01CF    463  \vI                  LATIN CAPITAL LETTER I WITH CARON
;;  Ǐ   U01CF    463  \v{I}                LATIN CAPITAL LETTER I WITH CARON
;;  ǐ   U01D0    464  \vi                  LATIN SMALL LETTER I WITH CARON
;;  ǐ   U01D0    464  \v{\i}               LATIN SMALL LETTER I WITH CARON
;;  ǐ   U01D0    464  \v{i}                LATIN SMALL LETTER I WITH CARON
;;  Ǒ   U01D1    465  \vO                  LATIN CAPITAL LETTER O WITH CARON
;;  Ǒ   U01D1    465  \v{O}                LATIN CAPITAL LETTER O WITH CARON
;;  ǒ   U01D2    466  \vo                  LATIN SMALL LETTER O WITH CARON
;;  ǒ   U01D2    466  \v{o}                LATIN SMALL LETTER O WITH CARON
;;  Ǔ   U01D3    467  \vU                  LATIN CAPITAL LETTER U WITH CARON
;;  Ǔ   U01D3    467  \v{U}                LATIN CAPITAL LETTER U WITH CARON
;;  ǔ   U01D4    468  \vu                  LATIN SMALL LETTER U WITH CARON
;;  ǔ   U01D4    468  \v{u}                LATIN SMALL LETTER U WITH CARON
;;  Ǖ   U01D5    469  \"\=U                LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON
;;  Ǖ   U01D5    469  \"\={U}              LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON
;;  ǖ   U01D6    470  \"\=u                LATIN SMALL LETTER U WITH DIAERESIS AND MACRON
;;  ǖ   U01D6    470  \"\={u}              LATIN SMALL LETTER U WITH DIAERESIS AND MACRON
;;  Ǘ   U01D7    471  \"\'U                LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
;;  Ǘ   U01D7    471  \"\'{U}              LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
;;  ǘ   U01D8    472  \"\'u                LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
;;  ǘ   U01D8    472  \"\'{u}              LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
;;  Ǚ   U01D9    473  \"\vU                LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON
;;  Ǚ   U01D9    473  \"\v{U}              LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON
;;  ǚ   U01DA    474  \"\vu                LATIN SMALL LETTER U WITH DIAERESIS AND CARON
;;  ǚ   U01DA    474  \"\v{u}              LATIN SMALL LETTER U WITH DIAERESIS AND CARON
;;  Ǜ   U01DB    475  \"\`U                LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
;;  Ǜ   U01DB    475  \"\`{U}              LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
;;  ǜ   U01DC    476  \"\`u                LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
;;  ǜ   U01DC    476  \"\`{u}              LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
;;  Ǟ   U01DE    478  \"\=A                LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON
;;  Ǟ   U01DE    478  \"\={A}              LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON
;;  ǟ   U01DF    479  \"\=a                LATIN SMALL LETTER A WITH DIAERESIS AND MACRON
;;  ǟ   U01DF    479  \"\={a}              LATIN SMALL LETTER A WITH DIAERESIS AND MACRON
;;  Ǡ   U01E0    480  \.\=A                LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON
;;  Ǡ   U01E0    480  \.\={A}              LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON
;;  ǡ   U01E1    481  \.\=a                LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON
;;  ǡ   U01E1    481  \.\={a}              LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON
;;  Ǣ   U01E2    482  \=\AE                LATIN CAPITAL LETTER AE WITH MACRON
;;  Ǣ   U01E2    482  \={\AE}              LATIN CAPITAL LETTER AE WITH MACRON
;;  ǣ   U01E3    483  \=\ae                LATIN SMALL LETTER AE WITH MACRON
;;  ǣ   U01E3    483  \={\ae}              LATIN SMALL LETTER AE WITH MACRON
;;  Ǧ   U01E6    486  \vG                  LATIN CAPITAL LETTER G WITH CARON
;;  Ǧ   U01E6    486  \v{G}                LATIN CAPITAL LETTER G WITH CARON
;;  ǧ   U01E7    487  \vg                  LATIN SMALL LETTER G WITH CARON
;;  ǧ   U01E7    487  \v{g}                LATIN SMALL LETTER G WITH CARON
;;  Ǩ   U01E8    488  \vK                  LATIN CAPITAL LETTER K WITH CARON
;;  Ǩ   U01E8    488  \v{K}                LATIN CAPITAL LETTER K WITH CARON
;;  ǩ   U01E9    489  \vk                  LATIN SMALL LETTER K WITH CARON
;;  ǩ   U01E9    489  \v{k}                LATIN SMALL LETTER K WITH CARON
;;  Ǫ   U01EA    490  \kO                  LATIN CAPITAL LETTER O WITH OGONEK
;;  Ǫ   U01EA    490  \k{O}                LATIN CAPITAL LETTER O WITH OGONEK
;;  ǫ   U01EB    491  \ko                  LATIN SMALL LETTER O WITH OGONEK
;;  ǫ   U01EB    491  \k{o}                LATIN SMALL LETTER O WITH OGONEK
;;  Ǭ   U01EC    492  \k\=O                LATIN CAPITAL LETTER O WITH OGONEK AND MACRON
;;  Ǭ   U01EC    492  \k\={O}              LATIN CAPITAL LETTER O WITH OGONEK AND MACRON
;;  ǭ   U01ED    493  \k\=o                LATIN SMALL LETTER O WITH OGONEK AND MACRON
;;  ǭ   U01ED    493  \k\={o}              LATIN SMALL LETTER O WITH OGONEK AND MACRON
;;  ǰ   U01F0    496  \vj                  LATIN SMALL LETTER J WITH CARON
;;  ǰ   U01F0    496  \v{\j}               LATIN SMALL LETTER J WITH CARON
;;  ǰ   U01F0    496  \v{j}                LATIN SMALL LETTER J WITH CARON
;;  Ǵ   U01F4    500  \'G                  LATIN CAPITAL LETTER G WITH ACUTE
;;  Ǵ   U01F4    500  \'{G}                LATIN CAPITAL LETTER G WITH ACUTE
;;  ǵ   U01F5    501  \'g                  LATIN SMALL LETTER G WITH ACUTE
;;  ǵ   U01F5    501  \'{g}                LATIN SMALL LETTER G WITH ACUTE
;;  Ǹ   U01F8    504  \`N                  LATIN CAPITAL LETTER N WITH GRAVE
;;  Ǹ   U01F8    504  \`{N}                LATIN CAPITAL LETTER N WITH GRAVE
;;  ǹ   U01F9    505  \`n                  LATIN SMALL LETTER N WITH GRAVE
;;  ǹ   U01F9    505  \`{n}                LATIN SMALL LETTER N WITH GRAVE
;;  Ǽ   U01FC    508  \'\AE                LATIN CAPITAL LETTER AE WITH ACUTE
;;  Ǽ   U01FC    508  \'{\AE}              LATIN CAPITAL LETTER AE WITH ACUTE
;;  ǽ   U01FD    509  \'\ae                LATIN SMALL LETTER AE WITH ACUTE
;;  ǽ   U01FD    509  \'{\ae}              LATIN SMALL LETTER AE WITH ACUTE
;;  Ǿ   U01FE    510  \'\O                 LATIN CAPITAL LETTER O WITH STROKE AND ACUTE
;;  Ǿ   U01FE    510  \'{\O}               LATIN CAPITAL LETTER O WITH STROKE AND ACUTE
;;  ǿ   U01FF    511  \'\o                 LATIN SMALL LETTER O WITH STROKE AND ACUTE
;;  ǿ   U01FF    511  \'{\o}               LATIN SMALL LETTER O WITH STROKE AND ACUTE
;;  Ȟ   U021E    542  \vH                  LATIN CAPITAL LETTER H WITH CARON
;;  Ȟ   U021E    542  \v{H}                LATIN CAPITAL LETTER H WITH CARON
;;  ȟ   U021F    543  \vh                  LATIN SMALL LETTER H WITH CARON
;;  ȟ   U021F    543  \v{h}                LATIN SMALL LETTER H WITH CARON
;;  Ȧ   U0226    550  \.A                  LATIN CAPITAL LETTER A WITH DOT ABOVE
;;  Ȧ   U0226    550  \.{A}                LATIN CAPITAL LETTER A WITH DOT ABOVE
;;  ȧ   U0227    551  \.a                  LATIN SMALL LETTER A WITH DOT ABOVE
;;  ȧ   U0227    551  \.{a}                LATIN SMALL LETTER A WITH DOT ABOVE
;;  Ȩ   U0228    552  \cE                  LATIN CAPITAL LETTER E WITH CEDILLA
;;  Ȩ   U0228    552  \c{E}                LATIN CAPITAL LETTER E WITH CEDILLA
;;  ȩ   U0229    553  \ce                  LATIN SMALL LETTER E WITH CEDILLA
;;  ȩ   U0229    553  \c{e}                LATIN SMALL LETTER E WITH CEDILLA
;;  Ȫ   U022A    554  \"\=O                LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON
;;  Ȫ   U022A    554  \"\={O}              LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON
;;  ȫ   U022B    555  \"\=o                LATIN SMALL LETTER O WITH DIAERESIS AND MACRON
;;  ȫ   U022B    555  \"\={o}              LATIN SMALL LETTER O WITH DIAERESIS AND MACRON
;;  Ȭ   U022C    556  \~\=O                LATIN CAPITAL LETTER O WITH TILDE AND MACRON
;;  Ȭ   U022C    556  \~\={O}              LATIN CAPITAL LETTER O WITH TILDE AND MACRON
;;  ȭ   U022D    557  \~\=o                LATIN SMALL LETTER O WITH TILDE AND MACRON
;;  ȭ   U022D    557  \~\={o}              LATIN SMALL LETTER O WITH TILDE AND MACRON
;;  Ȯ   U022E    558  \.O                  LATIN CAPITAL LETTER O WITH DOT ABOVE
;;  Ȯ   U022E    558  \.{O}                LATIN CAPITAL LETTER O WITH DOT ABOVE
;;  ȯ   U022F    559  \.o                  LATIN SMALL LETTER O WITH DOT ABOVE
;;  ȯ   U022F    559  \.{o}                LATIN SMALL LETTER O WITH DOT ABOVE
;;  Ȱ   U0230    560  \.\=O                LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON
;;  Ȱ   U0230    560  \.\={O}              LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON
;;  ȱ   U0231    561  \.\=o                LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON
;;  ȱ   U0231    561  \.\={o}              LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON
;;  Ȳ   U0232    562  \=Y                  LATIN CAPITAL LETTER Y WITH MACRON
;;  Ȳ   U0232    562  \={Y}                LATIN CAPITAL LETTER Y WITH MACRON
;;  ȳ   U0233    563  \=y                  LATIN SMALL LETTER Y WITH MACRON
;;  ȳ   U0233    563  \={y}                LATIN SMALL LETTER Y WITH MACRON
;;  ʰ   U02B0    688  ^h                   MODIFIER LETTER SMALL H
;;  ʱ   U02B1    689  ^\h hook             MODIFIER LETTER SMALL H WITH HOOK
;;  ʱ   U02B1    689  ^\h with hook        MODIFIER LETTER SMALL H WITH HOOK
;;  ʲ   U02B2    690  ^j                   MODIFIER LETTER SMALL J
;;  ʳ   U02B3    691  ^r                   MODIFIER LETTER SMALL R
;;  ʴ   U02B4    692  ^\turned r           MODIFIER LETTER SMALL TURNED R
;;  ʵ   U02B5    693  ^\turned r hook      MODIFIER LETTER SMALL TURNED R WITH HOOK
;;  ʵ   U02B5    693  ^\turned r with hook MODIFIER LETTER SMALL TURNED R WITH HOOK
;;  ʶ   U02B6    694  ^\capital inverted r MODIFIER LETTER SMALL CAPITAL INVERTED R
;;  ʷ   U02B7    695  ^w                   MODIFIER LETTER SMALL W
;;  ʸ   U02B8    696  ^y                   MODIFIER LETTER SMALL Y
;;  ˇ   U02C7    711  \v{}                 CARON
;;  ˘   U02D8    728  \u{}                 BREVE
;;  ˙   U02D9    729  \.{}                 DOT ABOVE
;;  ˛   U02DB    731  \k{}                 OGONEK
;;  ˜   U02DC    732  \~{}                 SMALL TILDE
;;  ˝   U02DD    733  \H{}                 DOUBLE ACUTE ACCENT
;;  ˠ   U02E0    736  ^\gamma              MODIFIER LETTER SMALL GAMMA
;;  ˡ   U02E1    737  ^l                   MODIFIER LETTER SMALL L
;;  ˢ   U02E2    738  ^s                   MODIFIER LETTER SMALL S
;;  ˣ   U02E3    739  ^x                   MODIFIER LETTER SMALL X
;;  ˤ   U02E4    740  ^\reversed glottal stop MODIFIER LETTER SMALL REVERSED GLOTTAL STOP
;;  ̀    U0300    768  \`                   COMBINING GRAVE ACCENT
;;  ́    U0301    769  \'                   COMBINING ACUTE ACCENT
;;  ̂    U0302    770  \^                   COMBINING CIRCUMFLEX ACCENT
;;  ̃    U0303    771  \~                   COMBINING TILDE
;;  ̄    U0304    772  \=                   COMBINING MACRON
;;  ̆    U0306    774  \u                   COMBINING BREVE
;;  ̇    U0307    775  \.                   COMBINING DOT ABOVE
;;  ̈    U0308    776  \"                   COMBINING DIAERESIS
;;  ̋    U030B    779  \H                   COMBINING DOUBLE ACUTE ACCENT
;;  ̌    U030C    780  \v                   COMBINING CARON
;;  ̣    U0323    803  \d                   COMBINING DOT BELOW
;;  ̧    U0327    807  \c                   COMBINING CEDILLA
;;  ̨    U0328    808  \k                   COMBINING OGONEK
;;  ̱    U0331    817  \b                   COMBINING MACRON BELOW
;;  ̸    U0338    824  \not                 COMBINING LONG SOLIDUS OVERLAY
;;  Ͱ   U0370    880  \Heta                GREEK CAPITAL LETTER HETA
;;  ͱ   U0371    881  \heta                GREEK SMALL LETTER HETA
;;  Ϳ   U037F    895  \Yot                 GREEK CAPITAL LETTER YOT
;;  Α   U0391    913  \Alpha               GREEK CAPITAL LETTER ALPHA
;;  Β   U0392    914  \Beta                GREEK CAPITAL LETTER BETA
;;  Γ   U0393    915  \Gamma               GREEK CAPITAL LETTER GAMMA
;;  Δ   U0394    916  \Delta               GREEK CAPITAL LETTER DELTA
;;  Ε   U0395    917  \Epsilon             GREEK CAPITAL LETTER EPSILON
;;  Ζ   U0396    918  \Zeta                GREEK CAPITAL LETTER ZETA
;;  Η   U0397    919  \Eta                 GREEK CAPITAL LETTER ETA
;;  Θ   U0398    920  \Theta               GREEK CAPITAL LETTER THETA
;;  Ι   U0399    921  \Iota                GREEK CAPITAL LETTER IOTA
;;  Κ   U039A    922  \Kappa               GREEK CAPITAL LETTER KAPPA
;;  Λ   U039B    923  \Lambda              GREEK CAPITAL LETTER LAMDA
;;  Λ   U039B    923  \Lamda               GREEK CAPITAL LETTER LAMDA
;;  Μ   U039C    924  \Mu                  GREEK CAPITAL LETTER MU
;;  Ν   U039D    925  \Nu                  GREEK CAPITAL LETTER NU
;;  Ξ   U039E    926  \Xi                  GREEK CAPITAL LETTER XI
;;  Ο   U039F    927  \Omicron             GREEK CAPITAL LETTER OMICRON
;;  Π   U03A0    928  \Pi                  GREEK CAPITAL LETTER PI
;;  Ρ   U03A1    929  \Rho                 GREEK CAPITAL LETTER RHO
;;  Σ   U03A3    931  \Sigma               GREEK CAPITAL LETTER SIGMA
;;  Τ   U03A4    932  \Tau                 GREEK CAPITAL LETTER TAU
;;  Υ   U03A5    933  \Upsilon             GREEK CAPITAL LETTER UPSILON
;;  Φ   U03A6    934  \Phi                 GREEK CAPITAL LETTER PHI
;;  Χ   U03A7    935  \Chi                 GREEK CAPITAL LETTER CHI
;;  Ψ   U03A8    936  \Psi                 GREEK CAPITAL LETTER PSI
;;  Ω   U03A9    937  \Omega               GREEK CAPITAL LETTER OMEGA
;;  α   U03B1    945  \alpha               GREEK SMALL LETTER ALPHA
;;  β   U03B2    946  \beta                GREEK SMALL LETTER BETA
;;  γ   U03B3    947  \gamma               GREEK SMALL LETTER GAMMA
;;  δ   U03B4    948  \delta               GREEK SMALL LETTER DELTA
;;  ε   U03B5    949  \varepsilon          GREEK SMALL LETTER EPSILON
;;  ζ   U03B6    950  \zeta                GREEK SMALL LETTER ZETA
;;  η   U03B7    951  \eta                 GREEK SMALL LETTER ETA
;;  θ   U03B8    952  \theta               GREEK SMALL LETTER THETA
;;  ι   U03B9    953  \iota                GREEK SMALL LETTER IOTA
;;  κ   U03BA    954  \kappa               GREEK SMALL LETTER KAPPA
;;  λ   U03BB    955  \lambda              GREEK SMALL LETTER LAMDA
;;  λ   U03BB    955  \lamda               GREEK SMALL LETTER LAMDA
;;  μ   U03BC    956  \mu                  GREEK SMALL LETTER MU
;;  ν   U03BD    957  \nu                  GREEK SMALL LETTER NU
;;  ξ   U03BE    958  \xi                  GREEK SMALL LETTER XI
;;  ο   U03BF    959  \omicron             GREEK SMALL LETTER OMICRON
;;  π   U03C0    960  \pi                  GREEK SMALL LETTER PI
;;  ρ   U03C1    961  \rho                 GREEK SMALL LETTER RHO
;;  ς   U03C2    962  \varsigma            GREEK SMALL LETTER FINAL SIGMA
;;  σ   U03C3    963  \sigma               GREEK SMALL LETTER SIGMA
;;  τ   U03C4    964  \tau                 GREEK SMALL LETTER TAU
;;  υ   U03C5    965  \upsilon             GREEK SMALL LETTER UPSILON
;;  φ   U03C6    966  \phi                 GREEK SMALL LETTER PHI
;;  φ   U03C6    966  \straightphi         GREEK SMALL LETTER PHI
;;  χ   U03C7    967  \chi                 GREEK SMALL LETTER CHI
;;  ψ   U03C8    968  \psi                 GREEK SMALL LETTER PSI
;;  ω   U03C9    969  \omega               GREEK SMALL LETTER OMEGA
;;  ϐ   U03D0    976  \varbeta             GREEK BETA SYMBOL
;;  ϑ   U03D1    977  \vartheta            GREEK THETA SYMBOL
;;  ϕ   U03D5    981  \varphi              GREEK PHI SYMBOL
;;  ϖ   U03D6    982  \varpi               GREEK PI SYMBOL
;;  ϗ   U03D7    983  \varkai              GREEK KAI SYMBOL
;;  Ϛ   U03DA    986  \Stigma              GREEK LETTER STIGMA
;;  ϛ   U03DB    987  \stigma              GREEK SMALL LETTER STIGMA
;;  Ϝ   U03DC    988  \Digamma             GREEK LETTER DIGAMMA
;;  ϝ   U03DD    989  \digamma             GREEK SMALL LETTER DIGAMMA
;;  Ϟ   U03DE    990  \Koppa               GREEK LETTER KOPPA
;;  ϟ   U03DF    991  \koppa               GREEK SMALL LETTER KOPPA
;;  Ϡ   U03E0    992  \Sampi               GREEK LETTER SAMPI
;;  ϡ   U03E1    993  \sampi               GREEK SMALL LETTER SAMPI
;;  Ϣ   U03E2    994  \Shei                COPTIC CAPITAL LETTER SHEI
;;  ϣ   U03E3    995  \shei                COPTIC SMALL LETTER SHEI
;;  Ϥ   U03E4    996  \Fei                 COPTIC CAPITAL LETTER FEI
;;  ϥ   U03E5    997  \fei                 COPTIC SMALL LETTER FEI
;;  Ϧ   U03E6    998  \Khei                COPTIC CAPITAL LETTER KHEI
;;  ϧ   U03E7    999  \khei                COPTIC SMALL LETTER KHEI
;;  Ϩ   U03E8   1000  \Hori                COPTIC CAPITAL LETTER HORI
;;  ϩ   U03E9   1001  \hori                COPTIC SMALL LETTER HORI
;;  Ϫ   U03EA   1002  \Gangia              COPTIC CAPITAL LETTER GANGIA
;;  ϫ   U03EB   1003  \gangia              COPTIC SMALL LETTER GANGIA
;;  Ϭ   U03EC   1004  \Shima               COPTIC CAPITAL LETTER SHIMA
;;  ϭ   U03ED   1005  \shima               COPTIC SMALL LETTER SHIMA
;;  Ϯ   U03EE   1006  \Dei                 COPTIC CAPITAL LETTER DEI
;;  ϯ   U03EF   1007  \dei                 COPTIC SMALL LETTER DEI
;;  ϰ   U03F0   1008  \varkappa            GREEK KAPPA SYMBOL
;;  ϱ   U03F1   1009  \varrho              GREEK RHO SYMBOL
;;  ϵ   U03F5   1013  \epsilon             GREEK LUNATE EPSILON SYMBOL
;;  Ϸ   U03F7   1015  \Sho                 GREEK CAPITAL LETTER SHO
;;  ϸ   U03F8   1016  \sho                 GREEK SMALL LETTER SHO
;;  Ϻ   U03FA   1018  \San                 GREEK CAPITAL LETTER SAN
;;  ϻ   U03FB   1019  \san                 GREEK SMALL LETTER SAN
;;  ؋   U060B   1547  \afghani             AFGHANI SIGN
;;  ฿   U0E3F   3647  \textbaht            THAI CURRENCY SYMBOL BAHT
;;  ᴬ   U1D2C   7468  ^A                   MODIFIER LETTER CAPITAL A
;;  ᴭ   U1D2D   7469  ^\Ae                 MODIFIER LETTER CAPITAL AE
;;  ᴮ   U1D2E   7470  ^B                   MODIFIER LETTER CAPITAL B
;;  ᴯ   U1D2F   7471  ^\Barred B           MODIFIER LETTER CAPITAL BARRED B
;;  ᴰ   U1D30   7472  ^D                   MODIFIER LETTER CAPITAL D
;;  ᴱ   U1D31   7473  ^E                   MODIFIER LETTER CAPITAL E
;;  ᴲ   U1D32   7474  ^\Reversed E         MODIFIER LETTER CAPITAL REVERSED E
;;  ᴳ   U1D33   7475  ^G                   MODIFIER LETTER CAPITAL G
;;  ᴴ   U1D34   7476  ^H                   MODIFIER LETTER CAPITAL H
;;  ᴵ   U1D35   7477  ^I                   MODIFIER LETTER CAPITAL I
;;  ᴶ   U1D36   7478  ^J                   MODIFIER LETTER CAPITAL J
;;  ᴷ   U1D37   7479  ^K                   MODIFIER LETTER CAPITAL K
;;  ᴸ   U1D38   7480  ^L                   MODIFIER LETTER CAPITAL L
;;  ᴹ   U1D39   7481  ^M                   MODIFIER LETTER CAPITAL M
;;  ᴺ   U1D3A   7482  ^N                   MODIFIER LETTER CAPITAL N
;;  ᴻ   U1D3B   7483  ^\Reversed N         MODIFIER LETTER CAPITAL REVERSED N
;;  ᴼ   U1D3C   7484  ^O                   MODIFIER LETTER CAPITAL O
;;  ᴽ   U1D3D   7485  ^\Ou                 MODIFIER LETTER CAPITAL OU
;;  ᴾ   U1D3E   7486  ^P                   MODIFIER LETTER CAPITAL P
;;  ᴿ   U1D3F   7487  ^R                   MODIFIER LETTER CAPITAL R
;;  ᵀ   U1D40   7488  ^T                   MODIFIER LETTER CAPITAL T
;;  ᵁ   U1D41   7489  ^U                   MODIFIER LETTER CAPITAL U
;;  ᵂ   U1D42   7490  ^W                   MODIFIER LETTER CAPITAL W
;;  ᵃ   U1D43   7491  ^a                   MODIFIER LETTER SMALL A
;;  ᵄ   U1D44   7492  ^\turned a           MODIFIER LETTER SMALL TURNED A
;;  ᵅ   U1D45   7493  ^\alpha              MODIFIER LETTER SMALL ALPHA
;;  ᵆ   U1D46   7494  ^\turned ae          MODIFIER LETTER SMALL TURNED AE
;;  ᵇ   U1D47   7495  ^b                   MODIFIER LETTER SMALL B
;;  ᵈ   U1D48   7496  ^d                   MODIFIER LETTER SMALL D
;;  ᵉ   U1D49   7497  ^e                   MODIFIER LETTER SMALL E
;;  ᵊ   U1D4A   7498  ^\schwa              MODIFIER LETTER SMALL SCHWA
;;  ᵋ   U1D4B   7499  ^\open e             MODIFIER LETTER SMALL OPEN E
;;  ᵌ   U1D4C   7500  ^\turned open e      MODIFIER LETTER SMALL TURNED OPEN E
;;  ᵍ   U1D4D   7501  ^g                   MODIFIER LETTER SMALL G
;;  ᵎ   U1D4E   7502  ^\turned i           MODIFIER LETTER SMALL TURNED I
;;  ᵏ   U1D4F   7503  ^k                   MODIFIER LETTER SMALL K
;;  ᵐ   U1D50   7504  ^m                   MODIFIER LETTER SMALL M
;;  ᵑ   U1D51   7505  ^\eng                MODIFIER LETTER SMALL ENG
;;  ᵒ   U1D52   7506  ^o                   MODIFIER LETTER SMALL O
;;  ᵓ   U1D53   7507  ^\open o             MODIFIER LETTER SMALL OPEN O
;;  ᵔ   U1D54   7508  ^\top half o         MODIFIER LETTER SMALL TOP HALF O
;;  ᵕ   U1D55   7509  ^\bottom half o      MODIFIER LETTER SMALL BOTTOM HALF O
;;  ᵖ   U1D56   7510  ^p                   MODIFIER LETTER SMALL P
;;  ᵗ   U1D57   7511  ^t                   MODIFIER LETTER SMALL T
;;  ᵘ   U1D58   7512  ^u                   MODIFIER LETTER SMALL U
;;  ᵙ   U1D59   7513  ^\sideways u         MODIFIER LETTER SMALL SIDEWAYS U
;;  ᵚ   U1D5A   7514  ^\turned m           MODIFIER LETTER SMALL TURNED M
;;  ᵛ   U1D5B   7515  ^v                   MODIFIER LETTER SMALL V
;;  ᵜ   U1D5C   7516  ^\ain                MODIFIER LETTER SMALL AIN
;;  ᵝ   U1D5D   7517  ^\beta               MODIFIER LETTER SMALL BETA
;;  ᵞ   U1D5E   7518  ^\greek gamma        MODIFIER LETTER SMALL GREEK GAMMA
;;  ᵟ   U1D5F   7519  ^\delta              MODIFIER LETTER SMALL DELTA
;;  ᵠ   U1D60   7520  ^\greek phi          MODIFIER LETTER SMALL GREEK PHI
;;  ᵡ   U1D61   7521  ^\chi                MODIFIER LETTER SMALL CHI
;;  ᵢ   U1D62   7522  _i                   LATIN SUBSCRIPT SMALL LETTER I
;;  ᵣ   U1D63   7523  _r                   LATIN SUBSCRIPT SMALL LETTER R
;;  ᵤ   U1D64   7524  _u                   LATIN SUBSCRIPT SMALL LETTER U
;;  ᵥ   U1D65   7525  _v                   LATIN SUBSCRIPT SMALL LETTER V
;;  ᶛ   U1D9B   7579  ^\turned alpha       MODIFIER LETTER SMALL TURNED ALPHA
;;  ᶜ   U1D9C   7580  ^c                   MODIFIER LETTER SMALL C
;;  ᶝ   U1D9D   7581  ^\c with curl        MODIFIER LETTER SMALL C WITH CURL
;;  ᶞ   U1D9E   7582  ^\eth                MODIFIER LETTER SMALL ETH
;;  ᶟ   U1D9F   7583  ^\reversed open e    MODIFIER LETTER SMALL REVERSED OPEN E
;;  ᶠ   U1DA0   7584  ^f                   MODIFIER LETTER SMALL F
;;  ᶡ   U1DA1   7585  ^\dotless j with stroke MODIFIER LETTER SMALL DOTLESS J WITH STROKE
;;  ᶢ   U1DA2   7586  ^\script g           MODIFIER LETTER SMALL SCRIPT G
;;  ᶣ   U1DA3   7587  ^\turned h           MODIFIER LETTER SMALL TURNED H
;;  ᶤ   U1DA4   7588  ^\i with stroke      MODIFIER LETTER SMALL I WITH STROKE
;;  ᶥ   U1DA5   7589  ^\iota               MODIFIER LETTER SMALL IOTA
;;  ᶦ   U1DA6   7590  ^\capital i          MODIFIER LETTER SMALL CAPITAL I
;;  ᶧ   U1DA7   7591  ^\capital i with stroke MODIFIER LETTER SMALL CAPITAL I WITH STROKE
;;  ᶨ   U1DA8   7592  ^\j with crossed-tail MODIFIER LETTER SMALL J WITH CROSSED-TAIL
;;  ᶩ   U1DA9   7593  ^\l with retroflex hook MODIFIER LETTER SMALL L WITH RETROFLEX HOOK
;;  ᶪ   U1DAA   7594  ^\l with palatal hook MODIFIER LETTER SMALL L WITH PALATAL HOOK
;;  ᶫ   U1DAB   7595  ^\capital l          MODIFIER LETTER SMALL CAPITAL L
;;  ᶬ   U1DAC   7596  ^\m with hook        MODIFIER LETTER SMALL M WITH HOOK
;;  ᶭ   U1DAD   7597  ^\turned m with long leg MODIFIER LETTER SMALL TURNED M WITH LONG LEG
;;  ᶮ   U1DAE   7598  ^\n with left hook   MODIFIER LETTER SMALL N WITH LEFT HOOK
;;  ᶯ   U1DAF   7599  ^\n with retroflex hook MODIFIER LETTER SMALL N WITH RETROFLEX HOOK
;;  ᶰ   U1DB0   7600  ^\capital n          MODIFIER LETTER SMALL CAPITAL N
;;  ᶱ   U1DB1   7601  ^\barred o           MODIFIER LETTER SMALL BARRED O
;;  ᶲ   U1DB2   7602  ^\phi                MODIFIER LETTER SMALL PHI
;;  ᶳ   U1DB3   7603  ^\s with hook        MODIFIER LETTER SMALL S WITH HOOK
;;  ᶴ   U1DB4   7604  ^\esh                MODIFIER LETTER SMALL ESH
;;  ᶵ   U1DB5   7605  ^\t with palatal hook MODIFIER LETTER SMALL T WITH PALATAL HOOK
;;  ᶶ   U1DB6   7606  ^\u bar              MODIFIER LETTER SMALL U BAR
;;  ᶷ   U1DB7   7607  ^\upsilon            MODIFIER LETTER SMALL UPSILON
;;  ᶸ   U1DB8   7608  ^\capital u          MODIFIER LETTER SMALL CAPITAL U
;;  ᶹ   U1DB9   7609  ^\v with hook        MODIFIER LETTER SMALL V WITH HOOK
;;  ᶺ   U1DBA   7610  ^\turned v           MODIFIER LETTER SMALL TURNED V
;;  ᶻ   U1DBB   7611  ^z                   MODIFIER LETTER SMALL Z
;;  ᶼ   U1DBC   7612  ^\z with retroflex hook MODIFIER LETTER SMALL Z WITH RETROFLEX HOOK
;;  ᶽ   U1DBD   7613  ^\z with curl        MODIFIER LETTER SMALL Z WITH CURL
;;  ᶾ   U1DBE   7614  ^\ezh                MODIFIER LETTER SMALL EZH
;;  ᶿ   U1DBF   7615  ^\theta              MODIFIER LETTER SMALL THETA
;;  Ḃ   U1E02   7682  \.B                  LATIN CAPITAL LETTER B WITH DOT ABOVE
;;  Ḃ   U1E02   7682  \.{B}                LATIN CAPITAL LETTER B WITH DOT ABOVE
;;  ḃ   U1E03   7683  \.b                  LATIN SMALL LETTER B WITH DOT ABOVE
;;  ḃ   U1E03   7683  \.{b}                LATIN SMALL LETTER B WITH DOT ABOVE
;;  Ḅ   U1E04   7684  \d{B}                LATIN CAPITAL LETTER B WITH DOT BELOW
;;  ḅ   U1E05   7685  \d{b}                LATIN SMALL LETTER B WITH DOT BELOW
;;  Ḉ   U1E08   7688  \c\'C                LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE
;;  Ḉ   U1E08   7688  \c\'{C}              LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE
;;  ḉ   U1E09   7689  \c\'c                LATIN SMALL LETTER C WITH CEDILLA AND ACUTE
;;  ḉ   U1E09   7689  \c\'{c}              LATIN SMALL LETTER C WITH CEDILLA AND ACUTE
;;  Ḋ   U1E0A   7690  \.D                  LATIN CAPITAL LETTER D WITH DOT ABOVE
;;  Ḋ   U1E0A   7690  \.{D}                LATIN CAPITAL LETTER D WITH DOT ABOVE
;;  ḋ   U1E0B   7691  \.d                  LATIN SMALL LETTER D WITH DOT ABOVE
;;  ḋ   U1E0B   7691  \.{d}                LATIN SMALL LETTER D WITH DOT ABOVE
;;  Ḍ   U1E0C   7692  \d{D}                LATIN CAPITAL LETTER D WITH DOT BELOW
;;  ḍ   U1E0D   7693  \d{d}                LATIN SMALL LETTER D WITH DOT BELOW
;;  Ḑ   U1E10   7696  \cD                  LATIN CAPITAL LETTER D WITH CEDILLA
;;  Ḑ   U1E10   7696  \c{D}                LATIN CAPITAL LETTER D WITH CEDILLA
;;  ḑ   U1E11   7697  \cd                  LATIN SMALL LETTER D WITH CEDILLA
;;  ḑ   U1E11   7697  \c{d}                LATIN SMALL LETTER D WITH CEDILLA
;;  Ḕ   U1E14   7700  \=\`E                LATIN CAPITAL LETTER E WITH MACRON AND GRAVE
;;  Ḕ   U1E14   7700  \=\`{E}              LATIN CAPITAL LETTER E WITH MACRON AND GRAVE
;;  ḕ   U1E15   7701  \=\`e                LATIN SMALL LETTER E WITH MACRON AND GRAVE
;;  ḕ   U1E15   7701  \=\`{e}              LATIN SMALL LETTER E WITH MACRON AND GRAVE
;;  Ḗ   U1E16   7702  \=\'E                LATIN CAPITAL LETTER E WITH MACRON AND ACUTE
;;  Ḗ   U1E16   7702  \=\'{E}              LATIN CAPITAL LETTER E WITH MACRON AND ACUTE
;;  ḗ   U1E17   7703  \=\'e                LATIN SMALL LETTER E WITH MACRON AND ACUTE
;;  ḗ   U1E17   7703  \=\'{e}              LATIN SMALL LETTER E WITH MACRON AND ACUTE
;;  Ḝ   U1E1C   7708  \c\uE                LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE
;;  Ḝ   U1E1C   7708  \c\u{E}              LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE
;;  ḝ   U1E1D   7709  \c\ue                LATIN SMALL LETTER E WITH CEDILLA AND BREVE
;;  ḝ   U1E1D   7709  \c\u{e}              LATIN SMALL LETTER E WITH CEDILLA AND BREVE
;;  Ḟ   U1E1E   7710  \.F                  LATIN CAPITAL LETTER F WITH DOT ABOVE
;;  Ḟ   U1E1E   7710  \.{F}                LATIN CAPITAL LETTER F WITH DOT ABOVE
;;  ḟ   U1E1F   7711  \.f                  LATIN SMALL LETTER F WITH DOT ABOVE
;;  ḟ   U1E1F   7711  \.{f}                LATIN SMALL LETTER F WITH DOT ABOVE
;;  Ḡ   U1E20   7712  \=G                  LATIN CAPITAL LETTER G WITH MACRON
;;  Ḡ   U1E20   7712  \={G}                LATIN CAPITAL LETTER G WITH MACRON
;;  ḡ   U1E21   7713  \=g                  LATIN SMALL LETTER G WITH MACRON
;;  ḡ   U1E21   7713  \={g}                LATIN SMALL LETTER G WITH MACRON
;;  Ḣ   U1E22   7714  \.H                  LATIN CAPITAL LETTER H WITH DOT ABOVE
;;  Ḣ   U1E22   7714  \.{H}                LATIN CAPITAL LETTER H WITH DOT ABOVE
;;  ḣ   U1E23   7715  \.h                  LATIN SMALL LETTER H WITH DOT ABOVE
;;  ḣ   U1E23   7715  \.{h}                LATIN SMALL LETTER H WITH DOT ABOVE
;;  Ḥ   U1E24   7716  \d{H}                LATIN CAPITAL LETTER H WITH DOT BELOW
;;  ḥ   U1E25   7717  \d{h}                LATIN SMALL LETTER H WITH DOT BELOW
;;  Ḧ   U1E26   7718  \"H                  LATIN CAPITAL LETTER H WITH DIAERESIS
;;  Ḧ   U1E26   7718  \"{H}                LATIN CAPITAL LETTER H WITH DIAERESIS
;;  ḧ   U1E27   7719  \"h                  LATIN SMALL LETTER H WITH DIAERESIS
;;  ḧ   U1E27   7719  \"{h}                LATIN SMALL LETTER H WITH DIAERESIS
;;  Ḩ   U1E28   7720  \cH                  LATIN CAPITAL LETTER H WITH CEDILLA
;;  Ḩ   U1E28   7720  \c{H}                LATIN CAPITAL LETTER H WITH CEDILLA
;;  ḩ   U1E29   7721  \ch                  LATIN SMALL LETTER H WITH CEDILLA
;;  ḩ   U1E29   7721  \c{h}                LATIN SMALL LETTER H WITH CEDILLA
;;  Ḯ   U1E2E   7726  \"\'I                LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE
;;  Ḯ   U1E2E   7726  \"\'{I}              LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE
;;  ḯ   U1E2F   7727  \"\'i                LATIN SMALL LETTER I WITH DIAERESIS AND ACUTE
;;  ḯ   U1E2F   7727  \"\'{i}              LATIN SMALL LETTER I WITH DIAERESIS AND ACUTE
;;  Ḱ   U1E30   7728  \'K                  LATIN CAPITAL LETTER K WITH ACUTE
;;  Ḱ   U1E30   7728  \'{K}                LATIN CAPITAL LETTER K WITH ACUTE
;;  ḱ   U1E31   7729  \'k                  LATIN SMALL LETTER K WITH ACUTE
;;  ḱ   U1E31   7729  \'{k}                LATIN SMALL LETTER K WITH ACUTE
;;  Ḳ   U1E32   7730  \d{K}                LATIN CAPITAL LETTER K WITH DOT BELOW
;;  ḳ   U1E33   7731  \d{k}                LATIN SMALL LETTER K WITH DOT BELOW
;;  Ḷ   U1E36   7734  \d{L}                LATIN CAPITAL LETTER L WITH DOT BELOW
;;  ḷ   U1E37   7735  \d{l}                LATIN SMALL LETTER L WITH DOT BELOW
;;  Ḹ   U1E38   7736  \d\=L                LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON
;;  Ḹ   U1E38   7736  \d\={L}              LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON
;;  ḹ   U1E39   7737  \d\=l                LATIN SMALL LETTER L WITH DOT BELOW AND MACRON
;;  ḹ   U1E39   7737  \d\={l}              LATIN SMALL LETTER L WITH DOT BELOW AND MACRON
;;  Ḿ   U1E3E   7742  \'M                  LATIN CAPITAL LETTER M WITH ACUTE
;;  Ḿ   U1E3E   7742  \'{M}                LATIN CAPITAL LETTER M WITH ACUTE
;;  ḿ   U1E3F   7743  \'m                  LATIN SMALL LETTER M WITH ACUTE
;;  ḿ   U1E3F   7743  \'{m}                LATIN SMALL LETTER M WITH ACUTE
;;  Ṁ   U1E40   7744  \.M                  LATIN CAPITAL LETTER M WITH DOT ABOVE
;;  Ṁ   U1E40   7744  \.{M}                LATIN CAPITAL LETTER M WITH DOT ABOVE
;;  ṁ   U1E41   7745  \.m                  LATIN SMALL LETTER M WITH DOT ABOVE
;;  ṁ   U1E41   7745  \.{m}                LATIN SMALL LETTER M WITH DOT ABOVE
;;  Ṃ   U1E42   7746  \d{M}                LATIN CAPITAL LETTER M WITH DOT BELOW
;;  ṃ   U1E43   7747  \d{m}                LATIN SMALL LETTER M WITH DOT BELOW
;;  Ṅ   U1E44   7748  \.N                  LATIN CAPITAL LETTER N WITH DOT ABOVE
;;  Ṅ   U1E44   7748  \.{N}                LATIN CAPITAL LETTER N WITH DOT ABOVE
;;  ṅ   U1E45   7749  \.n                  LATIN SMALL LETTER N WITH DOT ABOVE
;;  ṅ   U1E45   7749  \.{n}                LATIN SMALL LETTER N WITH DOT ABOVE
;;  Ṇ   U1E46   7750  \d{N}                LATIN CAPITAL LETTER N WITH DOT BELOW
;;  ṇ   U1E47   7751  \d{n}                LATIN SMALL LETTER N WITH DOT BELOW
;;  Ṍ   U1E4C   7756  \~\'O                LATIN CAPITAL LETTER O WITH TILDE AND ACUTE
;;  Ṍ   U1E4C   7756  \~\'{O}              LATIN CAPITAL LETTER O WITH TILDE AND ACUTE
;;  ṍ   U1E4D   7757  \~\'o                LATIN SMALL LETTER O WITH TILDE AND ACUTE
;;  ṍ   U1E4D   7757  \~\'{o}              LATIN SMALL LETTER O WITH TILDE AND ACUTE
;;  Ṏ   U1E4E   7758  \~\"O                LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS
;;  Ṏ   U1E4E   7758  \~\"{O}              LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS
;;  ṏ   U1E4F   7759  \~\"o                LATIN SMALL LETTER O WITH TILDE AND DIAERESIS
;;  ṏ   U1E4F   7759  \~\"{o}              LATIN SMALL LETTER O WITH TILDE AND DIAERESIS
;;  Ṑ   U1E50   7760  \=\`O                LATIN CAPITAL LETTER O WITH MACRON AND GRAVE
;;  Ṑ   U1E50   7760  \=\`{O}              LATIN CAPITAL LETTER O WITH MACRON AND GRAVE
;;  ṑ   U1E51   7761  \=\`o                LATIN SMALL LETTER O WITH MACRON AND GRAVE
;;  ṑ   U1E51   7761  \=\`{o}              LATIN SMALL LETTER O WITH MACRON AND GRAVE
;;  Ṓ   U1E52   7762  \=\'O                LATIN CAPITAL LETTER O WITH MACRON AND ACUTE
;;  Ṓ   U1E52   7762  \=\'{O}              LATIN CAPITAL LETTER O WITH MACRON AND ACUTE
;;  ṓ   U1E53   7763  \=\'o                LATIN SMALL LETTER O WITH MACRON AND ACUTE
;;  ṓ   U1E53   7763  \=\'{o}              LATIN SMALL LETTER O WITH MACRON AND ACUTE
;;  Ṕ   U1E54   7764  \'P                  LATIN CAPITAL LETTER P WITH ACUTE
;;  Ṕ   U1E54   7764  \'{P}                LATIN CAPITAL LETTER P WITH ACUTE
;;  ṕ   U1E55   7765  \'p                  LATIN SMALL LETTER P WITH ACUTE
;;  ṕ   U1E55   7765  \'{p}                LATIN SMALL LETTER P WITH ACUTE
;;  Ṗ   U1E56   7766  \.P                  LATIN CAPITAL LETTER P WITH DOT ABOVE
;;  Ṗ   U1E56   7766  \.{P}                LATIN CAPITAL LETTER P WITH DOT ABOVE
;;  ṗ   U1E57   7767  \.p                  LATIN SMALL LETTER P WITH DOT ABOVE
;;  ṗ   U1E57   7767  \.{p}                LATIN SMALL LETTER P WITH DOT ABOVE
;;  Ṙ   U1E58   7768  \.R                  LATIN CAPITAL LETTER R WITH DOT ABOVE
;;  Ṙ   U1E58   7768  \.{R}                LATIN CAPITAL LETTER R WITH DOT ABOVE
;;  ṙ   U1E59   7769  \.r                  LATIN SMALL LETTER R WITH DOT ABOVE
;;  ṙ   U1E59   7769  \.{r}                LATIN SMALL LETTER R WITH DOT ABOVE
;;  Ṛ   U1E5A   7770  \d{R}                LATIN CAPITAL LETTER R WITH DOT BELOW
;;  ṛ   U1E5B   7771  \d{r}                LATIN SMALL LETTER R WITH DOT BELOW
;;  Ṝ   U1E5C   7772  \d\=R                LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON
;;  Ṝ   U1E5C   7772  \d\={R}              LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON
;;  ṝ   U1E5D   7773  \d\=r                LATIN SMALL LETTER R WITH DOT BELOW AND MACRON
;;  ṝ   U1E5D   7773  \d\={r}              LATIN SMALL LETTER R WITH DOT BELOW AND MACRON
;;  Ṡ   U1E60   7776  \.S                  LATIN CAPITAL LETTER S WITH DOT ABOVE
;;  Ṡ   U1E60   7776  \.{S}                LATIN CAPITAL LETTER S WITH DOT ABOVE
;;  ṡ   U1E61   7777  \.s                  LATIN SMALL LETTER S WITH DOT ABOVE
;;  ṡ   U1E61   7777  \.{s}                LATIN SMALL LETTER S WITH DOT ABOVE
;;  Ṣ   U1E62   7778  \d{S}                LATIN CAPITAL LETTER S WITH DOT BELOW
;;  ṣ   U1E63   7779  \d{s}                LATIN SMALL LETTER S WITH DOT BELOW
;;  Ṥ   U1E64   7780  \'\.S                LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE
;;  Ṥ   U1E64   7780  \'\.{S}              LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE
;;  ṥ   U1E65   7781  \'\.s                LATIN SMALL LETTER S WITH ACUTE AND DOT ABOVE
;;  ṥ   U1E65   7781  \'\.{s}              LATIN SMALL LETTER S WITH ACUTE AND DOT ABOVE
;;  Ṧ   U1E66   7782  \v\.S                LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE
;;  Ṧ   U1E66   7782  \v\.{S}              LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE
;;  ṧ   U1E67   7783  \v\.s                LATIN SMALL LETTER S WITH CARON AND DOT ABOVE
;;  ṧ   U1E67   7783  \v\.{s}              LATIN SMALL LETTER S WITH CARON AND DOT ABOVE
;;  Ṩ   U1E68   7784  \d\.S                LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE
;;  Ṩ   U1E68   7784  \d\.{S}              LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE
;;  ṩ   U1E69   7785  \d\.s                LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE
;;  ṩ   U1E69   7785  \d\.{s}              LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE
;;  Ṫ   U1E6A   7786  \.T                  LATIN CAPITAL LETTER T WITH DOT ABOVE
;;  Ṫ   U1E6A   7786  \.{T}                LATIN CAPITAL LETTER T WITH DOT ABOVE
;;  ṫ   U1E6B   7787  \.t                  LATIN SMALL LETTER T WITH DOT ABOVE
;;  ṫ   U1E6B   7787  \.{t}                LATIN SMALL LETTER T WITH DOT ABOVE
;;  Ṭ   U1E6C   7788  \d{T}                LATIN CAPITAL LETTER T WITH DOT BELOW
;;  ṭ   U1E6D   7789  \d{t}                LATIN SMALL LETTER T WITH DOT BELOW
;;  Ṹ   U1E78   7800  \~\'U                LATIN CAPITAL LETTER U WITH TILDE AND ACUTE
;;  Ṹ   U1E78   7800  \~\'{U}              LATIN CAPITAL LETTER U WITH TILDE AND ACUTE
;;  ṹ   U1E79   7801  \~\'u                LATIN SMALL LETTER U WITH TILDE AND ACUTE
;;  ṹ   U1E79   7801  \~\'{u}              LATIN SMALL LETTER U WITH TILDE AND ACUTE
;;  Ṻ   U1E7A   7802  \=\"U                LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS
;;  Ṻ   U1E7A   7802  \=\"{U}              LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS
;;  ṻ   U1E7B   7803  \=\"u                LATIN SMALL LETTER U WITH MACRON AND DIAERESIS
;;  ṻ   U1E7B   7803  \=\"{u}              LATIN SMALL LETTER U WITH MACRON AND DIAERESIS
;;  Ṽ   U1E7C   7804  \~V                  LATIN CAPITAL LETTER V WITH TILDE
;;  Ṽ   U1E7C   7804  \~{V}                LATIN CAPITAL LETTER V WITH TILDE
;;  ṽ   U1E7D   7805  \~v                  LATIN SMALL LETTER V WITH TILDE
;;  ṽ   U1E7D   7805  \~{v}                LATIN SMALL LETTER V WITH TILDE
;;  Ṿ   U1E7E   7806  \d{V}                LATIN CAPITAL LETTER V WITH DOT BELOW
;;  ṿ   U1E7F   7807  \d{v}                LATIN SMALL LETTER V WITH DOT BELOW
;;  Ẁ   U1E80   7808  \`W                  LATIN CAPITAL LETTER W WITH GRAVE
;;  Ẁ   U1E80   7808  \`{W}                LATIN CAPITAL LETTER W WITH GRAVE
;;  ẁ   U1E81   7809  \`w                  LATIN SMALL LETTER W WITH GRAVE
;;  ẁ   U1E81   7809  \`{w}                LATIN SMALL LETTER W WITH GRAVE
;;  Ẃ   U1E82   7810  \'W                  LATIN CAPITAL LETTER W WITH ACUTE
;;  Ẃ   U1E82   7810  \'{W}                LATIN CAPITAL LETTER W WITH ACUTE
;;  ẃ   U1E83   7811  \'w                  LATIN SMALL LETTER W WITH ACUTE
;;  ẃ   U1E83   7811  \'{w}                LATIN SMALL LETTER W WITH ACUTE
;;  Ẅ   U1E84   7812  \"W                  LATIN CAPITAL LETTER W WITH DIAERESIS
;;  Ẅ   U1E84   7812  \"{W}                LATIN CAPITAL LETTER W WITH DIAERESIS
;;  ẅ   U1E85   7813  \"w                  LATIN SMALL LETTER W WITH DIAERESIS
;;  ẅ   U1E85   7813  \"{w}                LATIN SMALL LETTER W WITH DIAERESIS
;;  Ẇ   U1E86   7814  \.W                  LATIN CAPITAL LETTER W WITH DOT ABOVE
;;  Ẇ   U1E86   7814  \.{W}                LATIN CAPITAL LETTER W WITH DOT ABOVE
;;  ẇ   U1E87   7815  \.w                  LATIN SMALL LETTER W WITH DOT ABOVE
;;  ẇ   U1E87   7815  \.{w}                LATIN SMALL LETTER W WITH DOT ABOVE
;;  Ẉ   U1E88   7816  \d{W}                LATIN CAPITAL LETTER W WITH DOT BELOW
;;  ẉ   U1E89   7817  \d{w}                LATIN SMALL LETTER W WITH DOT BELOW
;;  Ẋ   U1E8A   7818  \.X                  LATIN CAPITAL LETTER X WITH DOT ABOVE
;;  Ẋ   U1E8A   7818  \.{X}                LATIN CAPITAL LETTER X WITH DOT ABOVE
;;  ẋ   U1E8B   7819  \.x                  LATIN SMALL LETTER X WITH DOT ABOVE
;;  ẋ   U1E8B   7819  \.{x}                LATIN SMALL LETTER X WITH DOT ABOVE
;;  Ẍ   U1E8C   7820  \"X                  LATIN CAPITAL LETTER X WITH DIAERESIS
;;  Ẍ   U1E8C   7820  \"{X}                LATIN CAPITAL LETTER X WITH DIAERESIS
;;  ẍ   U1E8D   7821  \"x                  LATIN SMALL LETTER X WITH DIAERESIS
;;  ẍ   U1E8D   7821  \"{x}                LATIN SMALL LETTER X WITH DIAERESIS
;;  Ẏ   U1E8E   7822  \.Y                  LATIN CAPITAL LETTER Y WITH DOT ABOVE
;;  Ẏ   U1E8E   7822  \.{Y}                LATIN CAPITAL LETTER Y WITH DOT ABOVE
;;  ẏ   U1E8F   7823  \.y                  LATIN SMALL LETTER Y WITH DOT ABOVE
;;  ẏ   U1E8F   7823  \.{y}                LATIN SMALL LETTER Y WITH DOT ABOVE
;;  Ẑ   U1E90   7824  \^Z                  LATIN CAPITAL LETTER Z WITH CIRCUMFLEX
;;  Ẑ   U1E90   7824  \^{Z}                LATIN CAPITAL LETTER Z WITH CIRCUMFLEX
;;  ẑ   U1E91   7825  \^z                  LATIN SMALL LETTER Z WITH CIRCUMFLEX
;;  ẑ   U1E91   7825  \^{z}                LATIN SMALL LETTER Z WITH CIRCUMFLEX
;;  Ẓ   U1E92   7826  \d{Z}                LATIN CAPITAL LETTER Z WITH DOT BELOW
;;  ẓ   U1E93   7827  \d{z}                LATIN SMALL LETTER Z WITH DOT BELOW
;;  ẗ   U1E97   7831  \"t                  LATIN SMALL LETTER T WITH DIAERESIS
;;  ẗ   U1E97   7831  \"{t}                LATIN SMALL LETTER T WITH DIAERESIS
;;  Ạ   U1EA0   7840  \d{A}                LATIN CAPITAL LETTER A WITH DOT BELOW
;;  ạ   U1EA1   7841  \d{a}                LATIN SMALL LETTER A WITH DOT BELOW
;;  Ấ   U1EA4   7844  \^\'A                LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE
;;  Ấ   U1EA4   7844  \^\'{A}              LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE
;;  ấ   U1EA5   7845  \^\'a                LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE
;;  ấ   U1EA5   7845  \^\'{a}              LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE
;;  Ầ   U1EA6   7846  \^\`A                LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE
;;  Ầ   U1EA6   7846  \^\`{A}              LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE
;;  ầ   U1EA7   7847  \^\`a                LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE
;;  ầ   U1EA7   7847  \^\`{a}              LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE
;;  Ẫ   U1EAA   7850  \^\~A                LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE
;;  Ẫ   U1EAA   7850  \^\~{A}              LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE
;;  ẫ   U1EAB   7851  \^\~a                LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE
;;  ẫ   U1EAB   7851  \^\~{a}              LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE
;;  Ậ   U1EAC   7852  \^\d{A}              LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW
;;  ậ   U1EAD   7853  \^\d{a}              LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW
;;  Ắ   U1EAE   7854  \u\'A                LATIN CAPITAL LETTER A WITH BREVE AND ACUTE
;;  Ắ   U1EAE   7854  \u\'{A}              LATIN CAPITAL LETTER A WITH BREVE AND ACUTE
;;  ắ   U1EAF   7855  \u\'a                LATIN SMALL LETTER A WITH BREVE AND ACUTE
;;  ắ   U1EAF   7855  \u\'{a}              LATIN SMALL LETTER A WITH BREVE AND ACUTE
;;  Ằ   U1EB0   7856  \u\`A                LATIN CAPITAL LETTER A WITH BREVE AND GRAVE
;;  Ằ   U1EB0   7856  \u\`{A}              LATIN CAPITAL LETTER A WITH BREVE AND GRAVE
;;  ằ   U1EB1   7857  \u\`a                LATIN SMALL LETTER A WITH BREVE AND GRAVE
;;  ằ   U1EB1   7857  \u\`{a}              LATIN SMALL LETTER A WITH BREVE AND GRAVE
;;  Ẵ   U1EB4   7860  \u\~A                LATIN CAPITAL LETTER A WITH BREVE AND TILDE
;;  Ẵ   U1EB4   7860  \u\~{A}              LATIN CAPITAL LETTER A WITH BREVE AND TILDE
;;  ẵ   U1EB5   7861  \u\~a                LATIN SMALL LETTER A WITH BREVE AND TILDE
;;  ẵ   U1EB5   7861  \u\~{a}              LATIN SMALL LETTER A WITH BREVE AND TILDE
;;  Ặ   U1EB6   7862  \u\d{A}              LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW
;;  ặ   U1EB7   7863  \u\d{a}              LATIN SMALL LETTER A WITH BREVE AND DOT BELOW
;;  Ẹ   U1EB8   7864  \d{E}                LATIN CAPITAL LETTER E WITH DOT BELOW
;;  ẹ   U1EB9   7865  \d{e}                LATIN SMALL LETTER E WITH DOT BELOW
;;  Ẽ   U1EBC   7868  \~E                  LATIN CAPITAL LETTER E WITH TILDE
;;  Ẽ   U1EBC   7868  \~{E}                LATIN CAPITAL LETTER E WITH TILDE
;;  ẽ   U1EBD   7869  \~e                  LATIN SMALL LETTER E WITH TILDE
;;  ẽ   U1EBD   7869  \~{e}                LATIN SMALL LETTER E WITH TILDE
;;  Ế   U1EBE   7870  \^\'E                LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE
;;  Ế   U1EBE   7870  \^\'{E}              LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE
;;  ế   U1EBF   7871  \^\'e                LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE
;;  ế   U1EBF   7871  \^\'{e}              LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE
;;  Ề   U1EC0   7872  \^\`E                LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE
;;  Ề   U1EC0   7872  \^\`{E}              LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE
;;  ề   U1EC1   7873  \^\`e                LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE
;;  ề   U1EC1   7873  \^\`{e}              LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE
;;  Ễ   U1EC4   7876  \^\~E                LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE
;;  Ễ   U1EC4   7876  \^\~{E}              LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE
;;  ễ   U1EC5   7877  \^\~e                LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE
;;  ễ   U1EC5   7877  \^\~{e}              LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE
;;  Ệ   U1EC6   7878  \^\d{E}              LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW
;;  ệ   U1EC7   7879  \^\d{e}              LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW
;;  Ị   U1ECA   7882  \d{I}                LATIN CAPITAL LETTER I WITH DOT BELOW
;;  ị   U1ECB   7883  \d{i}                LATIN SMALL LETTER I WITH DOT BELOW
;;  Ọ   U1ECC   7884  \d{O}                LATIN CAPITAL LETTER O WITH DOT BELOW
;;  ọ   U1ECD   7885  \d{o}                LATIN SMALL LETTER O WITH DOT BELOW
;;  Ố   U1ED0   7888  \^\'O                LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE
;;  Ố   U1ED0   7888  \^\'{O}              LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE
;;  ố   U1ED1   7889  \^\'o                LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE
;;  ố   U1ED1   7889  \^\'{o}              LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE
;;  Ồ   U1ED2   7890  \^\`O                LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE
;;  Ồ   U1ED2   7890  \^\`{O}              LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE
;;  ồ   U1ED3   7891  \^\`o                LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE
;;  ồ   U1ED3   7891  \^\`{o}              LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE
;;  Ỗ   U1ED6   7894  \^\~O                LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE
;;  Ỗ   U1ED6   7894  \^\~{O}              LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE
;;  ỗ   U1ED7   7895  \^\~o                LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE
;;  ỗ   U1ED7   7895  \^\~{o}              LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE
;;  Ộ   U1ED8   7896  \^\d{O}              LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW
;;  ộ   U1ED9   7897  \^\d{o}              LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW
;;  Ụ   U1EE4   7908  \d{U}                LATIN CAPITAL LETTER U WITH DOT BELOW
;;  ụ   U1EE5   7909  \d{u}                LATIN SMALL LETTER U WITH DOT BELOW
;;  Ỳ   U1EF2   7922  \`Y                  LATIN CAPITAL LETTER Y WITH GRAVE
;;  Ỳ   U1EF2   7922  \`{Y}                LATIN CAPITAL LETTER Y WITH GRAVE
;;  ỳ   U1EF3   7923  \`y                  LATIN SMALL LETTER Y WITH GRAVE
;;  ỳ   U1EF3   7923  \`{y}                LATIN SMALL LETTER Y WITH GRAVE
;;  Ỵ   U1EF4   7924  \d{Y}                LATIN CAPITAL LETTER Y WITH DOT BELOW
;;  ỵ   U1EF5   7925  \d{y}                LATIN SMALL LETTER Y WITH DOT BELOW
;;  Ỹ   U1EF8   7928  \~Y                  LATIN CAPITAL LETTER Y WITH TILDE
;;  Ỹ   U1EF8   7928  \~{Y}                LATIN CAPITAL LETTER Y WITH TILDE
;;  ỹ   U1EF9   7929  \~y                  LATIN SMALL LETTER Y WITH TILDE
;;  ỹ   U1EF9   7929  \~{y}                LATIN SMALL LETTER Y WITH TILDE
;;      U2001   8193  \quad                EM QUAD
;;  ‌    U200C   8204  \/                   ZERO WIDTH NON-JOINER
;;  –   U2013   8211  --                   EN DASH
;;  —   U2014   8212  ---                  EM DASH
;;  ‖   U2016   8214  \Vert                DOUBLE VERTICAL LINE
;;  ‘   U2018   8216  \grq                 LEFT SINGLE QUOTATION MARK
;;  ‘   U2018   8216  \lq                  LEFT SINGLE QUOTATION MARK
;;  ’   U2019   8217  \rq                  RIGHT SINGLE QUOTATION MARK
;;  ‚   U201A   8218  \glq                 SINGLE LOW-9 QUOTATION MARK
;;  “   U201C   8220  \"'                  LEFT DOUBLE QUOTATION MARK
;;  “   U201C   8220  \grqq                LEFT DOUBLE QUOTATION MARK
;;  “   U201C   8220  \ldq                 LEFT DOUBLE QUOTATION MARK
;;  ”   U201D   8221  \rdq                 RIGHT DOUBLE QUOTATION MARK
;;  „   U201E   8222  \"`                  DOUBLE LOW-9 QUOTATION MARK
;;  „   U201E   8222  \glqq                DOUBLE LOW-9 QUOTATION MARK
;;  †   U2020   8224  \dag                 DAGGER
;;  †   U2020   8224  \dagger              DAGGER
;;  ‡   U2021   8225  \ddag                DOUBLE DAGGER
;;  ‡   U2021   8225  \ddagger             DOUBLE DAGGER
;;  •   U2022   8226  \bullet              BULLET
;;  …   U2026   8230  \ldots               HORIZONTAL ELLIPSIS
;;     U2028   8232  \newline             LINE SEPARATOR
;;     U2029   8233  \par                 PARAGRAPH SEPARATOR
;;      U202F   8239  \,                   NARROW NO-BREAK SPACE
;;  ‰   U2030   8240  \permil              PER MILLE SIGN
;;  ‱   U2031   8241  \textpertenthousand  PER TEN THOUSAND SIGN
;;  ′   U2032   8242  \prime               PRIME
;;  ′   U2032   8242  \varprime            PRIME
;;  ‵   U2035   8245  \backprime           REVERSED PRIME
;;  ‹   U2039   8249  \flq                 SINGLE LEFT-POINTING ANGLE QUOTATION MARK
;;  ›   U203A   8250  \frq                 SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
;;  ※   U203B   8251  \textreferencemark   REFERENCE MARK
;;  ‽   U203D   8253  \textinterrobang     INTERROBANG
;;  ⁄   U2044   8260  \textfractionsolidus FRACTION SLASH
;;  ⁅   U2045   8261  \textlquill          LEFT SQUARE BRACKET WITH QUILL
;;  ⁆   U2046   8262  \textrquill          RIGHT SQUARE BRACKET WITH QUILL
;;  ⁒   U2052   8274  \textdiscount        COMMERCIAL MINUS SIGN
;;  ⁰   U2070   8304  ^0                   SUPERSCRIPT ZERO
;;  ⁱ   U2071   8305  ^i                   SUPERSCRIPT LATIN SMALL LETTER I
;;  ⁴   U2074   8308  ^4                   SUPERSCRIPT FOUR
;;  ⁵   U2075   8309  ^5                   SUPERSCRIPT FIVE
;;  ⁶   U2076   8310  ^6                   SUPERSCRIPT SIX
;;  ⁷   U2077   8311  ^7                   SUPERSCRIPT SEVEN
;;  ⁸   U2078   8312  ^8                   SUPERSCRIPT EIGHT
;;  ⁹   U2079   8313  ^9                   SUPERSCRIPT NINE
;;  ⁺   U207A   8314  ^+                   SUPERSCRIPT PLUS SIGN
;;  ⁻   U207B   8315  ^-                   SUPERSCRIPT MINUS
;;  ⁼   U207C   8316  ^=                   SUPERSCRIPT EQUALS SIGN
;;  ⁽   U207D   8317  ^(                   SUPERSCRIPT LEFT PARENTHESIS
;;  ⁾   U207E   8318  ^)                   SUPERSCRIPT RIGHT PARENTHESIS
;;  ⁿ   U207F   8319  ^n                   SUPERSCRIPT LATIN SMALL LETTER N
;;  ₀   U2080   8320  _0                   SUBSCRIPT ZERO
;;  ₁   U2081   8321  _1                   SUBSCRIPT ONE
;;  ₂   U2082   8322  _2                   SUBSCRIPT TWO
;;  ₃   U2083   8323  _3                   SUBSCRIPT THREE
;;  ₄   U2084   8324  _4                   SUBSCRIPT FOUR
;;  ₅   U2085   8325  _5                   SUBSCRIPT FIVE
;;  ₆   U2086   8326  _6                   SUBSCRIPT SIX
;;  ₇   U2087   8327  _7                   SUBSCRIPT SEVEN
;;  ₈   U2088   8328  _8                   SUBSCRIPT EIGHT
;;  ₉   U2089   8329  _9                   SUBSCRIPT NINE
;;  ₊   U208A   8330  _+                   SUBSCRIPT PLUS SIGN
;;  ₋   U208B   8331  _-                   SUBSCRIPT MINUS
;;  ₌   U208C   8332  _=                   SUBSCRIPT EQUALS SIGN
;;  ₍   U208D   8333  _(                   SUBSCRIPT LEFT PARENTHESIS
;;  ₎   U208E   8334  _)                   SUBSCRIPT RIGHT PARENTHESIS
;;  ₐ   U2090   8336  _a                   LATIN SUBSCRIPT SMALL LETTER A
;;  ₑ   U2091   8337  _e                   LATIN SUBSCRIPT SMALL LETTER E
;;  ₒ   U2092   8338  _o                   LATIN SUBSCRIPT SMALL LETTER O
;;  ₓ   U2093   8339  _x                   LATIN SUBSCRIPT SMALL LETTER X
;;  ₕ   U2095   8341  _h                   LATIN SUBSCRIPT SMALL LETTER H
;;  ₖ   U2096   8342  _k                   LATIN SUBSCRIPT SMALL LETTER K
;;  ₗ   U2097   8343  _l                   LATIN SUBSCRIPT SMALL LETTER L
;;  ₘ   U2098   8344  _m                   LATIN SUBSCRIPT SMALL LETTER M
;;  ₙ   U2099   8345  _n                   LATIN SUBSCRIPT SMALL LETTER N
;;  ₚ   U209A   8346  _p                   LATIN SUBSCRIPT SMALL LETTER P
;;  ₛ   U209B   8347  _s                   LATIN SUBSCRIPT SMALL LETTER S
;;  ₜ   U209C   8348  _t                   LATIN SUBSCRIPT SMALL LETTER T
;;  ₡   U20A1   8353  \colon               COLON SIGN
;;  ₡   U20A1   8353  \textcolonmonetary   COLON SIGN
;;  ₢   U20A2   8354  \cruzeiro            CRUZEIRO SIGN
;;  ₤   U20A4   8356  \lira                LIRA SIGN
;;  ₤   U20A4   8356  \textlira            LIRA SIGN
;;  ₥   U20A5   8357  \mill                MILL SIGN
;;  ₦   U20A6   8358  \naira               NAIRA SIGN
;;  ₦   U20A6   8358  \textnaira           NAIRA SIGN
;;  ₧   U20A7   8359  \peseta              PESETA SIGN
;;  ₨   U20A8   8360  \rupee               RUPEE SIGN
;;  ₩   U20A9   8361  \textwon             WON SIGN
;;  ₩   U20A9   8361  \won                 WON SIGN
;;  ₫   U20AB   8363  \dong                DONG SIGN
;;  €   U20AC   8364  \euro                EURO SIGN
;;  ₭   U20AD   8365  \kip                 KIP SIGN
;;  ₮   U20AE   8366  \tugrik              TUGRIK SIGN
;;  ₯   U20AF   8367  \drachma             DRACHMA SIGN
;;  ₱   U20B1   8369  \peso                PESO SIGN
;;  ₱   U20B1   8369  \textpeso            PESO SIGN
;;  ₲   U20B2   8370  \guarani             GUARANI SIGN
;;  ₳   U20B3   8371  \austral             AUSTRAL SIGN
;;  ₴   U20B4   8372  \hryvnia             HRYVNIA SIGN
;;  ₵   U20B5   8373  \cedi                CEDI SIGN
;;  ₷   U20B7   8375  \spesmilo            SPESMILO SIGN
;;  ₸   U20B8   8376  \tenge               TENGE SIGN
;;  ₼   U20BC   8380  \manat               MANAT SIGN
;;  ₽   U20BD   8381  \ruble               RUBLE SIGN
;;  ₾   U20BE   8382  \lari                LARI SIGN
;;  ⃗    U20D7   8407  \vec                 COMBINING RIGHT ARROW ABOVE
;;  ⃝    U20DD   8413  \textbigcircle       COMBINING ENCLOSING CIRCLE
;;  ℃   U2103   8451  \celsius             DEGREE CELSIUS
;;  ℏ   U210F   8463  \hbar                PLANCK CONSTANT OVER TWO PI
;;  ℐ   U2110   8464  \mathscr{I}          SCRIPT CAPITAL I
;;  ℑ   U2111   8465  \Im                  BLACK-LETTER CAPITAL I
;;  ℓ   U2113   8467  \ell                 SCRIPT SMALL L
;;  ℕ   U2115   8469  \Bbb{N}              DOUBLE-STRUCK CAPITAL N
;;  №   U2116   8470  \numero              NUMERO SIGN
;;  №   U2116   8470  \textnumero          NUMERO SIGN
;;  ℗   U2117   8471  \textcircledP        SOUND RECORDING COPYRIGHT
;;  ℘   U2118   8472  \wp                  SCRIPT CAPITAL P
;;  ℙ   U2119   8473  \Bbb{P}              DOUBLE-STRUCK CAPITAL P
;;  ℜ   U211C   8476  \Re                  BLACK-LETTER CAPITAL R
;;  ℝ   U211D   8477  \Bbb{R}              DOUBLE-STRUCK CAPITAL R
;;  ℞   U211E   8478  \textrecipe          PRESCRIPTION TAKE
;;  ℠   U2120   8480  ^{SM}                SERVICE MARK
;;  ℡   U2121   8481  \telephone           TELEPHONE SIGN
;;  ℡   U2121   8481  ^{TEL}               TELEPHONE SIGN
;;  ™   U2122   8482  ^{TM}                TRADE MARK SIGN
;;  ℤ   U2124   8484  \Bbb{Z}              DOUBLE-STRUCK CAPITAL Z
;;  ℥   U2125   8485  \ounce               OUNCE SIGN
;;  Ω   U2126   8486  \ohm                 OHM SIGN
;;  ℧   U2127   8487  \mho                 INVERTED OHM SIGN
;;  K   U212A   8490  \kelvin              KELVIN SIGN
;;  Å   U212B   8491  \angstrom            ANGSTROM SIGN
;;  ℮   U212E   8494  \textestimated       ESTIMATED SYMBOL
;;  ℵ   U2135   8501  \aleph               ALEF SYMBOL
;;  ℶ   U2136   8502  \beth                BET SYMBOL
;;  ℷ   U2137   8503  \gimel               GIMEL SYMBOL
;;  ℸ   U2138   8504  \daleth              DALET SYMBOL
;;  ℻   U213B   8507  \facsimile           FACSIMILE SIGN
;;  ⅌   U214C   8524  \per                 PER SIGN
;;  ⅓   U2153   8531  \frac13              VULGAR FRACTION ONE THIRD
;;  ⅔   U2154   8532  \frac23              VULGAR FRACTION TWO THIRDS
;;  ⅕   U2155   8533  \frac15              VULGAR FRACTION ONE FIFTH
;;  ⅖   U2156   8534  \frac25              VULGAR FRACTION TWO FIFTHS
;;  ⅗   U2157   8535  \frac35              VULGAR FRACTION THREE FIFTHS
;;  ⅘   U2158   8536  \frac45              VULGAR FRACTION FOUR FIFTHS
;;  ⅙   U2159   8537  \frac16              VULGAR FRACTION ONE SIXTH
;;  ⅚   U215A   8538  \frac56              VULGAR FRACTION FIVE SIXTHS
;;  ⅛   U215B   8539  \frac18              VULGAR FRACTION ONE EIGHTH
;;  ⅜   U215C   8540  \frac38              VULGAR FRACTION THREE EIGHTHS
;;  ⅝   U215D   8541  \frac58              VULGAR FRACTION FIVE EIGHTHS
;;  ⅞   U215E   8542  \frac78              VULGAR FRACTION SEVEN EIGHTHS
;;  ⅟   U215F   8543  \frac1               FRACTION NUMERATOR ONE
;;  ←   U2190   8592  \gets                LEFTWARDS ARROW
;;  ←   U2190   8592  \leftarrow           LEFTWARDS ARROW
;;  ←   U2190   8592  \longleftarrow       LEFTWARDS ARROW
;;  ↑   U2191   8593  \uparrow             UPWARDS ARROW
;;  →   U2192   8594  \longrightarrow      RIGHTWARDS ARROW
;;  →   U2192   8594  \rightarrow          RIGHTWARDS ARROW
;;  →   U2192   8594  \to                  RIGHTWARDS ARROW
;;  ↓   U2193   8595  \downarrow           DOWNWARDS ARROW
;;  ↔   U2194   8596  \leftrightarrow      LEFT RIGHT ARROW
;;  ↔   U2194   8596  \longleftrightarrow  LEFT RIGHT ARROW
;;  ↕   U2195   8597  \updownarrow         UP DOWN ARROW
;;  ↖   U2196   8598  \nwarrow             NORTH WEST ARROW
;;  ↗   U2197   8599  \nearrow             NORTH EAST ARROW
;;  ↘   U2198   8600  \searrow             SOUTH EAST ARROW
;;  ↙   U2199   8601  \swarrow             SOUTH WEST ARROW
;;  ↚   U219A   8602  \nleftarrow          LEFTWARDS ARROW WITH STROKE
;;  ↛   U219B   8603  \nrightarrow         RIGHTWARDS ARROW WITH STROKE
;;  ↝   U219D   8605  \leadsto             RIGHTWARDS WAVE ARROW
;;  ↞   U219E   8606  \twoheadleftarrow    LEFTWARDS TWO HEADED ARROW
;;  ↠   U21A0   8608  \twoheadrightarrow   RIGHTWARDS TWO HEADED ARROW
;;  ↢   U21A2   8610  \leftarrowtail       LEFTWARDS ARROW WITH TAIL
;;  ↣   U21A3   8611  \rightarrowtail      RIGHTWARDS ARROW WITH TAIL
;;  ↦   U21A6   8614  \longmapsto          RIGHTWARDS ARROW FROM BAR
;;  ↦   U21A6   8614  \mapsto              RIGHTWARDS ARROW FROM BAR
;;  ↩   U21A9   8617  \hookleftarrow       LEFTWARDS ARROW WITH HOOK
;;  ↪   U21AA   8618  \hookrightarrow      RIGHTWARDS ARROW WITH HOOK
;;  ↫   U21AB   8619  \looparrowleft       LEFTWARDS ARROW WITH LOOP
;;  ↬   U21AC   8620  \looparrowright      RIGHTWARDS ARROW WITH LOOP
;;  ↭   U21AD   8621  \leftrightsquigarrow LEFT RIGHT WAVE ARROW
;;  ↮   U21AE   8622  \nleftrightarrow     LEFT RIGHT ARROW WITH STROKE
;;  ↰   U21B0   8624  \Lsh                 UPWARDS ARROW WITH TIP LEFTWARDS
;;  ↱   U21B1   8625  \Rsh                 UPWARDS ARROW WITH TIP RIGHTWARDS
;;  ↶   U21B6   8630  \curvearrowleft      ANTICLOCKWISE TOP SEMICIRCLE ARROW
;;  ↷   U21B7   8631  \curvearrowright     CLOCKWISE TOP SEMICIRCLE ARROW
;;  ↺   U21BA   8634  \circlearrowleft     ANTICLOCKWISE OPEN CIRCLE ARROW
;;  ↻   U21BB   8635  \circlearrowright    CLOCKWISE OPEN CIRCLE ARROW
;;  ↼   U21BC   8636  \leftharpoonup       LEFTWARDS HARPOON WITH BARB UPWARDS
;;  ↽   U21BD   8637  \leftharpoondown     LEFTWARDS HARPOON WITH BARB DOWNWARDS
;;  ↾   U21BE   8638  \uprightharpoon      UPWARDS HARPOON WITH BARB RIGHTWARDS
;;  ↿   U21BF   8639  \upleftharpoon       UPWARDS HARPOON WITH BARB LEFTWARDS
;;  ⇀   U21C0   8640  \rightharpoonup      RIGHTWARDS HARPOON WITH BARB UPWARDS
;;  ⇁   U21C1   8641  \rightharpoondown    RIGHTWARDS HARPOON WITH BARB DOWNWARDS
;;  ⇂   U21C2   8642  \downrightharpoon    DOWNWARDS HARPOON WITH BARB RIGHTWARDS
;;  ⇃   U21C3   8643  \downleftharpoon     DOWNWARDS HARPOON WITH BARB LEFTWARDS
;;  ⇄   U21C4   8644  \rightleftarrows     RIGHTWARDS ARROW OVER LEFTWARDS ARROW
;;  ⇆   U21C6   8646  \leftrightarrows     LEFTWARDS ARROW OVER RIGHTWARDS ARROW
;;  ⇇   U21C7   8647  \leftleftarrows      LEFTWARDS PAIRED ARROWS
;;  ⇈   U21C8   8648  \upuparrows          UPWARDS PAIRED ARROWS
;;  ⇉   U21C9   8649  \rightrightarrows    RIGHTWARDS PAIRED ARROWS
;;  ⇊   U21CA   8650  \downdownarrows      DOWNWARDS PAIRED ARROWS
;;  ⇋   U21CB   8651  \leftrightharpoons   LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON
;;  ⇌   U21CC   8652  \rightleftharpoons   RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON
;;  ⇍   U21CD   8653  \nLeftarrow          LEFTWARDS DOUBLE ARROW WITH STROKE
;;  ⇎   U21CE   8654  \nLeftrightarrow     LEFT RIGHT DOUBLE ARROW WITH STROKE
;;  ⇏   U21CF   8655  \nRightarrow         RIGHTWARDS DOUBLE ARROW WITH STROKE
;;  ⇐   U21D0   8656  \Leftarrow           LEFTWARDS DOUBLE ARROW
;;  ⇐   U21D0   8656  \Longleftarrow       LEFTWARDS DOUBLE ARROW
;;  ⇑   U21D1   8657  \Uparrow             UPWARDS DOUBLE ARROW
;;  ⇒   U21D2   8658  \Longrightarrow      RIGHTWARDS DOUBLE ARROW
;;  ⇒   U21D2   8658  \Rightarrow          RIGHTWARDS DOUBLE ARROW
;;  ⇓   U21D3   8659  \Downarrow           DOWNWARDS DOUBLE ARROW
;;  ⇔   U21D4   8660  \Leftrightarrow      LEFT RIGHT DOUBLE ARROW
;;  ⇔   U21D4   8660  \Longleftrightarrow  LEFT RIGHT DOUBLE ARROW
;;  ⇔   U21D4   8660  \iff                 LEFT RIGHT DOUBLE ARROW
;;  ⇕   U21D5   8661  \Updownarrow         UP DOWN DOUBLE ARROW
;;  ⇚   U21DA   8666  \Lleftarrow          LEFTWARDS TRIPLE ARROW
;;  ⇛   U21DB   8667  \Rrightarrow         RIGHTWARDS TRIPLE ARROW
;;  ⇝   U21DD   8669  \squigarrowright     RIGHTWARDS SQUIGGLE ARROW
;;  ∀   U2200   8704  \forall              FOR ALL
;;  ∁   U2201   8705  \complement          COMPLEMENT
;;  ∂   U2202   8706  \partial             PARTIAL DIFFERENTIAL
;;  ∃   U2203   8707  \exists              THERE EXISTS
;;  ∄   U2204   8708  \nexists             THERE DOES NOT EXIST
;;  ∅   U2205   8709  \emptyset            EMPTY SET
;;  ∇   U2207   8711  \nabla               NABLA
;;  ∈   U2208   8712  \in                  ELEMENT OF
;;  ∉   U2209   8713  \notin               NOT AN ELEMENT OF
;;  ∋   U220B   8715  \ni                  CONTAINS AS MEMBER
;;  ∍   U220D   8717  \backepsilon         SMALL CONTAINS AS MEMBER
;;  ∎   U220E   8718  \qed                 END OF PROOF
;;  ∏   U220F   8719  \prod                N-ARY PRODUCT
;;  ∐   U2210   8720  \amalg               N-ARY COPRODUCT
;;  ∐   U2210   8720  \coprod              N-ARY COPRODUCT
;;  ∐   U2210   8720  \smallamalg          N-ARY COPRODUCT
;;  ∑   U2211   8721  \sum                 N-ARY SUMMATION
;;  −   U2212   8722  \minus               MINUS SIGN
;;  ∓   U2213   8723  \mp                  MINUS-OR-PLUS SIGN
;;  ∔   U2214   8724  \dotplus             DOT PLUS
;;  ∖   U2216   8726  \setminus            SET MINUS
;;  ∖   U2216   8726  \smallsetminus       SET MINUS
;;  ∗   U2217   8727  \ast                 ASTERISK OPERATOR
;;  ∘   U2218   8728  \circ                RING OPERATOR
;;  √   U221A   8730  \surd                SQUARE ROOT
;;  ∝   U221D   8733  \propto              PROPORTIONAL TO
;;  ∝   U221D   8733  \varpropto           PROPORTIONAL TO
;;  ∞   U221E   8734  \infty               INFINITY
;;  ∠   U2220   8736  \angle               ANGLE
;;  ∡   U2221   8737  \measuredangle       MEASURED ANGLE
;;  ∢   U2222   8738  \sphericalangle      SPHERICAL ANGLE
;;  ∣   U2223   8739  \mid                 DIVIDES
;;  ∣   U2223   8739  \shortmid            DIVIDES
;;  ∤   U2224   8740  \nmid                DOES NOT DIVIDE
;;  ∤   U2224   8740  \nshortmid           DOES NOT DIVIDE
;;  ∥   U2225   8741  \parallel            PARALLEL TO
;;  ∥   U2225   8741  \shortparallel       PARALLEL TO
;;  ∦   U2226   8742  \nparallel           NOT PARALLEL TO
;;  ∦   U2226   8742  \nshortparallel      NOT PARALLEL TO
;;  ∧   U2227   8743  \wedge               LOGICAL AND
;;  ∨   U2228   8744  \vee                 LOGICAL OR
;;  ∩   U2229   8745  \cap                 INTERSECTION
;;  ∪   U222A   8746  \cup                 UNION
;;  ∫   U222B   8747  \int                 INTEGRAL
;;  ∮   U222E   8750  \oint                CONTOUR INTEGRAL
;;  ∴   U2234   8756  \therefore           THEREFORE
;;  ∵   U2235   8757  \because             BECAUSE
;;  ∼   U223C   8764  \sim                 TILDE OPERATOR
;;  ∼   U223C   8764  \thicksim            TILDE OPERATOR
;;  ∽   U223D   8765  \backsim             REVERSED TILDE
;;  ≀   U2240   8768  \wr                  WREATH PRODUCT
;;  ≁   U2241   8769  \nsim                NOT TILDE
;;  ≃   U2243   8771  \simeq               ASYMPTOTICALLY EQUAL TO
;;  ≄   U2244   8772  \nsimeq              NOT ASYMPTOTICALLY EQUAL TO
;;  ≅   U2245   8773  \cong                APPROXIMATELY EQUAL TO
;;  ≇   U2247   8775  \ncong               NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO
;;  ≈   U2248   8776  \approx              ALMOST EQUAL TO
;;  ≈   U2248   8776  \thickapprox         ALMOST EQUAL TO
;;  ≉   U2249   8777  \napprox             NOT ALMOST EQUAL TO
;;  ≊   U224A   8778  \approxeq            ALMOST EQUAL OR EQUAL TO
;;  ≌   U224C   8780  \backcong            ALL EQUAL TO
;;  ≍   U224D   8781  \asymp               EQUIVALENT TO
;;  ≎   U224E   8782  \Bumpeq              GEOMETRICALLY EQUIVALENT TO
;;  ≏   U224F   8783  \bumpeq              DIFFERENCE BETWEEN
;;  ≐   U2250   8784  \doteq               APPROACHES THE LIMIT
;;  ≑   U2251   8785  \doteqdot            GEOMETRICALLY EQUAL TO
;;  ≒   U2252   8786  \fallingdotseq       APPROXIMATELY EQUAL TO OR THE IMAGE OF
;;  ≓   U2253   8787  \risingdotseq        IMAGE OF OR APPROXIMATELY EQUAL TO
;;  ≔   U2254   8788  \coloneq             COLON EQUALS
;;  ≕   U2255   8789  \eqcolon             EQUALS COLON
;;  ≖   U2256   8790  \eqcirc              RING IN EQUAL TO
;;  ≗   U2257   8791  \circeq              RING EQUAL TO
;;  ≙   U2259   8793  \defs                ESTIMATES
;;  ≜   U225C   8796  \triangleq           DELTA EQUAL TO
;;  ≠   U2260   8800  \ne                  NOT EQUAL TO
;;  ≠   U2260   8800  \neq                 NOT EQUAL TO
;;  ≡   U2261   8801  \equiv               IDENTICAL TO
;;  ≢   U2262   8802  \nequiv              NOT IDENTICAL TO
;;  ≤   U2264   8804  \le                  LESS-THAN OR EQUAL TO
;;  ≤   U2264   8804  \leq                 LESS-THAN OR EQUAL TO
;;  ≤   U2264   8804  \leqslant            LESS-THAN OR EQUAL TO
;;  ≥   U2265   8805  \ge                  GREATER-THAN OR EQUAL TO
;;  ≥   U2265   8805  \geq                 GREATER-THAN OR EQUAL TO
;;  ≥   U2265   8805  \geqslant            GREATER-THAN OR EQUAL TO
;;  ≦   U2266   8806  \leqq                LESS-THAN OVER EQUAL TO
;;  ≧   U2267   8807  \geqq                GREATER-THAN OVER EQUAL TO
;;  ≨   U2268   8808  \lneq                LESS-THAN BUT NOT EQUAL TO
;;  ≨   U2268   8808  \lneqq               LESS-THAN BUT NOT EQUAL TO
;;  ≨   U2268   8808  \lvertneqq           LESS-THAN BUT NOT EQUAL TO
;;  ≩   U2269   8809  \gneq                GREATER-THAN BUT NOT EQUAL TO
;;  ≩   U2269   8809  \gneqq               GREATER-THAN BUT NOT EQUAL TO
;;  ≩   U2269   8809  \gvertneqq           GREATER-THAN BUT NOT EQUAL TO
;;  ≪   U226A   8810  \ll                  MUCH LESS-THAN
;;  ≫   U226B   8811  \gg                  MUCH GREATER-THAN
;;  ≬   U226C   8812  \between             BETWEEN
;;  ≮   U226E   8814  \nless               NOT LESS-THAN
;;  ≯   U226F   8815  \ngtr                NOT GREATER-THAN
;;  ≰   U2270   8816  \nleq                NEITHER LESS-THAN NOR EQUAL TO
;;  ≰   U2270   8816  \nleqq               NEITHER LESS-THAN NOR EQUAL TO
;;  ≰   U2270   8816  \nleqslant           NEITHER LESS-THAN NOR EQUAL TO
;;  ≱   U2271   8817  \ngeq                NEITHER GREATER-THAN NOR EQUAL TO
;;  ≱   U2271   8817  \ngeqq               NEITHER GREATER-THAN NOR EQUAL TO
;;  ≱   U2271   8817  \ngeqslant           NEITHER GREATER-THAN NOR EQUAL TO
;;  ≲   U2272   8818  \lessapprox          LESS-THAN OR EQUIVALENT TO
;;  ≲   U2272   8818  \lesssim             LESS-THAN OR EQUIVALENT TO
;;  ≳   U2273   8819  \gtrapprox           GREATER-THAN OR EQUIVALENT TO
;;  ≳   U2273   8819  \gtrsim              GREATER-THAN OR EQUIVALENT TO
;;  ≶   U2276   8822  \lessgtr             LESS-THAN OR GREATER-THAN
;;  ≷   U2277   8823  \gtrless             GREATER-THAN OR LESS-THAN
;;  ≺   U227A   8826  \prec                PRECEDES
;;  ≻   U227B   8827  \succ                SUCCEEDS
;;  ≼   U227C   8828  \curlypreceq         PRECEDES OR EQUAL TO
;;  ≼   U227C   8828  \preceq              PRECEDES OR EQUAL TO
;;  ≽   U227D   8829  \succcurlyeq         SUCCEEDS OR EQUAL TO
;;  ≽   U227D   8829  \succeq              SUCCEEDS OR EQUAL TO
;;  ≾   U227E   8830  \precapprox          PRECEDES OR EQUIVALENT TO
;;  ≾   U227E   8830  \precsim             PRECEDES OR EQUIVALENT TO
;;  ≿   U227F   8831  \succapprox          SUCCEEDS OR EQUIVALENT TO
;;  ≿   U227F   8831  \succsim             SUCCEEDS OR EQUIVALENT TO
;;  ⊀   U2280   8832  \nprec               DOES NOT PRECEDE
;;  ⊁   U2281   8833  \nsucc               DOES NOT SUCCEED
;;  ⊂   U2282   8834  \subset              SUBSET OF
;;  ⊃   U2283   8835  \supset              SUPERSET OF
;;  ⊄   U2284   8836  \nsubset             NOT A SUBSET OF
;;  ⊅   U2285   8837  \nsupset             NOT A SUPERSET OF
;;  ⊆   U2286   8838  \subseteq            SUBSET OF OR EQUAL TO
;;  ⊆   U2286   8838  \subseteqq           SUBSET OF OR EQUAL TO
;;  ⊇   U2287   8839  \supseteq            SUPERSET OF OR EQUAL TO
;;  ⊇   U2287   8839  \supseteqq           SUPERSET OF OR EQUAL TO
;;  ⊈   U2288   8840  \nsubseteq           NEITHER A SUBSET OF NOR EQUAL TO
;;  ⊈   U2288   8840  \nsubseteqq          NEITHER A SUBSET OF NOR EQUAL TO
;;  ⊉   U2289   8841  \nsupseteq           NEITHER A SUPERSET OF NOR EQUAL TO
;;  ⊉   U2289   8841  \nsupseteqq          NEITHER A SUPERSET OF NOR EQUAL TO
;;  ⊊   U228A   8842  \subsetneq           SUBSET OF WITH NOT EQUAL TO
;;  ⊊   U228A   8842  \subsetneqq          SUBSET OF WITH NOT EQUAL TO
;;  ⊋   U228B   8843  \supsetneq           SUPERSET OF WITH NOT EQUAL TO
;;  ⊋   U228B   8843  \supsetneqq          SUPERSET OF WITH NOT EQUAL TO
;;  ⊎   U228E   8846  \uplus               MULTISET UNION
;;  ⊏   U228F   8847  \sqsubset            SQUARE IMAGE OF
;;  ⊐   U2290   8848  \sqsupset            SQUARE ORIGINAL OF
;;  ⊑   U2291   8849  \sqsubseteq          SQUARE IMAGE OF OR EQUAL TO
;;  ⊒   U2292   8850  \sqsupseteq          SQUARE ORIGINAL OF OR EQUAL TO
;;  ⊓   U2293   8851  \sqcap               SQUARE CAP
;;  ⊔   U2294   8852  \sqcup               SQUARE CUP
;;  ⊕   U2295   8853  \oplus               CIRCLED PLUS
;;  ⊖   U2296   8854  \ominus              CIRCLED MINUS
;;  ⊗   U2297   8855  \otimes              CIRCLED TIMES
;;  ⊘   U2298   8856  \oslash              CIRCLED DIVISION SLASH
;;  ⊙   U2299   8857  \odot                CIRCLED DOT OPERATOR
;;  ⊚   U229A   8858  \circledcirc         CIRCLED RING OPERATOR
;;  ⊛   U229B   8859  \circledast          CIRCLED ASTERISK OPERATOR
;;  ⊝   U229D   8861  \circleddash         CIRCLED DASH
;;  ⊞   U229E   8862  \boxplus             SQUARED PLUS
;;  ⊟   U229F   8863  \boxminus            SQUARED MINUS
;;  ⊠   U22A0   8864  \boxtimes            SQUARED TIMES
;;  ⊡   U22A1   8865  \dotsquare           SQUARED DOT OPERATOR
;;  ⊢   U22A2   8866  \vdash               RIGHT TACK
;;  ⊣   U22A3   8867  \dashv               LEFT TACK
;;  ⊤   U22A4   8868  \top                 DOWN TACK
;;  ⊥   U22A5   8869  \bot                 UP TACK
;;  ⊥   U22A5   8869  \perp                UP TACK
;;  ⊧   U22A7   8871  \models              MODELS
;;  ⊨   U22A8   8872  \vDash               TRUE
;;  ⊩   U22A9   8873  \Vdash               FORCES
;;  ⊪   U22AA   8874  \Vvdash              TRIPLE VERTICAL BAR RIGHT TURNSTILE
;;  ⊬   U22AC   8876  \nvdash              DOES NOT PROVE
;;  ⊭   U22AD   8877  \nvDash              NOT TRUE
;;  ⊮   U22AE   8878  \nVdash              DOES NOT FORCE
;;  ⊯   U22AF   8879  \nVDash              NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE
;;  ⊲   U22B2   8882  \vartriangleleft     NORMAL SUBGROUP OF
;;  ⊳   U22B3   8883  \vartriangleright    CONTAINS AS NORMAL SUBGROUP
;;  ⊴   U22B4   8884  \trianglelefteq      NORMAL SUBGROUP OF OR EQUAL TO
;;  ⊵   U22B5   8885  \trianglerighteq     CONTAINS AS NORMAL SUBGROUP OR EQUAL TO
;;  ⊸   U22B8   8888  \multimap            MULTIMAP
;;  ⊺   U22BA   8890  \intercal            INTERCALATE
;;  ⊻   U22BB   8891  \veebar              XOR
;;  ⊼   U22BC   8892  \barwedge            NAND
;;  ⋀   U22C0   8896  \bigwedge            N-ARY LOGICAL AND
;;  ⋁   U22C1   8897  \bigvee              N-ARY LOGICAL OR
;;  ⋂   U22C2   8898  \bigcap              N-ARY INTERSECTION
;;  ⋃   U22C3   8899  \bigcup              N-ARY UNION
;;  ⋄   U22C4   8900  \diamond             DIAMOND OPERATOR
;;  ⋆   U22C6   8902  \star                STAR OPERATOR
;;  ⋇   U22C7   8903  \divideontimes       DIVISION TIMES
;;  ⋈   U22C8   8904  \Join                BOWTIE
;;  ⋈   U22C8   8904  \bowtie              BOWTIE
;;  ⋉   U22C9   8905  \ltimes              LEFT NORMAL FACTOR SEMIDIRECT PRODUCT
;;  ⋊   U22CA   8906  \rtimes              RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT
;;  ⋋   U22CB   8907  \leftthreetimes      LEFT SEMIDIRECT PRODUCT
;;  ⋌   U22CC   8908  \rightthreetimes     RIGHT SEMIDIRECT PRODUCT
;;  ⋍   U22CD   8909  \backsimeq           REVERSED TILDE EQUALS
;;  ⋎   U22CE   8910  \curlyvee            CURLY LOGICAL OR
;;  ⋏   U22CF   8911  \curlywedge          CURLY LOGICAL AND
;;  ⋐   U22D0   8912  \Subset              DOUBLE SUBSET
;;  ⋑   U22D1   8913  \Supset              DOUBLE SUPERSET
;;  ⋒   U22D2   8914  \Cap                 DOUBLE INTERSECTION
;;  ⋓   U22D3   8915  \Cup                 DOUBLE UNION
;;  ⋔   U22D4   8916  \pitchfork           PITCHFORK
;;  ⋖   U22D6   8918  \lessdot             LESS-THAN WITH DOT
;;  ⋗   U22D7   8919  \gtrdot              GREATER-THAN WITH DOT
;;  ⋘   U22D8   8920  \Ll                  VERY MUCH LESS-THAN
;;  ⋙   U22D9   8921  \ggg                 VERY MUCH GREATER-THAN
;;  ⋚   U22DA   8922  \lesseqgtr           LESS-THAN EQUAL TO OR GREATER-THAN
;;  ⋚   U22DA   8922  \lesseqqgtr          LESS-THAN EQUAL TO OR GREATER-THAN
;;  ⋛   U22DB   8923  \gtreqless           GREATER-THAN EQUAL TO OR LESS-THAN
;;  ⋛   U22DB   8923  \gtreqqless          GREATER-THAN EQUAL TO OR LESS-THAN
;;  ⋜   U22DC   8924  \eqslantless         EQUAL TO OR LESS-THAN
;;  ⋝   U22DD   8925  \eqslantgtr          EQUAL TO OR GREATER-THAN
;;  ⋞   U22DE   8926  \curlyeqprec         EQUAL TO OR PRECEDES
;;  ⋟   U22DF   8927  \curlyeqsucc         EQUAL TO OR SUCCEEDS
;;  ⋠   U22E0   8928  \npreceq             DOES NOT PRECEDE OR EQUAL
;;  ⋡   U22E1   8929  \nsucceq             DOES NOT SUCCEED OR EQUAL
;;  ⋦   U22E6   8934  \lnapprox            LESS-THAN BUT NOT EQUIVALENT TO
;;  ⋦   U22E6   8934  \lnsim               LESS-THAN BUT NOT EQUIVALENT TO
;;  ⋧   U22E7   8935  \gnapprox            GREATER-THAN BUT NOT EQUIVALENT TO
;;  ⋧   U22E7   8935  \gnsim               GREATER-THAN BUT NOT EQUIVALENT TO
;;  ⋨   U22E8   8936  \precnapprox         PRECEDES BUT NOT EQUIVALENT TO
;;  ⋨   U22E8   8936  \precnsim            PRECEDES BUT NOT EQUIVALENT TO
;;  ⋩   U22E9   8937  \succnapprox         SUCCEEDS BUT NOT EQUIVALENT TO
;;  ⋩   U22E9   8937  \succnsim            SUCCEEDS BUT NOT EQUIVALENT TO
;;  ⋪   U22EA   8938  \ntriangleleft       NOT NORMAL SUBGROUP OF
;;  ⋫   U22EB   8939  \ntriangleright      DOES NOT CONTAIN AS NORMAL SUBGROUP
;;  ⋬   U22EC   8940  \ntrianglelefteq     NOT NORMAL SUBGROUP OF OR EQUAL TO
;;  ⋭   U22ED   8941  \ntrianglerighteq    DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL
;;  ⋮   U22EE   8942  \vdots               VERTICAL ELLIPSIS
;;  ⋯   U22EF   8943  \cdots               MIDLINE HORIZONTAL ELLIPSIS
;;  ⋱   U22F1   8945  \ddots               DOWN RIGHT DIAGONAL ELLIPSIS
;;  ⌀   U2300   8960  \diameter            DIAMETER SIGN
;;  ⌈   U2308   8968  \lceil               LEFT CEILING
;;  ⌉   U2309   8969  \rceil               RIGHT CEILING
;;  ⌊   U230A   8970  \lfloor              LEFT FLOOR
;;  ⌋   U230B   8971  \rfloor              RIGHT FLOOR
;;  ⌜   U231C   8988  \ulcorner            TOP LEFT CORNER
;;  ⌝   U231D   8989  \urcorner            TOP RIGHT CORNER
;;  ⌞   U231E   8990  \llcorner            BOTTOM LEFT CORNER
;;  ⌟   U231F   8991  \lrcorner            BOTTOM RIGHT CORNER
;;  ⌢   U2322   8994  \frown               FROWN
;;  ⌣   U2323   8995  \smallsmile          SMILE
;;  ⌣   U2323   8995  \smile               SMILE
;;  Ⓢ   U24C8   9416  \circledS            CIRCLED LATIN CAPITAL LETTER S
;;  □   U25A1   9633  \Box                 WHITE SQUARE
;;  □   U25A1   9633  \square              WHITE SQUARE
;;  ▪   U25AA   9642  \blacksquare         BLACK SMALL SQUARE
;;  △   U25B3   9651  \bigtriangleup       WHITE UP-POINTING TRIANGLE
;;  ▴   U25B4   9652  \blacktriangle       BLACK UP-POINTING SMALL TRIANGLE
;;  ▵   U25B5   9653  \triangle            WHITE UP-POINTING SMALL TRIANGLE
;;  ▷   U25B7   9655  \rhd                 WHITE RIGHT-POINTING TRIANGLE
;;  ▸   U25B8   9656  \blacktriangleright  BLACK RIGHT-POINTING SMALL TRIANGLE
;;  ▹   U25B9   9657  \triangleright       WHITE RIGHT-POINTING SMALL TRIANGLE
;;  ▽   U25BD   9661  \bigtriangledown     WHITE DOWN-POINTING TRIANGLE
;;  ▾   U25BE   9662  \blacktriangledown   BLACK DOWN-POINTING SMALL TRIANGLE
;;  ▿   U25BF   9663  \triangledown        WHITE DOWN-POINTING SMALL TRIANGLE
;;  ◁   U25C1   9665  \lhd                 WHITE LEFT-POINTING TRIANGLE
;;  ◂   U25C2   9666  \blacktriangleleft   BLACK LEFT-POINTING SMALL TRIANGLE
;;  ◃   U25C3   9667  \triangleleft        WHITE LEFT-POINTING SMALL TRIANGLE
;;  ◇   U25C7   9671  \Diamond             WHITE DIAMOND
;;  ◦   U25E6   9702  \textopenbullet      WHITE BULLET
;;  ◯   U25EF   9711  \bigcirc             LARGE CIRCLE
;;  ★   U2605   9733  \bigstar             BLACK STAR
;;  ☡   U2621   9761  \caution             CAUTION SIGN
;;  ☢   U2622   9762  \radioactive         RADIOACTIVE SIGN
;;  ☣   U2623   9763  \biohazard           BIOHAZARD SIGN
;;  ☹   U2639   9785  \Frowny              WHITE FROWNING FACE
;;  ☺   U263A   9786  \Smiley              WHITE SMILING FACE
;;  ☻   U263B   9787  \blacksmiley         BLACK SMILING FACE
;;  ♀   U2640   9792  \female              FEMALE SIGN
;;  ♂   U2642   9794  \male                MALE SIGN
;;  ♠   U2660   9824  \spadesuit           BLACK SPADE SUIT
;;  ♢   U2662   9826  \diamondsuit         WHITE DIAMOND SUIT
;;  ♣   U2663   9827  \clubsuit            BLACK CLUB SUIT
;;  ♥   U2665   9829  \heartsuit           BLACK HEART SUIT
;;  ♪   U266A   9834  \textmusicalnote     EIGHTH NOTE
;;  ♭   U266D   9837  \flat                MUSIC FLAT SIGN
;;  ♮   U266E   9838  \natural             MUSIC NATURAL SIGN
;;  ♯   U266F   9839  \sharp               MUSIC SHARP SIGN
;;  ⚠   U26A0   9888  \warning             WARNING SIGN
;;  ✉   U2709   9993  \Letter              ENVELOPE
;;  ✓   U2713  10003  \checkmark           CHECK MARK
;;  ✝   U271D  10013  \textdied            LATIN CROSS
;;  ✠   U2720  10016  \maltese             MALTESE CROSS
;;  ✦   U2726  10022  \blacklozenge        BLACK FOUR POINTED STAR
;;  ✧   U2727  10023  \lozenge             WHITE FOUR POINTED STAR
;;  ⟨   U27E8  10216  \langle              MATHEMATICAL LEFT ANGLE BRACKET
;;  ⟩   U27E9  10217  \rangle              MATHEMATICAL RIGHT ANGLE BRACKET
;;  ⯑   U2BD1  11217  \uncertainty         UNCERTAINTY SIGN
;;  ⱼ   U2C7C  11388  _j                   LATIN SUBSCRIPT SMALL LETTER J
;;  ⱽ   U2C7D  11389  ^V                   MODIFIER LETTER CAPITAL V
;;  《  U300A  12298  \ldata               LEFT DOUBLE ANGLE BRACKET
;;  》  U300B  12299  \rdata               RIGHT DOUBLE ANGLE BRACKET
;;  〚  U301A  12314  \llbracket           LEFT WHITE SQUARE BRACKET
;;  〛  U301B  12315  \rrbracket           RIGHT WHITE SQUARE BRACKET
;;  ㉐  U3250  12880  \partnership         PARTNERSHIP SIGN
;;  ꟸ   UA7F8  43000  ^\H With Stroke      MODIFIER LETTER CAPITAL H WITH STROKE
;;  ꟹ   UA7F9  43001  ^\ligature oe        MODIFIER LETTER SMALL LIGATURE OE
;;  ꭜ   UAB5C  43868  ^\heng               MODIFIER LETTER SMALL HENG
;;  ꭝ   UAB5D  43869  ^\l with inverted lazy s MODIFIER LETTER SMALL L WITH INVERTED LAZY S
;;  ꭞ   UAB5E  43870  ^\l with middle tilde MODIFIER LETTER SMALL L WITH MIDDLE TILDE
;;  ꭟ   UAB5F  43871  ^\u with left hook   MODIFIER LETTER SMALL U WITH LEFT HOOK
;;  ﷼   UFDFC  65020  \rial                RIAL SIGN
;;  ﹨  UFE68  65128  \sbs                 SMALL REVERSE SOLIDUS
;;  𐆎   U1018E  65934  \nomisma             NOMISMA SIGN
;;  🚧  U1F6A7  128679  \construction        CONSTRUCTION SIGN
;;  🛇   U1F6C7  128711  \prohibited          PROHIBITED SIGN
;;  🛑  U1F6D1  128721  \octagonal           OCTAGONAL SIGN


;; ========= THE HOTSTRING CODE ======================================

;; Glyph: '[' Descr: LEFT SQUARE BRACKET

#if EmacsCase() && EmacsEnabled
::\lbrack::
send ^x8{Enter}5b{Enter}
return

#if GtkApplicationCase()
::\lbrack::
send ^+u5b{Enter}
return

#if OtherCase()
::\lbrack::
send {U+005B}
return


;; Glyph: '\' Descr: REVERSE SOLIDUS

#if EmacsCase() && EmacsEnabled
::\\::
send ^x8{Enter}5c{Enter}
return

#if GtkApplicationCase()
::\\::
send ^+u5c{Enter}
return

#if OtherCase()
::\\::
send {U+005C}
return


;; Glyph: '\' Descr: REVERSE SOLIDUS

#if EmacsCase() && EmacsEnabled
::\backslash::
send ^x8{Enter}5c{Enter}
return

#if GtkApplicationCase()
::\backslash::
send ^+u5c{Enter}
return

#if OtherCase()
::\backslash::
send {U+005C}
return


;; Glyph: ']' Descr: RIGHT SQUARE BRACKET

#if EmacsCase() && EmacsEnabled
::\rbrack::
send ^x8{Enter}5d{Enter}
return

#if GtkApplicationCase()
::\rbrack::
send ^+u5d{Enter}
return

#if OtherCase()
::\rbrack::
send {U+005D}
return


;; Glyph: '{' Descr: LEFT CURLY BRACKET

#if EmacsCase() && EmacsEnabled
::\lbrace::
send ^x8{Enter}7b{Enter}
return

#if GtkApplicationCase()
::\lbrace::
send ^+u7b{Enter}
return

#if OtherCase()
::\lbrace::
send {U+007B}
return


;; Glyph: '|' Descr: VERTICAL LINE

#if EmacsCase() && EmacsEnabled
::\vert::
send ^x8{Enter}7c{Enter}
return

#if GtkApplicationCase()
::\vert::
send ^+u7c{Enter}
return

#if OtherCase()
::\vert::
send {U+007C}
return


;; Glyph: '}' Descr: RIGHT CURLY BRACKET

#if EmacsCase() && EmacsEnabled
::\rbrace::
send ^x8{Enter}7d{Enter}
return

#if GtkApplicationCase()
::\rbrace::
send ^+u7d{Enter}
return

#if OtherCase()
::\rbrace::
send {U+007D}
return


;; Glyph: '¡' Descr: INVERTED EXCLAMATION MARK

#if EmacsCase() && EmacsEnabled
::!``::
send ^x8{Enter}a1{Enter}
return

#if GtkApplicationCase()
::!``::
send ^+ua1{Enter}
return

#if OtherCase()
::!``::
send {U+00A1}
return


;; Glyph: '¢' Descr: CENT SIGN

#if EmacsCase() && EmacsEnabled
::\cent::
send ^x8{Enter}a2{Enter}
return

#if GtkApplicationCase()
::\cent::
send ^+ua2{Enter}
return

#if OtherCase()
::\cent::
send {U+00A2}
return


;; Glyph: '£' Descr: POUND SIGN

#if EmacsCase() && EmacsEnabled
::\pound::
send ^x8{Enter}a3{Enter}
return

#if GtkApplicationCase()
::\pound::
send ^+ua3{Enter}
return

#if OtherCase()
::\pound::
send {U+00A3}
return


;; Glyph: '£' Descr: POUND SIGN

#if EmacsCase() && EmacsEnabled
::\pounds::
send ^x8{Enter}a3{Enter}
return

#if GtkApplicationCase()
::\pounds::
send ^+ua3{Enter}
return

#if OtherCase()
::\pounds::
send {U+00A3}
return


;; Glyph: '¤' Descr: CURRENCY SIGN

#if EmacsCase() && EmacsEnabled
::\currency::
send ^x8{Enter}a4{Enter}
return

#if GtkApplicationCase()
::\currency::
send ^+ua4{Enter}
return

#if OtherCase()
::\currency::
send {U+00A4}
return


;; Glyph: '¥' Descr: YEN SIGN

#if EmacsCase() && EmacsEnabled
::\yen::
send ^x8{Enter}a5{Enter}
return

#if GtkApplicationCase()
::\yen::
send ^+ua5{Enter}
return

#if OtherCase()
::\yen::
send {U+00A5}
return


;; Glyph: '§' Descr: SECTION SIGN

#if EmacsCase() && EmacsEnabled
::\S::
send ^x8{Enter}a7{Enter}
return

#if GtkApplicationCase()
::\S::
send ^+ua7{Enter}
return

#if OtherCase()
::\S::
send {U+00A7}
return


;; Glyph: '§' Descr: SECTION SIGN

#if EmacsCase() && EmacsEnabled
::\section::
send ^x8{Enter}a7{Enter}
return

#if GtkApplicationCase()
::\section::
send ^+ua7{Enter}
return

#if OtherCase()
::\section::
send {U+00A7}
return


;; Glyph: '¨' Descr: DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{}::
send ^x8{Enter}a8{Enter}
return

#if GtkApplicationCase()
::\"{}::
send ^+ua8{Enter}
return

#if OtherCase()
::\"{}::
send {U+00A8}
return


;; Glyph: '©' Descr: COPYRIGHT SIGN

#if EmacsCase() && EmacsEnabled
::\copyright::
send ^x8{Enter}a9{Enter}
return

#if GtkApplicationCase()
::\copyright::
send ^+ua9{Enter}
return

#if OtherCase()
::\copyright::
send {U+00A9}
return


;; Glyph: 'ª' Descr: FEMININE ORDINAL INDICATOR

#if EmacsCase() && EmacsEnabled
::$^a$::
send ^x8{Enter}aa{Enter}
return

#if GtkApplicationCase()
::$^a$::
send ^+uaa{Enter}
return

#if OtherCase()
::$^a$::
send {U+00AA}
return


;; Glyph: 'ª' Descr: FEMININE ORDINAL INDICATOR

#if EmacsCase() && EmacsEnabled
::\ordfeminine::
send ^x8{Enter}aa{Enter}
return

#if GtkApplicationCase()
::\ordfeminine::
send ^+uaa{Enter}
return

#if OtherCase()
::\ordfeminine::
send {U+00AA}
return


;; Glyph: '«' Descr: LEFT-POINTING DOUBLE ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\"<::
send ^x8{Enter}ab{Enter}
return

#if GtkApplicationCase()
::\"<::
send ^+uab{Enter}
return

#if OtherCase()
::\"<::
send {U+00AB}
return


;; Glyph: '«' Descr: LEFT-POINTING DOUBLE ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\flqq::
send ^x8{Enter}ab{Enter}
return

#if GtkApplicationCase()
::\flqq::
send ^+uab{Enter}
return

#if OtherCase()
::\flqq::
send {U+00AB}
return


;; Glyph: '¬' Descr: NOT SIGN

#if EmacsCase() && EmacsEnabled
::\lnot::
send ^x8{Enter}ac{Enter}
return

#if GtkApplicationCase()
::\lnot::
send ^+uac{Enter}
return

#if OtherCase()
::\lnot::
send {U+00AC}
return


;; Glyph: '¬' Descr: NOT SIGN

#if EmacsCase() && EmacsEnabled
::\neg::
send ^x8{Enter}ac{Enter}
return

#if GtkApplicationCase()
::\neg::
send ^+uac{Enter}
return

#if OtherCase()
::\neg::
send {U+00AC}
return


;; Glyph: '­' Descr: SOFT HYPHEN

#if EmacsCase() && EmacsEnabled
::\-::
send ^x8{Enter}ad{Enter}
return

#if GtkApplicationCase()
::\-::
send ^+uad{Enter}
return

#if OtherCase()
::\-::
send {U+00AD}
return


;; Glyph: '®' Descr: REGISTERED SIGN

#if EmacsCase() && EmacsEnabled
::\circledR::
send ^x8{Enter}ae{Enter}
return

#if GtkApplicationCase()
::\circledR::
send ^+uae{Enter}
return

#if OtherCase()
::\circledR::
send {U+00AE}
return


;; Glyph: '®' Descr: REGISTERED SIGN

#if EmacsCase() && EmacsEnabled
::\registered::
send ^x8{Enter}ae{Enter}
return

#if GtkApplicationCase()
::\registered::
send ^+uae{Enter}
return

#if OtherCase()
::\registered::
send {U+00AE}
return


;; Glyph: '¯' Descr: MACRON

#if EmacsCase() && EmacsEnabled
::\={}::
send ^x8{Enter}af{Enter}
return

#if GtkApplicationCase()
::\={}::
send ^+uaf{Enter}
return

#if OtherCase()
::\={}::
send {U+00AF}
return


;; Glyph: '°' Descr: DEGREE SIGN

#if EmacsCase() && EmacsEnabled
::\degree::
send ^x8{Enter}b0{Enter}
return

#if GtkApplicationCase()
::\degree::
send ^+ub0{Enter}
return

#if OtherCase()
::\degree::
send {U+00B0}
return


;; Glyph: '±' Descr: PLUS-MINUS SIGN

#if EmacsCase() && EmacsEnabled
::$\pm$::
send ^x8{Enter}b1{Enter}
return

#if GtkApplicationCase()
::$\pm$::
send ^+ub1{Enter}
return

#if OtherCase()
::$\pm$::
send {U+00B1}
return


;; Glyph: '±' Descr: PLUS-MINUS SIGN

#if EmacsCase() && EmacsEnabled
::\pm::
send ^x8{Enter}b1{Enter}
return

#if GtkApplicationCase()
::\pm::
send ^+ub1{Enter}
return

#if OtherCase()
::\pm::
send {U+00B1}
return


;; Glyph: '²' Descr: SUPERSCRIPT TWO

#if EmacsCase() && EmacsEnabled
::$^2$::
send ^x8{Enter}b2{Enter}
return

#if GtkApplicationCase()
::$^2$::
send ^+ub2{Enter}
return

#if OtherCase()
::$^2$::
send {U+00B2}
return


;; Glyph: '²' Descr: SUPERSCRIPT TWO

#if EmacsCase() && EmacsEnabled
::^2::
send ^x8{Enter}b2{Enter}
return

#if GtkApplicationCase()
::^2::
send ^+ub2{Enter}
return

#if OtherCase()
::^2::
send {U+00B2}
return


;; Glyph: '³' Descr: SUPERSCRIPT THREE

#if EmacsCase() && EmacsEnabled
::$^3$::
send ^x8{Enter}b3{Enter}
return

#if GtkApplicationCase()
::$^3$::
send ^+ub3{Enter}
return

#if OtherCase()
::$^3$::
send {U+00B3}
return


;; Glyph: '³' Descr: SUPERSCRIPT THREE

#if EmacsCase() && EmacsEnabled
::^3::
send ^x8{Enter}b3{Enter}
return

#if GtkApplicationCase()
::^3::
send ^+ub3{Enter}
return

#if OtherCase()
::^3::
send {U+00B3}
return


;; Glyph: '´' Descr: ACUTE ACCENT

#if EmacsCase() && EmacsEnabled
::\'{}::
send ^x8{Enter}b4{Enter}
return

#if GtkApplicationCase()
::\'{}::
send ^+ub4{Enter}
return

#if OtherCase()
::\'{}::
send {U+00B4}
return


;; Glyph: 'µ' Descr: MICRO SIGN

#if EmacsCase() && EmacsEnabled
::\micro::
send ^x8{Enter}b5{Enter}
return

#if GtkApplicationCase()
::\micro::
send ^+ub5{Enter}
return

#if OtherCase()
::\micro::
send {U+00B5}
return


;; Glyph: 'µ' Descr: MICRO SIGN

#if EmacsCase() && EmacsEnabled
::\textmu::
send ^x8{Enter}b5{Enter}
return

#if GtkApplicationCase()
::\textmu::
send ^+ub5{Enter}
return

#if OtherCase()
::\textmu::
send {U+00B5}
return


;; Glyph: '¶' Descr: PILCROW SIGN

#if EmacsCase() && EmacsEnabled
::\P::
send ^x8{Enter}b6{Enter}
return

#if GtkApplicationCase()
::\P::
send ^+ub6{Enter}
return

#if OtherCase()
::\P::
send {U+00B6}
return


;; Glyph: '¶' Descr: PILCROW SIGN

#if EmacsCase() && EmacsEnabled
::\paragraph::
send ^x8{Enter}b6{Enter}
return

#if GtkApplicationCase()
::\paragraph::
send ^+ub6{Enter}
return

#if OtherCase()
::\paragraph::
send {U+00B6}
return


;; Glyph: '¶' Descr: PILCROW SIGN

#if EmacsCase() && EmacsEnabled
::\pilcrow::
send ^x8{Enter}b6{Enter}
return

#if GtkApplicationCase()
::\pilcrow::
send ^+ub6{Enter}
return

#if OtherCase()
::\pilcrow::
send {U+00B6}
return


;; Glyph: '·' Descr: MIDDLE DOT

#if EmacsCase() && EmacsEnabled
::$\cdot$::
send ^x8{Enter}b7{Enter}
return

#if GtkApplicationCase()
::$\cdot$::
send ^+ub7{Enter}
return

#if OtherCase()
::$\cdot$::
send {U+00B7}
return


;; Glyph: '·' Descr: MIDDLE DOT

#if EmacsCase() && EmacsEnabled
::\cdot::
send ^x8{Enter}b7{Enter}
return

#if GtkApplicationCase()
::\cdot::
send ^+ub7{Enter}
return

#if OtherCase()
::\cdot::
send {U+00B7}
return


;; Glyph: '·' Descr: MIDDLE DOT

#if EmacsCase() && EmacsEnabled
::\centerdot::
send ^x8{Enter}b7{Enter}
return

#if GtkApplicationCase()
::\centerdot::
send ^+ub7{Enter}
return

#if OtherCase()
::\centerdot::
send {U+00B7}
return


;; Glyph: '¸' Descr: CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{}::
send ^x8{Enter}b8{Enter}
return

#if GtkApplicationCase()
::\c{}::
send ^+ub8{Enter}
return

#if OtherCase()
::\c{}::
send {U+00B8}
return


;; Glyph: '¹' Descr: SUPERSCRIPT ONE

#if EmacsCase() && EmacsEnabled
::$^1$::
send ^x8{Enter}b9{Enter}
return

#if GtkApplicationCase()
::$^1$::
send ^+ub9{Enter}
return

#if OtherCase()
::$^1$::
send {U+00B9}
return


;; Glyph: '¹' Descr: SUPERSCRIPT ONE

#if EmacsCase() && EmacsEnabled
::^1::
send ^x8{Enter}b9{Enter}
return

#if GtkApplicationCase()
::^1::
send ^+ub9{Enter}
return

#if OtherCase()
::^1::
send {U+00B9}
return


;; Glyph: 'º' Descr: MASCULINE ORDINAL INDICATOR

#if EmacsCase() && EmacsEnabled
::$^o$::
send ^x8{Enter}ba{Enter}
return

#if GtkApplicationCase()
::$^o$::
send ^+uba{Enter}
return

#if OtherCase()
::$^o$::
send {U+00BA}
return


;; Glyph: 'º' Descr: MASCULINE ORDINAL INDICATOR

#if EmacsCase() && EmacsEnabled
::\ordmasculine::
send ^x8{Enter}ba{Enter}
return

#if GtkApplicationCase()
::\ordmasculine::
send ^+uba{Enter}
return

#if OtherCase()
::\ordmasculine::
send {U+00BA}
return


;; Glyph: 'º' Descr: MASCULINE ORDINAL INDICATOR

#if EmacsCase() && EmacsEnabled
::^o_::
send ^x8{Enter}ba{Enter}
return

#if GtkApplicationCase()
::^o_::
send ^+uba{Enter}
return

#if OtherCase()
::^o_::
send {U+00BA}
return


;; Glyph: '»' Descr: RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\">::
send ^x8{Enter}bb{Enter}
return

#if GtkApplicationCase()
::\">::
send ^+ubb{Enter}
return

#if OtherCase()
::\">::
send {U+00BB}
return


;; Glyph: '»' Descr: RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\frqq::
send ^x8{Enter}bb{Enter}
return

#if GtkApplicationCase()
::\frqq::
send ^+ubb{Enter}
return

#if OtherCase()
::\frqq::
send {U+00BB}
return


;; Glyph: '¼' Descr: VULGAR FRACTION ONE QUARTER

#if EmacsCase() && EmacsEnabled
::\frac14::
send ^x8{Enter}bc{Enter}
return

#if GtkApplicationCase()
::\frac14::
send ^+ubc{Enter}
return

#if OtherCase()
::\frac14::
send {U+00BC}
return


;; Glyph: '½' Descr: VULGAR FRACTION ONE HALF

#if EmacsCase() && EmacsEnabled
::\frac12::
send ^x8{Enter}bd{Enter}
return

#if GtkApplicationCase()
::\frac12::
send ^+ubd{Enter}
return

#if OtherCase()
::\frac12::
send {U+00BD}
return


;; Glyph: '¾' Descr: VULGAR FRACTION THREE QUARTERS

#if EmacsCase() && EmacsEnabled
::\frac34::
send ^x8{Enter}be{Enter}
return

#if GtkApplicationCase()
::\frac34::
send ^+ube{Enter}
return

#if OtherCase()
::\frac34::
send {U+00BE}
return


;; Glyph: '¿' Descr: INVERTED QUESTION MARK

#if EmacsCase() && EmacsEnabled
::?``::
send ^x8{Enter}bf{Enter}
return

#if GtkApplicationCase()
::?``::
send ^+ubf{Enter}
return

#if OtherCase()
::?``::
send {U+00BF}
return


;; Glyph: 'À' Descr: LATIN CAPITAL LETTER A WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``A::
send ^x8{Enter}c0{Enter}
return

#if GtkApplicationCase()
::\``A::
send ^+uc0{Enter}
return

#if OtherCase()
::\``A::
send {U+00C0}
return


;; Glyph: 'À' Descr: LATIN CAPITAL LETTER A WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{A}::
send ^x8{Enter}c0{Enter}
return

#if GtkApplicationCase()
::\``{A}::
send ^+uc0{Enter}
return

#if OtherCase()
::\``{A}::
send {U+00C0}
return


;; Glyph: 'Á' Descr: LATIN CAPITAL LETTER A WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'A::
send ^x8{Enter}c1{Enter}
return

#if GtkApplicationCase()
::\'A::
send ^+uc1{Enter}
return

#if OtherCase()
::\'A::
send {U+00C1}
return


;; Glyph: 'Á' Descr: LATIN CAPITAL LETTER A WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{A}::
send ^x8{Enter}c1{Enter}
return

#if GtkApplicationCase()
::\'{A}::
send ^+uc1{Enter}
return

#if OtherCase()
::\'{A}::
send {U+00C1}
return


;; Glyph: 'Â' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^A::
send ^x8{Enter}c2{Enter}
return

#if GtkApplicationCase()
::\^A::
send ^+uc2{Enter}
return

#if OtherCase()
::\^A::
send {U+00C2}
return


;; Glyph: 'Â' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{A}::
send ^x8{Enter}c2{Enter}
return

#if GtkApplicationCase()
::\^{A}::
send ^+uc2{Enter}
return

#if OtherCase()
::\^{A}::
send {U+00C2}
return


;; Glyph: 'Ã' Descr: LATIN CAPITAL LETTER A WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~A::
send ^x8{Enter}c3{Enter}
return

#if GtkApplicationCase()
::\~A::
send ^+uc3{Enter}
return

#if OtherCase()
::\~A::
send {U+00C3}
return


;; Glyph: 'Ã' Descr: LATIN CAPITAL LETTER A WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{A}::
send ^x8{Enter}c3{Enter}
return

#if GtkApplicationCase()
::\~{A}::
send ^+uc3{Enter}
return

#if OtherCase()
::\~{A}::
send {U+00C3}
return


;; Glyph: 'Ä' Descr: LATIN CAPITAL LETTER A WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"A::
send ^x8{Enter}c4{Enter}
return

#if GtkApplicationCase()
::\"A::
send ^+uc4{Enter}
return

#if OtherCase()
::\"A::
send {U+00C4}
return


;; Glyph: 'Ä' Descr: LATIN CAPITAL LETTER A WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{A}::
send ^x8{Enter}c4{Enter}
return

#if GtkApplicationCase()
::\"{A}::
send ^+uc4{Enter}
return

#if OtherCase()
::\"{A}::
send {U+00C4}
return


;; Glyph: 'Å' Descr: LATIN CAPITAL LETTER A WITH RING ABOVE

#if EmacsCase() && EmacsEnabled
::\AA::
send ^x8{Enter}c5{Enter}
return

#if GtkApplicationCase()
::\AA::
send ^+uc5{Enter}
return

#if OtherCase()
::\AA::
send {U+00C5}
return


;; Glyph: 'Æ' Descr: LATIN CAPITAL LETTER AE

#if EmacsCase() && EmacsEnabled
::\AE::
send ^x8{Enter}c6{Enter}
return

#if GtkApplicationCase()
::\AE::
send ^+uc6{Enter}
return

#if OtherCase()
::\AE::
send {U+00C6}
return


;; Glyph: 'Ç' Descr: LATIN CAPITAL LETTER C WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cC::
send ^x8{Enter}c7{Enter}
return

#if GtkApplicationCase()
::\cC::
send ^+uc7{Enter}
return

#if OtherCase()
::\cC::
send {U+00C7}
return


;; Glyph: 'Ç' Descr: LATIN CAPITAL LETTER C WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{C}::
send ^x8{Enter}c7{Enter}
return

#if GtkApplicationCase()
::\c{C}::
send ^+uc7{Enter}
return

#if OtherCase()
::\c{C}::
send {U+00C7}
return


;; Glyph: 'È' Descr: LATIN CAPITAL LETTER E WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``E::
send ^x8{Enter}c8{Enter}
return

#if GtkApplicationCase()
::\``E::
send ^+uc8{Enter}
return

#if OtherCase()
::\``E::
send {U+00C8}
return


;; Glyph: 'È' Descr: LATIN CAPITAL LETTER E WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{E}::
send ^x8{Enter}c8{Enter}
return

#if GtkApplicationCase()
::\``{E}::
send ^+uc8{Enter}
return

#if OtherCase()
::\``{E}::
send {U+00C8}
return


;; Glyph: 'É' Descr: LATIN CAPITAL LETTER E WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'E::
send ^x8{Enter}c9{Enter}
return

#if GtkApplicationCase()
::\'E::
send ^+uc9{Enter}
return

#if OtherCase()
::\'E::
send {U+00C9}
return


;; Glyph: 'É' Descr: LATIN CAPITAL LETTER E WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{E}::
send ^x8{Enter}c9{Enter}
return

#if GtkApplicationCase()
::\'{E}::
send ^+uc9{Enter}
return

#if OtherCase()
::\'{E}::
send {U+00C9}
return


;; Glyph: 'Ê' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^E::
send ^x8{Enter}ca{Enter}
return

#if GtkApplicationCase()
::\^E::
send ^+uca{Enter}
return

#if OtherCase()
::\^E::
send {U+00CA}
return


;; Glyph: 'Ê' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{E}::
send ^x8{Enter}ca{Enter}
return

#if GtkApplicationCase()
::\^{E}::
send ^+uca{Enter}
return

#if OtherCase()
::\^{E}::
send {U+00CA}
return


;; Glyph: 'Ë' Descr: LATIN CAPITAL LETTER E WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"E::
send ^x8{Enter}cb{Enter}
return

#if GtkApplicationCase()
::\"E::
send ^+ucb{Enter}
return

#if OtherCase()
::\"E::
send {U+00CB}
return


;; Glyph: 'Ë' Descr: LATIN CAPITAL LETTER E WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{E}::
send ^x8{Enter}cb{Enter}
return

#if GtkApplicationCase()
::\"{E}::
send ^+ucb{Enter}
return

#if OtherCase()
::\"{E}::
send {U+00CB}
return


;; Glyph: 'Ì' Descr: LATIN CAPITAL LETTER I WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``I::
send ^x8{Enter}cc{Enter}
return

#if GtkApplicationCase()
::\``I::
send ^+ucc{Enter}
return

#if OtherCase()
::\``I::
send {U+00CC}
return


;; Glyph: 'Ì' Descr: LATIN CAPITAL LETTER I WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{I}::
send ^x8{Enter}cc{Enter}
return

#if GtkApplicationCase()
::\``{I}::
send ^+ucc{Enter}
return

#if OtherCase()
::\``{I}::
send {U+00CC}
return


;; Glyph: 'Í' Descr: LATIN CAPITAL LETTER I WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'I::
send ^x8{Enter}cd{Enter}
return

#if GtkApplicationCase()
::\'I::
send ^+ucd{Enter}
return

#if OtherCase()
::\'I::
send {U+00CD}
return


;; Glyph: 'Í' Descr: LATIN CAPITAL LETTER I WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{I}::
send ^x8{Enter}cd{Enter}
return

#if GtkApplicationCase()
::\'{I}::
send ^+ucd{Enter}
return

#if OtherCase()
::\'{I}::
send {U+00CD}
return


;; Glyph: 'Î' Descr: LATIN CAPITAL LETTER I WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^I::
send ^x8{Enter}ce{Enter}
return

#if GtkApplicationCase()
::\^I::
send ^+uce{Enter}
return

#if OtherCase()
::\^I::
send {U+00CE}
return


;; Glyph: 'Î' Descr: LATIN CAPITAL LETTER I WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{I}::
send ^x8{Enter}ce{Enter}
return

#if GtkApplicationCase()
::\^{I}::
send ^+uce{Enter}
return

#if OtherCase()
::\^{I}::
send {U+00CE}
return


;; Glyph: 'Ï' Descr: LATIN CAPITAL LETTER I WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"I::
send ^x8{Enter}cf{Enter}
return

#if GtkApplicationCase()
::\"I::
send ^+ucf{Enter}
return

#if OtherCase()
::\"I::
send {U+00CF}
return


;; Glyph: 'Ï' Descr: LATIN CAPITAL LETTER I WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{I}::
send ^x8{Enter}cf{Enter}
return

#if GtkApplicationCase()
::\"{I}::
send ^+ucf{Enter}
return

#if OtherCase()
::\"{I}::
send {U+00CF}
return


;; Glyph: 'Ð' Descr: LATIN CAPITAL LETTER ETH

#if EmacsCase() && EmacsEnabled
::\DH::
send ^x8{Enter}d0{Enter}
return

#if GtkApplicationCase()
::\DH::
send ^+ud0{Enter}
return

#if OtherCase()
::\DH::
send {U+00D0}
return


;; Glyph: 'Ñ' Descr: LATIN CAPITAL LETTER N WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~N::
send ^x8{Enter}d1{Enter}
return

#if GtkApplicationCase()
::\~N::
send ^+ud1{Enter}
return

#if OtherCase()
::\~N::
send {U+00D1}
return


;; Glyph: 'Ñ' Descr: LATIN CAPITAL LETTER N WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{N}::
send ^x8{Enter}d1{Enter}
return

#if GtkApplicationCase()
::\~{N}::
send ^+ud1{Enter}
return

#if OtherCase()
::\~{N}::
send {U+00D1}
return


;; Glyph: 'Ò' Descr: LATIN CAPITAL LETTER O WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``O::
send ^x8{Enter}d2{Enter}
return

#if GtkApplicationCase()
::\``O::
send ^+ud2{Enter}
return

#if OtherCase()
::\``O::
send {U+00D2}
return


;; Glyph: 'Ò' Descr: LATIN CAPITAL LETTER O WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{O}::
send ^x8{Enter}d2{Enter}
return

#if GtkApplicationCase()
::\``{O}::
send ^+ud2{Enter}
return

#if OtherCase()
::\``{O}::
send {U+00D2}
return


;; Glyph: 'Ó' Descr: LATIN CAPITAL LETTER O WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'O::
send ^x8{Enter}d3{Enter}
return

#if GtkApplicationCase()
::\'O::
send ^+ud3{Enter}
return

#if OtherCase()
::\'O::
send {U+00D3}
return


;; Glyph: 'Ó' Descr: LATIN CAPITAL LETTER O WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{O}::
send ^x8{Enter}d3{Enter}
return

#if GtkApplicationCase()
::\'{O}::
send ^+ud3{Enter}
return

#if OtherCase()
::\'{O}::
send {U+00D3}
return


;; Glyph: 'Ô' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^O::
send ^x8{Enter}d4{Enter}
return

#if GtkApplicationCase()
::\^O::
send ^+ud4{Enter}
return

#if OtherCase()
::\^O::
send {U+00D4}
return


;; Glyph: 'Ô' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{O}::
send ^x8{Enter}d4{Enter}
return

#if GtkApplicationCase()
::\^{O}::
send ^+ud4{Enter}
return

#if OtherCase()
::\^{O}::
send {U+00D4}
return


;; Glyph: 'Õ' Descr: LATIN CAPITAL LETTER O WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~O::
send ^x8{Enter}d5{Enter}
return

#if GtkApplicationCase()
::\~O::
send ^+ud5{Enter}
return

#if OtherCase()
::\~O::
send {U+00D5}
return


;; Glyph: 'Õ' Descr: LATIN CAPITAL LETTER O WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{O}::
send ^x8{Enter}d5{Enter}
return

#if GtkApplicationCase()
::\~{O}::
send ^+ud5{Enter}
return

#if OtherCase()
::\~{O}::
send {U+00D5}
return


;; Glyph: 'Ö' Descr: LATIN CAPITAL LETTER O WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"O::
send ^x8{Enter}d6{Enter}
return

#if GtkApplicationCase()
::\"O::
send ^+ud6{Enter}
return

#if OtherCase()
::\"O::
send {U+00D6}
return


;; Glyph: 'Ö' Descr: LATIN CAPITAL LETTER O WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{O}::
send ^x8{Enter}d6{Enter}
return

#if GtkApplicationCase()
::\"{O}::
send ^+ud6{Enter}
return

#if OtherCase()
::\"{O}::
send {U+00D6}
return


;; Glyph: '×' Descr: MULTIPLICATION SIGN

#if EmacsCase() && EmacsEnabled
::$\times$::
send ^x8{Enter}d7{Enter}
return

#if GtkApplicationCase()
::$\times$::
send ^+ud7{Enter}
return

#if OtherCase()
::$\times$::
send {U+00D7}
return


;; Glyph: '×' Descr: MULTIPLICATION SIGN

#if EmacsCase() && EmacsEnabled
::\multiplication::
send ^x8{Enter}d7{Enter}
return

#if GtkApplicationCase()
::\multiplication::
send ^+ud7{Enter}
return

#if OtherCase()
::\multiplication::
send {U+00D7}
return


;; Glyph: '×' Descr: MULTIPLICATION SIGN

#if EmacsCase() && EmacsEnabled
::\times::
send ^x8{Enter}d7{Enter}
return

#if GtkApplicationCase()
::\times::
send ^+ud7{Enter}
return

#if OtherCase()
::\times::
send {U+00D7}
return


;; Glyph: 'Ø' Descr: LATIN CAPITAL LETTER O WITH STROKE

#if EmacsCase() && EmacsEnabled
::\O::
send ^x8{Enter}d8{Enter}
return

#if GtkApplicationCase()
::\O::
send ^+ud8{Enter}
return

#if OtherCase()
::\O::
send {U+00D8}
return


;; Glyph: 'Ù' Descr: LATIN CAPITAL LETTER U WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``U::
send ^x8{Enter}d9{Enter}
return

#if GtkApplicationCase()
::\``U::
send ^+ud9{Enter}
return

#if OtherCase()
::\``U::
send {U+00D9}
return


;; Glyph: 'Ù' Descr: LATIN CAPITAL LETTER U WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{U}::
send ^x8{Enter}d9{Enter}
return

#if GtkApplicationCase()
::\``{U}::
send ^+ud9{Enter}
return

#if OtherCase()
::\``{U}::
send {U+00D9}
return


;; Glyph: 'Ú' Descr: LATIN CAPITAL LETTER U WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'U::
send ^x8{Enter}da{Enter}
return

#if GtkApplicationCase()
::\'U::
send ^+uda{Enter}
return

#if OtherCase()
::\'U::
send {U+00DA}
return


;; Glyph: 'Ú' Descr: LATIN CAPITAL LETTER U WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{U}::
send ^x8{Enter}da{Enter}
return

#if GtkApplicationCase()
::\'{U}::
send ^+uda{Enter}
return

#if OtherCase()
::\'{U}::
send {U+00DA}
return


;; Glyph: 'Û' Descr: LATIN CAPITAL LETTER U WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^U::
send ^x8{Enter}db{Enter}
return

#if GtkApplicationCase()
::\^U::
send ^+udb{Enter}
return

#if OtherCase()
::\^U::
send {U+00DB}
return


;; Glyph: 'Û' Descr: LATIN CAPITAL LETTER U WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{U}::
send ^x8{Enter}db{Enter}
return

#if GtkApplicationCase()
::\^{U}::
send ^+udb{Enter}
return

#if OtherCase()
::\^{U}::
send {U+00DB}
return


;; Glyph: 'Ü' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"U::
send ^x8{Enter}dc{Enter}
return

#if GtkApplicationCase()
::\"U::
send ^+udc{Enter}
return

#if OtherCase()
::\"U::
send {U+00DC}
return


;; Glyph: 'Ü' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{U}::
send ^x8{Enter}dc{Enter}
return

#if GtkApplicationCase()
::\"{U}::
send ^+udc{Enter}
return

#if OtherCase()
::\"{U}::
send {U+00DC}
return


;; Glyph: 'Ý' Descr: LATIN CAPITAL LETTER Y WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'Y::
send ^x8{Enter}dd{Enter}
return

#if GtkApplicationCase()
::\'Y::
send ^+udd{Enter}
return

#if OtherCase()
::\'Y::
send {U+00DD}
return


;; Glyph: 'Ý' Descr: LATIN CAPITAL LETTER Y WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{Y}::
send ^x8{Enter}dd{Enter}
return

#if GtkApplicationCase()
::\'{Y}::
send ^+udd{Enter}
return

#if OtherCase()
::\'{Y}::
send {U+00DD}
return


;; Glyph: 'Þ' Descr: LATIN CAPITAL LETTER THORN

#if EmacsCase() && EmacsEnabled
::\TH::
send ^x8{Enter}de{Enter}
return

#if GtkApplicationCase()
::\TH::
send ^+ude{Enter}
return

#if OtherCase()
::\TH::
send {U+00DE}
return


;; Glyph: 'ß' Descr: LATIN SMALL LETTER SHARP S

#if EmacsCase() && EmacsEnabled
::\ss::
send ^x8{Enter}df{Enter}
return

#if GtkApplicationCase()
::\ss::
send ^+udf{Enter}
return

#if OtherCase()
::\ss::
send {U+00DF}
return


;; Glyph: 'à' Descr: LATIN SMALL LETTER A WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``a::
send ^x8{Enter}e0{Enter}
return

#if GtkApplicationCase()
::\``a::
send ^+ue0{Enter}
return

#if OtherCase()
::\``a::
send {U+00E0}
return


;; Glyph: 'à' Descr: LATIN SMALL LETTER A WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{a}::
send ^x8{Enter}e0{Enter}
return

#if GtkApplicationCase()
::\``{a}::
send ^+ue0{Enter}
return

#if OtherCase()
::\``{a}::
send {U+00E0}
return


;; Glyph: 'á' Descr: LATIN SMALL LETTER A WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'a::
send ^x8{Enter}e1{Enter}
return

#if GtkApplicationCase()
::\'a::
send ^+ue1{Enter}
return

#if OtherCase()
::\'a::
send {U+00E1}
return


;; Glyph: 'á' Descr: LATIN SMALL LETTER A WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{a}::
send ^x8{Enter}e1{Enter}
return

#if GtkApplicationCase()
::\'{a}::
send ^+ue1{Enter}
return

#if OtherCase()
::\'{a}::
send {U+00E1}
return


;; Glyph: 'â' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^a::
send ^x8{Enter}e2{Enter}
return

#if GtkApplicationCase()
::\^a::
send ^+ue2{Enter}
return

#if OtherCase()
::\^a::
send {U+00E2}
return


;; Glyph: 'â' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{a}::
send ^x8{Enter}e2{Enter}
return

#if GtkApplicationCase()
::\^{a}::
send ^+ue2{Enter}
return

#if OtherCase()
::\^{a}::
send {U+00E2}
return


;; Glyph: 'ã' Descr: LATIN SMALL LETTER A WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~a::
send ^x8{Enter}e3{Enter}
return

#if GtkApplicationCase()
::\~a::
send ^+ue3{Enter}
return

#if OtherCase()
::\~a::
send {U+00E3}
return


;; Glyph: 'ã' Descr: LATIN SMALL LETTER A WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{a}::
send ^x8{Enter}e3{Enter}
return

#if GtkApplicationCase()
::\~{a}::
send ^+ue3{Enter}
return

#if OtherCase()
::\~{a}::
send {U+00E3}
return


;; Glyph: 'ä' Descr: LATIN SMALL LETTER A WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"a::
send ^x8{Enter}e4{Enter}
return

#if GtkApplicationCase()
::\"a::
send ^+ue4{Enter}
return

#if OtherCase()
::\"a::
send {U+00E4}
return


;; Glyph: 'ä' Descr: LATIN SMALL LETTER A WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{a}::
send ^x8{Enter}e4{Enter}
return

#if GtkApplicationCase()
::\"{a}::
send ^+ue4{Enter}
return

#if OtherCase()
::\"{a}::
send {U+00E4}
return


;; Glyph: 'å' Descr: LATIN SMALL LETTER A WITH RING ABOVE

#if EmacsCase() && EmacsEnabled
::\aa::
send ^x8{Enter}e5{Enter}
return

#if GtkApplicationCase()
::\aa::
send ^+ue5{Enter}
return

#if OtherCase()
::\aa::
send {U+00E5}
return


;; Glyph: 'æ' Descr: LATIN SMALL LETTER AE

#if EmacsCase() && EmacsEnabled
::\ae::
send ^x8{Enter}e6{Enter}
return

#if GtkApplicationCase()
::\ae::
send ^+ue6{Enter}
return

#if OtherCase()
::\ae::
send {U+00E6}
return


;; Glyph: 'ç' Descr: LATIN SMALL LETTER C WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cc::
send ^x8{Enter}e7{Enter}
return

#if GtkApplicationCase()
::\cc::
send ^+ue7{Enter}
return

#if OtherCase()
::\cc::
send {U+00E7}
return


;; Glyph: 'ç' Descr: LATIN SMALL LETTER C WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{c}::
send ^x8{Enter}e7{Enter}
return

#if GtkApplicationCase()
::\c{c}::
send ^+ue7{Enter}
return

#if OtherCase()
::\c{c}::
send {U+00E7}
return


;; Glyph: 'è' Descr: LATIN SMALL LETTER E WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``e::
send ^x8{Enter}e8{Enter}
return

#if GtkApplicationCase()
::\``e::
send ^+ue8{Enter}
return

#if OtherCase()
::\``e::
send {U+00E8}
return


;; Glyph: 'è' Descr: LATIN SMALL LETTER E WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{e}::
send ^x8{Enter}e8{Enter}
return

#if GtkApplicationCase()
::\``{e}::
send ^+ue8{Enter}
return

#if OtherCase()
::\``{e}::
send {U+00E8}
return


;; Glyph: 'é' Descr: LATIN SMALL LETTER E WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'e::
send ^x8{Enter}e9{Enter}
return

#if GtkApplicationCase()
::\'e::
send ^+ue9{Enter}
return

#if OtherCase()
::\'e::
send {U+00E9}
return


;; Glyph: 'é' Descr: LATIN SMALL LETTER E WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{e}::
send ^x8{Enter}e9{Enter}
return

#if GtkApplicationCase()
::\'{e}::
send ^+ue9{Enter}
return

#if OtherCase()
::\'{e}::
send {U+00E9}
return


;; Glyph: 'ê' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^e::
send ^x8{Enter}ea{Enter}
return

#if GtkApplicationCase()
::\^e::
send ^+uea{Enter}
return

#if OtherCase()
::\^e::
send {U+00EA}
return


;; Glyph: 'ê' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{e}::
send ^x8{Enter}ea{Enter}
return

#if GtkApplicationCase()
::\^{e}::
send ^+uea{Enter}
return

#if OtherCase()
::\^{e}::
send {U+00EA}
return


;; Glyph: 'ë' Descr: LATIN SMALL LETTER E WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"e::
send ^x8{Enter}eb{Enter}
return

#if GtkApplicationCase()
::\"e::
send ^+ueb{Enter}
return

#if OtherCase()
::\"e::
send {U+00EB}
return


;; Glyph: 'ë' Descr: LATIN SMALL LETTER E WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{e}::
send ^x8{Enter}eb{Enter}
return

#if GtkApplicationCase()
::\"{e}::
send ^+ueb{Enter}
return

#if OtherCase()
::\"{e}::
send {U+00EB}
return


;; Glyph: 'ì' Descr: LATIN SMALL LETTER I WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``i::
send ^x8{Enter}ec{Enter}
return

#if GtkApplicationCase()
::\``i::
send ^+uec{Enter}
return

#if OtherCase()
::\``i::
send {U+00EC}
return


;; Glyph: 'ì' Descr: LATIN SMALL LETTER I WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{i}::
send ^x8{Enter}ec{Enter}
return

#if GtkApplicationCase()
::\``{i}::
send ^+uec{Enter}
return

#if OtherCase()
::\``{i}::
send {U+00EC}
return


;; Glyph: 'í' Descr: LATIN SMALL LETTER I WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'i::
send ^x8{Enter}ed{Enter}
return

#if GtkApplicationCase()
::\'i::
send ^+ued{Enter}
return

#if OtherCase()
::\'i::
send {U+00ED}
return


;; Glyph: 'í' Descr: LATIN SMALL LETTER I WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{i}::
send ^x8{Enter}ed{Enter}
return

#if GtkApplicationCase()
::\'{i}::
send ^+ued{Enter}
return

#if OtherCase()
::\'{i}::
send {U+00ED}
return


;; Glyph: 'î' Descr: LATIN SMALL LETTER I WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^i::
send ^x8{Enter}ee{Enter}
return

#if GtkApplicationCase()
::\^i::
send ^+uee{Enter}
return

#if OtherCase()
::\^i::
send {U+00EE}
return


;; Glyph: 'î' Descr: LATIN SMALL LETTER I WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{i}::
send ^x8{Enter}ee{Enter}
return

#if GtkApplicationCase()
::\^{i}::
send ^+uee{Enter}
return

#if OtherCase()
::\^{i}::
send {U+00EE}
return


;; Glyph: 'ï' Descr: LATIN SMALL LETTER I WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"i::
send ^x8{Enter}ef{Enter}
return

#if GtkApplicationCase()
::\"i::
send ^+uef{Enter}
return

#if OtherCase()
::\"i::
send {U+00EF}
return


;; Glyph: 'ï' Descr: LATIN SMALL LETTER I WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{i}::
send ^x8{Enter}ef{Enter}
return

#if GtkApplicationCase()
::\"{i}::
send ^+uef{Enter}
return

#if OtherCase()
::\"{i}::
send {U+00EF}
return


;; Glyph: 'ð' Descr: LATIN SMALL LETTER ETH

#if EmacsCase() && EmacsEnabled
::\dh::
send ^x8{Enter}f0{Enter}
return

#if GtkApplicationCase()
::\dh::
send ^+uf0{Enter}
return

#if OtherCase()
::\dh::
send {U+00F0}
return


;; Glyph: 'ñ' Descr: LATIN SMALL LETTER N WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~n::
send ^x8{Enter}f1{Enter}
return

#if GtkApplicationCase()
::\~n::
send ^+uf1{Enter}
return

#if OtherCase()
::\~n::
send {U+00F1}
return


;; Glyph: 'ñ' Descr: LATIN SMALL LETTER N WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{n}::
send ^x8{Enter}f1{Enter}
return

#if GtkApplicationCase()
::\~{n}::
send ^+uf1{Enter}
return

#if OtherCase()
::\~{n}::
send {U+00F1}
return


;; Glyph: 'ò' Descr: LATIN SMALL LETTER O WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``o::
send ^x8{Enter}f2{Enter}
return

#if GtkApplicationCase()
::\``o::
send ^+uf2{Enter}
return

#if OtherCase()
::\``o::
send {U+00F2}
return


;; Glyph: 'ò' Descr: LATIN SMALL LETTER O WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{o}::
send ^x8{Enter}f2{Enter}
return

#if GtkApplicationCase()
::\``{o}::
send ^+uf2{Enter}
return

#if OtherCase()
::\``{o}::
send {U+00F2}
return


;; Glyph: 'ó' Descr: LATIN SMALL LETTER O WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'o::
send ^x8{Enter}f3{Enter}
return

#if GtkApplicationCase()
::\'o::
send ^+uf3{Enter}
return

#if OtherCase()
::\'o::
send {U+00F3}
return


;; Glyph: 'ó' Descr: LATIN SMALL LETTER O WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{o}::
send ^x8{Enter}f3{Enter}
return

#if GtkApplicationCase()
::\'{o}::
send ^+uf3{Enter}
return

#if OtherCase()
::\'{o}::
send {U+00F3}
return


;; Glyph: 'ô' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^o::
send ^x8{Enter}f4{Enter}
return

#if GtkApplicationCase()
::\^o::
send ^+uf4{Enter}
return

#if OtherCase()
::\^o::
send {U+00F4}
return


;; Glyph: 'ô' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{o}::
send ^x8{Enter}f4{Enter}
return

#if GtkApplicationCase()
::\^{o}::
send ^+uf4{Enter}
return

#if OtherCase()
::\^{o}::
send {U+00F4}
return


;; Glyph: 'õ' Descr: LATIN SMALL LETTER O WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~o::
send ^x8{Enter}f5{Enter}
return

#if GtkApplicationCase()
::\~o::
send ^+uf5{Enter}
return

#if OtherCase()
::\~o::
send {U+00F5}
return


;; Glyph: 'õ' Descr: LATIN SMALL LETTER O WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{o}::
send ^x8{Enter}f5{Enter}
return

#if GtkApplicationCase()
::\~{o}::
send ^+uf5{Enter}
return

#if OtherCase()
::\~{o}::
send {U+00F5}
return


;; Glyph: 'ö' Descr: LATIN SMALL LETTER O WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"o::
send ^x8{Enter}f6{Enter}
return

#if GtkApplicationCase()
::\"o::
send ^+uf6{Enter}
return

#if OtherCase()
::\"o::
send {U+00F6}
return


;; Glyph: 'ö' Descr: LATIN SMALL LETTER O WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{o}::
send ^x8{Enter}f6{Enter}
return

#if GtkApplicationCase()
::\"{o}::
send ^+uf6{Enter}
return

#if OtherCase()
::\"{o}::
send {U+00F6}
return


;; Glyph: '÷' Descr: DIVISION SIGN

#if EmacsCase() && EmacsEnabled
::$\div$::
send ^x8{Enter}f7{Enter}
return

#if GtkApplicationCase()
::$\div$::
send ^+uf7{Enter}
return

#if OtherCase()
::$\div$::
send {U+00F7}
return


;; Glyph: '÷' Descr: DIVISION SIGN

#if EmacsCase() && EmacsEnabled
::\div::
send ^x8{Enter}f7{Enter}
return

#if GtkApplicationCase()
::\div::
send ^+uf7{Enter}
return

#if OtherCase()
::\div::
send {U+00F7}
return


;; Glyph: '÷' Descr: DIVISION SIGN

#if EmacsCase() && EmacsEnabled
::\division::
send ^x8{Enter}f7{Enter}
return

#if GtkApplicationCase()
::\division::
send ^+uf7{Enter}
return

#if OtherCase()
::\division::
send {U+00F7}
return


;; Glyph: 'ø' Descr: LATIN SMALL LETTER O WITH STROKE

#if EmacsCase() && EmacsEnabled
::\o::
send ^x8{Enter}f8{Enter}
return

#if GtkApplicationCase()
::\o::
send ^+uf8{Enter}
return

#if OtherCase()
::\o::
send {U+00F8}
return


;; Glyph: 'ù' Descr: LATIN SMALL LETTER U WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``u::
send ^x8{Enter}f9{Enter}
return

#if GtkApplicationCase()
::\``u::
send ^+uf9{Enter}
return

#if OtherCase()
::\``u::
send {U+00F9}
return


;; Glyph: 'ù' Descr: LATIN SMALL LETTER U WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{u}::
send ^x8{Enter}f9{Enter}
return

#if GtkApplicationCase()
::\``{u}::
send ^+uf9{Enter}
return

#if OtherCase()
::\``{u}::
send {U+00F9}
return


;; Glyph: 'ú' Descr: LATIN SMALL LETTER U WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'u::
send ^x8{Enter}fa{Enter}
return

#if GtkApplicationCase()
::\'u::
send ^+ufa{Enter}
return

#if OtherCase()
::\'u::
send {U+00FA}
return


;; Glyph: 'ú' Descr: LATIN SMALL LETTER U WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{u}::
send ^x8{Enter}fa{Enter}
return

#if GtkApplicationCase()
::\'{u}::
send ^+ufa{Enter}
return

#if OtherCase()
::\'{u}::
send {U+00FA}
return


;; Glyph: 'û' Descr: LATIN SMALL LETTER U WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^u::
send ^x8{Enter}fb{Enter}
return

#if GtkApplicationCase()
::\^u::
send ^+ufb{Enter}
return

#if OtherCase()
::\^u::
send {U+00FB}
return


;; Glyph: 'û' Descr: LATIN SMALL LETTER U WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{u}::
send ^x8{Enter}fb{Enter}
return

#if GtkApplicationCase()
::\^{u}::
send ^+ufb{Enter}
return

#if OtherCase()
::\^{u}::
send {U+00FB}
return


;; Glyph: 'ü' Descr: LATIN SMALL LETTER U WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"u::
send ^x8{Enter}fc{Enter}
return

#if GtkApplicationCase()
::\"u::
send ^+ufc{Enter}
return

#if OtherCase()
::\"u::
send {U+00FC}
return


;; Glyph: 'ü' Descr: LATIN SMALL LETTER U WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{u}::
send ^x8{Enter}fc{Enter}
return

#if GtkApplicationCase()
::\"{u}::
send ^+ufc{Enter}
return

#if OtherCase()
::\"{u}::
send {U+00FC}
return


;; Glyph: 'ý' Descr: LATIN SMALL LETTER Y WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'y::
send ^x8{Enter}fd{Enter}
return

#if GtkApplicationCase()
::\'y::
send ^+ufd{Enter}
return

#if OtherCase()
::\'y::
send {U+00FD}
return


;; Glyph: 'ý' Descr: LATIN SMALL LETTER Y WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{y}::
send ^x8{Enter}fd{Enter}
return

#if GtkApplicationCase()
::\'{y}::
send ^+ufd{Enter}
return

#if OtherCase()
::\'{y}::
send {U+00FD}
return


;; Glyph: 'þ' Descr: LATIN SMALL LETTER THORN

#if EmacsCase() && EmacsEnabled
::\th::
send ^x8{Enter}fe{Enter}
return

#if GtkApplicationCase()
::\th::
send ^+ufe{Enter}
return

#if OtherCase()
::\th::
send {U+00FE}
return


;; Glyph: 'ÿ' Descr: LATIN SMALL LETTER Y WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"y::
send ^x8{Enter}ff{Enter}
return

#if GtkApplicationCase()
::\"y::
send ^+uff{Enter}
return

#if OtherCase()
::\"y::
send {U+00FF}
return


;; Glyph: 'ÿ' Descr: LATIN SMALL LETTER Y WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{y}::
send ^x8{Enter}ff{Enter}
return

#if GtkApplicationCase()
::\"{y}::
send ^+uff{Enter}
return

#if OtherCase()
::\"{y}::
send {U+00FF}
return


;; Glyph: 'Ā' Descr: LATIN CAPITAL LETTER A WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=A::
send ^x8{Enter}100{Enter}
return

#if GtkApplicationCase()
::\=A::
send ^+u100{Enter}
return

#if OtherCase()
::\=A::
send {U+0100}
return


;; Glyph: 'Ā' Descr: LATIN CAPITAL LETTER A WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={A}::
send ^x8{Enter}100{Enter}
return

#if GtkApplicationCase()
::\={A}::
send ^+u100{Enter}
return

#if OtherCase()
::\={A}::
send {U+0100}
return


;; Glyph: 'ā' Descr: LATIN SMALL LETTER A WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=a::
send ^x8{Enter}101{Enter}
return

#if GtkApplicationCase()
::\=a::
send ^+u101{Enter}
return

#if OtherCase()
::\=a::
send {U+0101}
return


;; Glyph: 'ā' Descr: LATIN SMALL LETTER A WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={a}::
send ^x8{Enter}101{Enter}
return

#if GtkApplicationCase()
::\={a}::
send ^+u101{Enter}
return

#if OtherCase()
::\={a}::
send {U+0101}
return


;; Glyph: 'Ă' Descr: LATIN CAPITAL LETTER A WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uA::
send ^x8{Enter}102{Enter}
return

#if GtkApplicationCase()
::\uA::
send ^+u102{Enter}
return

#if OtherCase()
::\uA::
send {U+0102}
return


;; Glyph: 'Ă' Descr: LATIN CAPITAL LETTER A WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{A}::
send ^x8{Enter}102{Enter}
return

#if GtkApplicationCase()
::\u{A}::
send ^+u102{Enter}
return

#if OtherCase()
::\u{A}::
send {U+0102}
return


;; Glyph: 'ă' Descr: LATIN SMALL LETTER A WITH BREVE

#if EmacsCase() && EmacsEnabled
::\ua::
send ^x8{Enter}103{Enter}
return

#if GtkApplicationCase()
::\ua::
send ^+u103{Enter}
return

#if OtherCase()
::\ua::
send {U+0103}
return


;; Glyph: 'ă' Descr: LATIN SMALL LETTER A WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{a}::
send ^x8{Enter}103{Enter}
return

#if GtkApplicationCase()
::\u{a}::
send ^+u103{Enter}
return

#if OtherCase()
::\u{a}::
send {U+0103}
return


;; Glyph: 'Ą' Descr: LATIN CAPITAL LETTER A WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\kA::
send ^x8{Enter}104{Enter}
return

#if GtkApplicationCase()
::\kA::
send ^+u104{Enter}
return

#if OtherCase()
::\kA::
send {U+0104}
return


;; Glyph: 'Ą' Descr: LATIN CAPITAL LETTER A WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{A}::
send ^x8{Enter}104{Enter}
return

#if GtkApplicationCase()
::\k{A}::
send ^+u104{Enter}
return

#if OtherCase()
::\k{A}::
send {U+0104}
return


;; Glyph: 'ą' Descr: LATIN SMALL LETTER A WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\ka::
send ^x8{Enter}105{Enter}
return

#if GtkApplicationCase()
::\ka::
send ^+u105{Enter}
return

#if OtherCase()
::\ka::
send {U+0105}
return


;; Glyph: 'ą' Descr: LATIN SMALL LETTER A WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{a}::
send ^x8{Enter}105{Enter}
return

#if GtkApplicationCase()
::\k{a}::
send ^+u105{Enter}
return

#if OtherCase()
::\k{a}::
send {U+0105}
return


;; Glyph: 'Ć' Descr: LATIN CAPITAL LETTER C WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'C::
send ^x8{Enter}106{Enter}
return

#if GtkApplicationCase()
::\'C::
send ^+u106{Enter}
return

#if OtherCase()
::\'C::
send {U+0106}
return


;; Glyph: 'Ć' Descr: LATIN CAPITAL LETTER C WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{C}::
send ^x8{Enter}106{Enter}
return

#if GtkApplicationCase()
::\'{C}::
send ^+u106{Enter}
return

#if OtherCase()
::\'{C}::
send {U+0106}
return


;; Glyph: 'ć' Descr: LATIN SMALL LETTER C WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'c::
send ^x8{Enter}107{Enter}
return

#if GtkApplicationCase()
::\'c::
send ^+u107{Enter}
return

#if OtherCase()
::\'c::
send {U+0107}
return


;; Glyph: 'ć' Descr: LATIN SMALL LETTER C WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{c}::
send ^x8{Enter}107{Enter}
return

#if GtkApplicationCase()
::\'{c}::
send ^+u107{Enter}
return

#if OtherCase()
::\'{c}::
send {U+0107}
return


;; Glyph: 'Ĉ' Descr: LATIN CAPITAL LETTER C WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^C::
send ^x8{Enter}108{Enter}
return

#if GtkApplicationCase()
::\^C::
send ^+u108{Enter}
return

#if OtherCase()
::\^C::
send {U+0108}
return


;; Glyph: 'Ĉ' Descr: LATIN CAPITAL LETTER C WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{C}::
send ^x8{Enter}108{Enter}
return

#if GtkApplicationCase()
::\^{C}::
send ^+u108{Enter}
return

#if OtherCase()
::\^{C}::
send {U+0108}
return


;; Glyph: 'ĉ' Descr: LATIN SMALL LETTER C WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^c::
send ^x8{Enter}109{Enter}
return

#if GtkApplicationCase()
::\^c::
send ^+u109{Enter}
return

#if OtherCase()
::\^c::
send {U+0109}
return


;; Glyph: 'ĉ' Descr: LATIN SMALL LETTER C WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{c}::
send ^x8{Enter}109{Enter}
return

#if GtkApplicationCase()
::\^{c}::
send ^+u109{Enter}
return

#if OtherCase()
::\^{c}::
send {U+0109}
return


;; Glyph: 'Ċ' Descr: LATIN CAPITAL LETTER C WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.C::
send ^x8{Enter}10a{Enter}
return

#if GtkApplicationCase()
::\.C::
send ^+u10a{Enter}
return

#if OtherCase()
::\.C::
send {U+010A}
return


;; Glyph: 'Ċ' Descr: LATIN CAPITAL LETTER C WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{C}::
send ^x8{Enter}10a{Enter}
return

#if GtkApplicationCase()
::\.{C}::
send ^+u10a{Enter}
return

#if OtherCase()
::\.{C}::
send {U+010A}
return


;; Glyph: 'ċ' Descr: LATIN SMALL LETTER C WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.c::
send ^x8{Enter}10b{Enter}
return

#if GtkApplicationCase()
::\.c::
send ^+u10b{Enter}
return

#if OtherCase()
::\.c::
send {U+010B}
return


;; Glyph: 'ċ' Descr: LATIN SMALL LETTER C WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{c}::
send ^x8{Enter}10b{Enter}
return

#if GtkApplicationCase()
::\.{c}::
send ^+u10b{Enter}
return

#if OtherCase()
::\.{c}::
send {U+010B}
return


;; Glyph: 'Č' Descr: LATIN CAPITAL LETTER C WITH CARON

#if EmacsCase() && EmacsEnabled
::\vC::
send ^x8{Enter}10c{Enter}
return

#if GtkApplicationCase()
::\vC::
send ^+u10c{Enter}
return

#if OtherCase()
::\vC::
send {U+010C}
return


;; Glyph: 'Č' Descr: LATIN CAPITAL LETTER C WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{C}::
send ^x8{Enter}10c{Enter}
return

#if GtkApplicationCase()
::\v{C}::
send ^+u10c{Enter}
return

#if OtherCase()
::\v{C}::
send {U+010C}
return


;; Glyph: 'č' Descr: LATIN SMALL LETTER C WITH CARON

#if EmacsCase() && EmacsEnabled
::\vc::
send ^x8{Enter}10d{Enter}
return

#if GtkApplicationCase()
::\vc::
send ^+u10d{Enter}
return

#if OtherCase()
::\vc::
send {U+010D}
return


;; Glyph: 'č' Descr: LATIN SMALL LETTER C WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{c}::
send ^x8{Enter}10d{Enter}
return

#if GtkApplicationCase()
::\v{c}::
send ^+u10d{Enter}
return

#if OtherCase()
::\v{c}::
send {U+010D}
return


;; Glyph: 'Ď' Descr: LATIN CAPITAL LETTER D WITH CARON

#if EmacsCase() && EmacsEnabled
::\vD::
send ^x8{Enter}10e{Enter}
return

#if GtkApplicationCase()
::\vD::
send ^+u10e{Enter}
return

#if OtherCase()
::\vD::
send {U+010E}
return


;; Glyph: 'Ď' Descr: LATIN CAPITAL LETTER D WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{D}::
send ^x8{Enter}10e{Enter}
return

#if GtkApplicationCase()
::\v{D}::
send ^+u10e{Enter}
return

#if OtherCase()
::\v{D}::
send {U+010E}
return


;; Glyph: 'ď' Descr: LATIN SMALL LETTER D WITH CARON

#if EmacsCase() && EmacsEnabled
::\vd::
send ^x8{Enter}10f{Enter}
return

#if GtkApplicationCase()
::\vd::
send ^+u10f{Enter}
return

#if OtherCase()
::\vd::
send {U+010F}
return


;; Glyph: 'ď' Descr: LATIN SMALL LETTER D WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{d}::
send ^x8{Enter}10f{Enter}
return

#if GtkApplicationCase()
::\v{d}::
send ^+u10f{Enter}
return

#if OtherCase()
::\v{d}::
send {U+010F}
return


;; Glyph: 'Ē' Descr: LATIN CAPITAL LETTER E WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=E::
send ^x8{Enter}112{Enter}
return

#if GtkApplicationCase()
::\=E::
send ^+u112{Enter}
return

#if OtherCase()
::\=E::
send {U+0112}
return


;; Glyph: 'Ē' Descr: LATIN CAPITAL LETTER E WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={E}::
send ^x8{Enter}112{Enter}
return

#if GtkApplicationCase()
::\={E}::
send ^+u112{Enter}
return

#if OtherCase()
::\={E}::
send {U+0112}
return


;; Glyph: 'ē' Descr: LATIN SMALL LETTER E WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=e::
send ^x8{Enter}113{Enter}
return

#if GtkApplicationCase()
::\=e::
send ^+u113{Enter}
return

#if OtherCase()
::\=e::
send {U+0113}
return


;; Glyph: 'ē' Descr: LATIN SMALL LETTER E WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={e}::
send ^x8{Enter}113{Enter}
return

#if GtkApplicationCase()
::\={e}::
send ^+u113{Enter}
return

#if OtherCase()
::\={e}::
send {U+0113}
return


;; Glyph: 'Ĕ' Descr: LATIN CAPITAL LETTER E WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uE::
send ^x8{Enter}114{Enter}
return

#if GtkApplicationCase()
::\uE::
send ^+u114{Enter}
return

#if OtherCase()
::\uE::
send {U+0114}
return


;; Glyph: 'Ĕ' Descr: LATIN CAPITAL LETTER E WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{E}::
send ^x8{Enter}114{Enter}
return

#if GtkApplicationCase()
::\u{E}::
send ^+u114{Enter}
return

#if OtherCase()
::\u{E}::
send {U+0114}
return


;; Glyph: 'ĕ' Descr: LATIN SMALL LETTER E WITH BREVE

#if EmacsCase() && EmacsEnabled
::\ue::
send ^x8{Enter}115{Enter}
return

#if GtkApplicationCase()
::\ue::
send ^+u115{Enter}
return

#if OtherCase()
::\ue::
send {U+0115}
return


;; Glyph: 'ĕ' Descr: LATIN SMALL LETTER E WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{e}::
send ^x8{Enter}115{Enter}
return

#if GtkApplicationCase()
::\u{e}::
send ^+u115{Enter}
return

#if OtherCase()
::\u{e}::
send {U+0115}
return


;; Glyph: 'Ė' Descr: LATIN CAPITAL LETTER E WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.E::
send ^x8{Enter}116{Enter}
return

#if GtkApplicationCase()
::\.E::
send ^+u116{Enter}
return

#if OtherCase()
::\.E::
send {U+0116}
return


;; Glyph: 'Ė' Descr: LATIN CAPITAL LETTER E WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{E}::
send ^x8{Enter}116{Enter}
return

#if GtkApplicationCase()
::\.{E}::
send ^+u116{Enter}
return

#if OtherCase()
::\.{E}::
send {U+0116}
return


;; Glyph: 'ė' Descr: LATIN SMALL LETTER E WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.e::
send ^x8{Enter}117{Enter}
return

#if GtkApplicationCase()
::\.e::
send ^+u117{Enter}
return

#if OtherCase()
::\.e::
send {U+0117}
return


;; Glyph: 'ė' Descr: LATIN SMALL LETTER E WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{e}::
send ^x8{Enter}117{Enter}
return

#if GtkApplicationCase()
::\.{e}::
send ^+u117{Enter}
return

#if OtherCase()
::\.{e}::
send {U+0117}
return


;; Glyph: 'Ę' Descr: LATIN CAPITAL LETTER E WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\kE::
send ^x8{Enter}118{Enter}
return

#if GtkApplicationCase()
::\kE::
send ^+u118{Enter}
return

#if OtherCase()
::\kE::
send {U+0118}
return


;; Glyph: 'Ę' Descr: LATIN CAPITAL LETTER E WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{E}::
send ^x8{Enter}118{Enter}
return

#if GtkApplicationCase()
::\k{E}::
send ^+u118{Enter}
return

#if OtherCase()
::\k{E}::
send {U+0118}
return


;; Glyph: 'ę' Descr: LATIN SMALL LETTER E WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\ke::
send ^x8{Enter}119{Enter}
return

#if GtkApplicationCase()
::\ke::
send ^+u119{Enter}
return

#if OtherCase()
::\ke::
send {U+0119}
return


;; Glyph: 'ę' Descr: LATIN SMALL LETTER E WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{e}::
send ^x8{Enter}119{Enter}
return

#if GtkApplicationCase()
::\k{e}::
send ^+u119{Enter}
return

#if OtherCase()
::\k{e}::
send {U+0119}
return


;; Glyph: 'Ě' Descr: LATIN CAPITAL LETTER E WITH CARON

#if EmacsCase() && EmacsEnabled
::\vE::
send ^x8{Enter}11a{Enter}
return

#if GtkApplicationCase()
::\vE::
send ^+u11a{Enter}
return

#if OtherCase()
::\vE::
send {U+011A}
return


;; Glyph: 'Ě' Descr: LATIN CAPITAL LETTER E WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{E}::
send ^x8{Enter}11a{Enter}
return

#if GtkApplicationCase()
::\v{E}::
send ^+u11a{Enter}
return

#if OtherCase()
::\v{E}::
send {U+011A}
return


;; Glyph: 'ě' Descr: LATIN SMALL LETTER E WITH CARON

#if EmacsCase() && EmacsEnabled
::\ve::
send ^x8{Enter}11b{Enter}
return

#if GtkApplicationCase()
::\ve::
send ^+u11b{Enter}
return

#if OtherCase()
::\ve::
send {U+011B}
return


;; Glyph: 'ě' Descr: LATIN SMALL LETTER E WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{e}::
send ^x8{Enter}11b{Enter}
return

#if GtkApplicationCase()
::\v{e}::
send ^+u11b{Enter}
return

#if OtherCase()
::\v{e}::
send {U+011B}
return


;; Glyph: 'Ĝ' Descr: LATIN CAPITAL LETTER G WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^G::
send ^x8{Enter}11c{Enter}
return

#if GtkApplicationCase()
::\^G::
send ^+u11c{Enter}
return

#if OtherCase()
::\^G::
send {U+011C}
return


;; Glyph: 'Ĝ' Descr: LATIN CAPITAL LETTER G WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{G}::
send ^x8{Enter}11c{Enter}
return

#if GtkApplicationCase()
::\^{G}::
send ^+u11c{Enter}
return

#if OtherCase()
::\^{G}::
send {U+011C}
return


;; Glyph: 'ĝ' Descr: LATIN SMALL LETTER G WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^g::
send ^x8{Enter}11d{Enter}
return

#if GtkApplicationCase()
::\^g::
send ^+u11d{Enter}
return

#if OtherCase()
::\^g::
send {U+011D}
return


;; Glyph: 'ĝ' Descr: LATIN SMALL LETTER G WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{g}::
send ^x8{Enter}11d{Enter}
return

#if GtkApplicationCase()
::\^{g}::
send ^+u11d{Enter}
return

#if OtherCase()
::\^{g}::
send {U+011D}
return


;; Glyph: 'Ğ' Descr: LATIN CAPITAL LETTER G WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uG::
send ^x8{Enter}11e{Enter}
return

#if GtkApplicationCase()
::\uG::
send ^+u11e{Enter}
return

#if OtherCase()
::\uG::
send {U+011E}
return


;; Glyph: 'Ğ' Descr: LATIN CAPITAL LETTER G WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{G}::
send ^x8{Enter}11e{Enter}
return

#if GtkApplicationCase()
::\u{G}::
send ^+u11e{Enter}
return

#if OtherCase()
::\u{G}::
send {U+011E}
return


;; Glyph: 'ğ' Descr: LATIN SMALL LETTER G WITH BREVE

#if EmacsCase() && EmacsEnabled
::\ug::
send ^x8{Enter}11f{Enter}
return

#if GtkApplicationCase()
::\ug::
send ^+u11f{Enter}
return

#if OtherCase()
::\ug::
send {U+011F}
return


;; Glyph: 'ğ' Descr: LATIN SMALL LETTER G WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{g}::
send ^x8{Enter}11f{Enter}
return

#if GtkApplicationCase()
::\u{g}::
send ^+u11f{Enter}
return

#if OtherCase()
::\u{g}::
send {U+011F}
return


;; Glyph: 'Ġ' Descr: LATIN CAPITAL LETTER G WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.G::
send ^x8{Enter}120{Enter}
return

#if GtkApplicationCase()
::\.G::
send ^+u120{Enter}
return

#if OtherCase()
::\.G::
send {U+0120}
return


;; Glyph: 'Ġ' Descr: LATIN CAPITAL LETTER G WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{G}::
send ^x8{Enter}120{Enter}
return

#if GtkApplicationCase()
::\.{G}::
send ^+u120{Enter}
return

#if OtherCase()
::\.{G}::
send {U+0120}
return


;; Glyph: 'ġ' Descr: LATIN SMALL LETTER G WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.g::
send ^x8{Enter}121{Enter}
return

#if GtkApplicationCase()
::\.g::
send ^+u121{Enter}
return

#if OtherCase()
::\.g::
send {U+0121}
return


;; Glyph: 'ġ' Descr: LATIN SMALL LETTER G WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{g}::
send ^x8{Enter}121{Enter}
return

#if GtkApplicationCase()
::\.{g}::
send ^+u121{Enter}
return

#if OtherCase()
::\.{g}::
send {U+0121}
return


;; Glyph: 'Ģ' Descr: LATIN CAPITAL LETTER G WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cG::
send ^x8{Enter}122{Enter}
return

#if GtkApplicationCase()
::\cG::
send ^+u122{Enter}
return

#if OtherCase()
::\cG::
send {U+0122}
return


;; Glyph: 'Ģ' Descr: LATIN CAPITAL LETTER G WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{G}::
send ^x8{Enter}122{Enter}
return

#if GtkApplicationCase()
::\c{G}::
send ^+u122{Enter}
return

#if OtherCase()
::\c{G}::
send {U+0122}
return


;; Glyph: 'ģ' Descr: LATIN SMALL LETTER G WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cg::
send ^x8{Enter}123{Enter}
return

#if GtkApplicationCase()
::\cg::
send ^+u123{Enter}
return

#if OtherCase()
::\cg::
send {U+0123}
return


;; Glyph: 'ģ' Descr: LATIN SMALL LETTER G WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{g}::
send ^x8{Enter}123{Enter}
return

#if GtkApplicationCase()
::\c{g}::
send ^+u123{Enter}
return

#if OtherCase()
::\c{g}::
send {U+0123}
return


;; Glyph: 'Ĥ' Descr: LATIN CAPITAL LETTER H WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^H::
send ^x8{Enter}124{Enter}
return

#if GtkApplicationCase()
::\^H::
send ^+u124{Enter}
return

#if OtherCase()
::\^H::
send {U+0124}
return


;; Glyph: 'Ĥ' Descr: LATIN CAPITAL LETTER H WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{H}::
send ^x8{Enter}124{Enter}
return

#if GtkApplicationCase()
::\^{H}::
send ^+u124{Enter}
return

#if OtherCase()
::\^{H}::
send {U+0124}
return


;; Glyph: 'ĥ' Descr: LATIN SMALL LETTER H WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^h::
send ^x8{Enter}125{Enter}
return

#if GtkApplicationCase()
::\^h::
send ^+u125{Enter}
return

#if OtherCase()
::\^h::
send {U+0125}
return


;; Glyph: 'ĥ' Descr: LATIN SMALL LETTER H WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{h}::
send ^x8{Enter}125{Enter}
return

#if GtkApplicationCase()
::\^{h}::
send ^+u125{Enter}
return

#if OtherCase()
::\^{h}::
send {U+0125}
return


;; Glyph: 'Ĩ' Descr: LATIN CAPITAL LETTER I WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~I::
send ^x8{Enter}128{Enter}
return

#if GtkApplicationCase()
::\~I::
send ^+u128{Enter}
return

#if OtherCase()
::\~I::
send {U+0128}
return


;; Glyph: 'Ĩ' Descr: LATIN CAPITAL LETTER I WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{I}::
send ^x8{Enter}128{Enter}
return

#if GtkApplicationCase()
::\~{I}::
send ^+u128{Enter}
return

#if OtherCase()
::\~{I}::
send {U+0128}
return


;; Glyph: 'ĩ' Descr: LATIN SMALL LETTER I WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~i::
send ^x8{Enter}129{Enter}
return

#if GtkApplicationCase()
::\~i::
send ^+u129{Enter}
return

#if OtherCase()
::\~i::
send {U+0129}
return


;; Glyph: 'ĩ' Descr: LATIN SMALL LETTER I WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{\i}::
send ^x8{Enter}129{Enter}
return

#if GtkApplicationCase()
::\~{\i}::
send ^+u129{Enter}
return

#if OtherCase()
::\~{\i}::
send {U+0129}
return


;; Glyph: 'ĩ' Descr: LATIN SMALL LETTER I WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{i}::
send ^x8{Enter}129{Enter}
return

#if GtkApplicationCase()
::\~{i}::
send ^+u129{Enter}
return

#if OtherCase()
::\~{i}::
send {U+0129}
return


;; Glyph: 'Ī' Descr: LATIN CAPITAL LETTER I WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=I::
send ^x8{Enter}12a{Enter}
return

#if GtkApplicationCase()
::\=I::
send ^+u12a{Enter}
return

#if OtherCase()
::\=I::
send {U+012A}
return


;; Glyph: 'Ī' Descr: LATIN CAPITAL LETTER I WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={I}::
send ^x8{Enter}12a{Enter}
return

#if GtkApplicationCase()
::\={I}::
send ^+u12a{Enter}
return

#if OtherCase()
::\={I}::
send {U+012A}
return


;; Glyph: 'ī' Descr: LATIN SMALL LETTER I WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=i::
send ^x8{Enter}12b{Enter}
return

#if GtkApplicationCase()
::\=i::
send ^+u12b{Enter}
return

#if OtherCase()
::\=i::
send {U+012B}
return


;; Glyph: 'ī' Descr: LATIN SMALL LETTER I WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={\i}::
send ^x8{Enter}12b{Enter}
return

#if GtkApplicationCase()
::\={\i}::
send ^+u12b{Enter}
return

#if OtherCase()
::\={\i}::
send {U+012B}
return


;; Glyph: 'ī' Descr: LATIN SMALL LETTER I WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={i}::
send ^x8{Enter}12b{Enter}
return

#if GtkApplicationCase()
::\={i}::
send ^+u12b{Enter}
return

#if OtherCase()
::\={i}::
send {U+012B}
return


;; Glyph: 'Ĭ' Descr: LATIN CAPITAL LETTER I WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uI::
send ^x8{Enter}12c{Enter}
return

#if GtkApplicationCase()
::\uI::
send ^+u12c{Enter}
return

#if OtherCase()
::\uI::
send {U+012C}
return


;; Glyph: 'Ĭ' Descr: LATIN CAPITAL LETTER I WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{I}::
send ^x8{Enter}12c{Enter}
return

#if GtkApplicationCase()
::\u{I}::
send ^+u12c{Enter}
return

#if OtherCase()
::\u{I}::
send {U+012C}
return


;; Glyph: 'ĭ' Descr: LATIN SMALL LETTER I WITH BREVE

#if EmacsCase() && EmacsEnabled
::\ui::
send ^x8{Enter}12d{Enter}
return

#if GtkApplicationCase()
::\ui::
send ^+u12d{Enter}
return

#if OtherCase()
::\ui::
send {U+012D}
return


;; Glyph: 'ĭ' Descr: LATIN SMALL LETTER I WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{\i}::
send ^x8{Enter}12d{Enter}
return

#if GtkApplicationCase()
::\u{\i}::
send ^+u12d{Enter}
return

#if OtherCase()
::\u{\i}::
send {U+012D}
return


;; Glyph: 'ĭ' Descr: LATIN SMALL LETTER I WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{i}::
send ^x8{Enter}12d{Enter}
return

#if GtkApplicationCase()
::\u{i}::
send ^+u12d{Enter}
return

#if OtherCase()
::\u{i}::
send {U+012D}
return


;; Glyph: 'Į' Descr: LATIN CAPITAL LETTER I WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\kI::
send ^x8{Enter}12e{Enter}
return

#if GtkApplicationCase()
::\kI::
send ^+u12e{Enter}
return

#if OtherCase()
::\kI::
send {U+012E}
return


;; Glyph: 'Į' Descr: LATIN CAPITAL LETTER I WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{I}::
send ^x8{Enter}12e{Enter}
return

#if GtkApplicationCase()
::\k{I}::
send ^+u12e{Enter}
return

#if OtherCase()
::\k{I}::
send {U+012E}
return


;; Glyph: 'į' Descr: LATIN SMALL LETTER I WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\ki::
send ^x8{Enter}12f{Enter}
return

#if GtkApplicationCase()
::\ki::
send ^+u12f{Enter}
return

#if OtherCase()
::\ki::
send {U+012F}
return


;; Glyph: 'į' Descr: LATIN SMALL LETTER I WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{i}::
send ^x8{Enter}12f{Enter}
return

#if GtkApplicationCase()
::\k{i}::
send ^+u12f{Enter}
return

#if OtherCase()
::\k{i}::
send {U+012F}
return


;; Glyph: 'İ' Descr: LATIN CAPITAL LETTER I WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.I::
send ^x8{Enter}130{Enter}
return

#if GtkApplicationCase()
::\.I::
send ^+u130{Enter}
return

#if OtherCase()
::\.I::
send {U+0130}
return


;; Glyph: 'İ' Descr: LATIN CAPITAL LETTER I WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{I}::
send ^x8{Enter}130{Enter}
return

#if GtkApplicationCase()
::\.{I}::
send ^+u130{Enter}
return

#if OtherCase()
::\.{I}::
send {U+0130}
return


;; Glyph: 'ı' Descr: LATIN SMALL LETTER DOTLESS I

#if EmacsCase() && EmacsEnabled
::\i::
send ^x8{Enter}131{Enter}
return

#if GtkApplicationCase()
::\i::
send ^+u131{Enter}
return

#if OtherCase()
::\i::
send {U+0131}
return


;; Glyph: 'ı' Descr: LATIN SMALL LETTER DOTLESS I

#if EmacsCase() && EmacsEnabled
::\imath::
send ^x8{Enter}131{Enter}
return

#if GtkApplicationCase()
::\imath::
send ^+u131{Enter}
return

#if OtherCase()
::\imath::
send {U+0131}
return


;; Glyph: 'Ĵ' Descr: LATIN CAPITAL LETTER J WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^J::
send ^x8{Enter}134{Enter}
return

#if GtkApplicationCase()
::\^J::
send ^+u134{Enter}
return

#if OtherCase()
::\^J::
send {U+0134}
return


;; Glyph: 'Ĵ' Descr: LATIN CAPITAL LETTER J WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{J}::
send ^x8{Enter}134{Enter}
return

#if GtkApplicationCase()
::\^{J}::
send ^+u134{Enter}
return

#if OtherCase()
::\^{J}::
send {U+0134}
return


;; Glyph: 'ĵ' Descr: LATIN SMALL LETTER J WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^j::
send ^x8{Enter}135{Enter}
return

#if GtkApplicationCase()
::\^j::
send ^+u135{Enter}
return

#if OtherCase()
::\^j::
send {U+0135}
return


;; Glyph: 'ĵ' Descr: LATIN SMALL LETTER J WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{\j}::
send ^x8{Enter}135{Enter}
return

#if GtkApplicationCase()
::\^{\j}::
send ^+u135{Enter}
return

#if OtherCase()
::\^{\j}::
send {U+0135}
return


;; Glyph: 'ĵ' Descr: LATIN SMALL LETTER J WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{j}::
send ^x8{Enter}135{Enter}
return

#if GtkApplicationCase()
::\^{j}::
send ^+u135{Enter}
return

#if OtherCase()
::\^{j}::
send {U+0135}
return


;; Glyph: 'Ķ' Descr: LATIN CAPITAL LETTER K WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cK::
send ^x8{Enter}136{Enter}
return

#if GtkApplicationCase()
::\cK::
send ^+u136{Enter}
return

#if OtherCase()
::\cK::
send {U+0136}
return


;; Glyph: 'Ķ' Descr: LATIN CAPITAL LETTER K WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{K}::
send ^x8{Enter}136{Enter}
return

#if GtkApplicationCase()
::\c{K}::
send ^+u136{Enter}
return

#if OtherCase()
::\c{K}::
send {U+0136}
return


;; Glyph: 'ķ' Descr: LATIN SMALL LETTER K WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\ck::
send ^x8{Enter}137{Enter}
return

#if GtkApplicationCase()
::\ck::
send ^+u137{Enter}
return

#if OtherCase()
::\ck::
send {U+0137}
return


;; Glyph: 'ķ' Descr: LATIN SMALL LETTER K WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{k}::
send ^x8{Enter}137{Enter}
return

#if GtkApplicationCase()
::\c{k}::
send ^+u137{Enter}
return

#if OtherCase()
::\c{k}::
send {U+0137}
return


;; Glyph: 'Ĺ' Descr: LATIN CAPITAL LETTER L WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'L::
send ^x8{Enter}139{Enter}
return

#if GtkApplicationCase()
::\'L::
send ^+u139{Enter}
return

#if OtherCase()
::\'L::
send {U+0139}
return


;; Glyph: 'Ĺ' Descr: LATIN CAPITAL LETTER L WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{L}::
send ^x8{Enter}139{Enter}
return

#if GtkApplicationCase()
::\'{L}::
send ^+u139{Enter}
return

#if OtherCase()
::\'{L}::
send {U+0139}
return


;; Glyph: 'ĺ' Descr: LATIN SMALL LETTER L WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'l::
send ^x8{Enter}13a{Enter}
return

#if GtkApplicationCase()
::\'l::
send ^+u13a{Enter}
return

#if OtherCase()
::\'l::
send {U+013A}
return


;; Glyph: 'ĺ' Descr: LATIN SMALL LETTER L WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{l}::
send ^x8{Enter}13a{Enter}
return

#if GtkApplicationCase()
::\'{l}::
send ^+u13a{Enter}
return

#if OtherCase()
::\'{l}::
send {U+013A}
return


;; Glyph: 'Ļ' Descr: LATIN CAPITAL LETTER L WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cL::
send ^x8{Enter}13b{Enter}
return

#if GtkApplicationCase()
::\cL::
send ^+u13b{Enter}
return

#if OtherCase()
::\cL::
send {U+013B}
return


;; Glyph: 'Ļ' Descr: LATIN CAPITAL LETTER L WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{L}::
send ^x8{Enter}13b{Enter}
return

#if GtkApplicationCase()
::\c{L}::
send ^+u13b{Enter}
return

#if OtherCase()
::\c{L}::
send {U+013B}
return


;; Glyph: 'ļ' Descr: LATIN SMALL LETTER L WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cl::
send ^x8{Enter}13c{Enter}
return

#if GtkApplicationCase()
::\cl::
send ^+u13c{Enter}
return

#if OtherCase()
::\cl::
send {U+013C}
return


;; Glyph: 'ļ' Descr: LATIN SMALL LETTER L WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{l}::
send ^x8{Enter}13c{Enter}
return

#if GtkApplicationCase()
::\c{l}::
send ^+u13c{Enter}
return

#if OtherCase()
::\c{l}::
send {U+013C}
return


;; Glyph: 'Ľ' Descr: LATIN CAPITAL LETTER L WITH CARON

#if EmacsCase() && EmacsEnabled
::\vL::
send ^x8{Enter}13d{Enter}
return

#if GtkApplicationCase()
::\vL::
send ^+u13d{Enter}
return

#if OtherCase()
::\vL::
send {U+013D}
return


;; Glyph: 'Ľ' Descr: LATIN CAPITAL LETTER L WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{L}::
send ^x8{Enter}13d{Enter}
return

#if GtkApplicationCase()
::\v{L}::
send ^+u13d{Enter}
return

#if OtherCase()
::\v{L}::
send {U+013D}
return


;; Glyph: 'ľ' Descr: LATIN SMALL LETTER L WITH CARON

#if EmacsCase() && EmacsEnabled
::\vl::
send ^x8{Enter}13e{Enter}
return

#if GtkApplicationCase()
::\vl::
send ^+u13e{Enter}
return

#if OtherCase()
::\vl::
send {U+013E}
return


;; Glyph: 'ľ' Descr: LATIN SMALL LETTER L WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{l}::
send ^x8{Enter}13e{Enter}
return

#if GtkApplicationCase()
::\v{l}::
send ^+u13e{Enter}
return

#if OtherCase()
::\v{l}::
send {U+013E}
return


;; Glyph: 'Ł' Descr: LATIN CAPITAL LETTER L WITH STROKE

#if EmacsCase() && EmacsEnabled
::\L::
send ^x8{Enter}141{Enter}
return

#if GtkApplicationCase()
::\L::
send ^+u141{Enter}
return

#if OtherCase()
::\L::
send {U+0141}
return


;; Glyph: 'ł' Descr: LATIN SMALL LETTER L WITH STROKE

#if EmacsCase() && EmacsEnabled
::\l::
send ^x8{Enter}142{Enter}
return

#if GtkApplicationCase()
::\l::
send ^+u142{Enter}
return

#if OtherCase()
::\l::
send {U+0142}
return


;; Glyph: 'Ń' Descr: LATIN CAPITAL LETTER N WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'N::
send ^x8{Enter}143{Enter}
return

#if GtkApplicationCase()
::\'N::
send ^+u143{Enter}
return

#if OtherCase()
::\'N::
send {U+0143}
return


;; Glyph: 'Ń' Descr: LATIN CAPITAL LETTER N WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{N}::
send ^x8{Enter}143{Enter}
return

#if GtkApplicationCase()
::\'{N}::
send ^+u143{Enter}
return

#if OtherCase()
::\'{N}::
send {U+0143}
return


;; Glyph: 'ń' Descr: LATIN SMALL LETTER N WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'n::
send ^x8{Enter}144{Enter}
return

#if GtkApplicationCase()
::\'n::
send ^+u144{Enter}
return

#if OtherCase()
::\'n::
send {U+0144}
return


;; Glyph: 'ń' Descr: LATIN SMALL LETTER N WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{n}::
send ^x8{Enter}144{Enter}
return

#if GtkApplicationCase()
::\'{n}::
send ^+u144{Enter}
return

#if OtherCase()
::\'{n}::
send {U+0144}
return


;; Glyph: 'Ņ' Descr: LATIN CAPITAL LETTER N WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cN::
send ^x8{Enter}145{Enter}
return

#if GtkApplicationCase()
::\cN::
send ^+u145{Enter}
return

#if OtherCase()
::\cN::
send {U+0145}
return


;; Glyph: 'Ņ' Descr: LATIN CAPITAL LETTER N WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{N}::
send ^x8{Enter}145{Enter}
return

#if GtkApplicationCase()
::\c{N}::
send ^+u145{Enter}
return

#if OtherCase()
::\c{N}::
send {U+0145}
return


;; Glyph: 'ņ' Descr: LATIN SMALL LETTER N WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cn::
send ^x8{Enter}146{Enter}
return

#if GtkApplicationCase()
::\cn::
send ^+u146{Enter}
return

#if OtherCase()
::\cn::
send {U+0146}
return


;; Glyph: 'ņ' Descr: LATIN SMALL LETTER N WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{n}::
send ^x8{Enter}146{Enter}
return

#if GtkApplicationCase()
::\c{n}::
send ^+u146{Enter}
return

#if OtherCase()
::\c{n}::
send {U+0146}
return


;; Glyph: 'Ň' Descr: LATIN CAPITAL LETTER N WITH CARON

#if EmacsCase() && EmacsEnabled
::\vN::
send ^x8{Enter}147{Enter}
return

#if GtkApplicationCase()
::\vN::
send ^+u147{Enter}
return

#if OtherCase()
::\vN::
send {U+0147}
return


;; Glyph: 'Ň' Descr: LATIN CAPITAL LETTER N WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{N}::
send ^x8{Enter}147{Enter}
return

#if GtkApplicationCase()
::\v{N}::
send ^+u147{Enter}
return

#if OtherCase()
::\v{N}::
send {U+0147}
return


;; Glyph: 'ň' Descr: LATIN SMALL LETTER N WITH CARON

#if EmacsCase() && EmacsEnabled
::\vn::
send ^x8{Enter}148{Enter}
return

#if GtkApplicationCase()
::\vn::
send ^+u148{Enter}
return

#if OtherCase()
::\vn::
send {U+0148}
return


;; Glyph: 'ň' Descr: LATIN SMALL LETTER N WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{n}::
send ^x8{Enter}148{Enter}
return

#if GtkApplicationCase()
::\v{n}::
send ^+u148{Enter}
return

#if OtherCase()
::\v{n}::
send {U+0148}
return


;; Glyph: 'Ō' Descr: LATIN CAPITAL LETTER O WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=O::
send ^x8{Enter}14c{Enter}
return

#if GtkApplicationCase()
::\=O::
send ^+u14c{Enter}
return

#if OtherCase()
::\=O::
send {U+014C}
return


;; Glyph: 'Ō' Descr: LATIN CAPITAL LETTER O WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={O}::
send ^x8{Enter}14c{Enter}
return

#if GtkApplicationCase()
::\={O}::
send ^+u14c{Enter}
return

#if OtherCase()
::\={O}::
send {U+014C}
return


;; Glyph: 'ō' Descr: LATIN SMALL LETTER O WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=o::
send ^x8{Enter}14d{Enter}
return

#if GtkApplicationCase()
::\=o::
send ^+u14d{Enter}
return

#if OtherCase()
::\=o::
send {U+014D}
return


;; Glyph: 'ō' Descr: LATIN SMALL LETTER O WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={o}::
send ^x8{Enter}14d{Enter}
return

#if GtkApplicationCase()
::\={o}::
send ^+u14d{Enter}
return

#if OtherCase()
::\={o}::
send {U+014D}
return


;; Glyph: 'Ŏ' Descr: LATIN CAPITAL LETTER O WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uO::
send ^x8{Enter}14e{Enter}
return

#if GtkApplicationCase()
::\uO::
send ^+u14e{Enter}
return

#if OtherCase()
::\uO::
send {U+014E}
return


;; Glyph: 'Ŏ' Descr: LATIN CAPITAL LETTER O WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{O}::
send ^x8{Enter}14e{Enter}
return

#if GtkApplicationCase()
::\u{O}::
send ^+u14e{Enter}
return

#if OtherCase()
::\u{O}::
send {U+014E}
return


;; Glyph: 'ŏ' Descr: LATIN SMALL LETTER O WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uo::
send ^x8{Enter}14f{Enter}
return

#if GtkApplicationCase()
::\uo::
send ^+u14f{Enter}
return

#if OtherCase()
::\uo::
send {U+014F}
return


;; Glyph: 'ŏ' Descr: LATIN SMALL LETTER O WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{o}::
send ^x8{Enter}14f{Enter}
return

#if GtkApplicationCase()
::\u{o}::
send ^+u14f{Enter}
return

#if OtherCase()
::\u{o}::
send {U+014F}
return


;; Glyph: 'Ő' Descr: LATIN CAPITAL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\HO::
send ^x8{Enter}150{Enter}
return

#if GtkApplicationCase()
::\HO::
send ^+u150{Enter}
return

#if OtherCase()
::\HO::
send {U+0150}
return


;; Glyph: 'Ő' Descr: LATIN CAPITAL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\H{O}::
send ^x8{Enter}150{Enter}
return

#if GtkApplicationCase()
::\H{O}::
send ^+u150{Enter}
return

#if OtherCase()
::\H{O}::
send {U+0150}
return


;; Glyph: 'ő' Descr: LATIN SMALL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\Ho::
send ^x8{Enter}151{Enter}
return

#if GtkApplicationCase()
::\Ho::
send ^+u151{Enter}
return

#if OtherCase()
::\Ho::
send {U+0151}
return


;; Glyph: 'ő' Descr: LATIN SMALL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\H{o}::
send ^x8{Enter}151{Enter}
return

#if GtkApplicationCase()
::\H{o}::
send ^+u151{Enter}
return

#if OtherCase()
::\H{o}::
send {U+0151}
return


;; Glyph: 'ő' Descr: LATIN SMALL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\Uo::
send ^x8{Enter}151{Enter}
return

#if GtkApplicationCase()
::\Uo::
send ^+u151{Enter}
return

#if OtherCase()
::\Uo::
send {U+0151}
return


;; Glyph: 'ő' Descr: LATIN SMALL LETTER O WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\U{o}::
send ^x8{Enter}151{Enter}
return

#if GtkApplicationCase()
::\U{o}::
send ^+u151{Enter}
return

#if OtherCase()
::\U{o}::
send {U+0151}
return


;; Glyph: 'Œ' Descr: LATIN CAPITAL LIGATURE OE

#if EmacsCase() && EmacsEnabled
::\OE::
send ^x8{Enter}152{Enter}
return

#if GtkApplicationCase()
::\OE::
send ^+u152{Enter}
return

#if OtherCase()
::\OE::
send {U+0152}
return


;; Glyph: 'œ' Descr: LATIN SMALL LIGATURE OE

#if EmacsCase() && EmacsEnabled
::\oe::
send ^x8{Enter}153{Enter}
return

#if GtkApplicationCase()
::\oe::
send ^+u153{Enter}
return

#if OtherCase()
::\oe::
send {U+0153}
return


;; Glyph: 'Ŕ' Descr: LATIN CAPITAL LETTER R WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'R::
send ^x8{Enter}154{Enter}
return

#if GtkApplicationCase()
::\'R::
send ^+u154{Enter}
return

#if OtherCase()
::\'R::
send {U+0154}
return


;; Glyph: 'Ŕ' Descr: LATIN CAPITAL LETTER R WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{R}::
send ^x8{Enter}154{Enter}
return

#if GtkApplicationCase()
::\'{R}::
send ^+u154{Enter}
return

#if OtherCase()
::\'{R}::
send {U+0154}
return


;; Glyph: 'ŕ' Descr: LATIN SMALL LETTER R WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'r::
send ^x8{Enter}155{Enter}
return

#if GtkApplicationCase()
::\'r::
send ^+u155{Enter}
return

#if OtherCase()
::\'r::
send {U+0155}
return


;; Glyph: 'ŕ' Descr: LATIN SMALL LETTER R WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{r}::
send ^x8{Enter}155{Enter}
return

#if GtkApplicationCase()
::\'{r}::
send ^+u155{Enter}
return

#if OtherCase()
::\'{r}::
send {U+0155}
return


;; Glyph: 'Ŗ' Descr: LATIN CAPITAL LETTER R WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cR::
send ^x8{Enter}156{Enter}
return

#if GtkApplicationCase()
::\cR::
send ^+u156{Enter}
return

#if OtherCase()
::\cR::
send {U+0156}
return


;; Glyph: 'Ŗ' Descr: LATIN CAPITAL LETTER R WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{R}::
send ^x8{Enter}156{Enter}
return

#if GtkApplicationCase()
::\c{R}::
send ^+u156{Enter}
return

#if OtherCase()
::\c{R}::
send {U+0156}
return


;; Glyph: 'ŗ' Descr: LATIN SMALL LETTER R WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cr::
send ^x8{Enter}157{Enter}
return

#if GtkApplicationCase()
::\cr::
send ^+u157{Enter}
return

#if OtherCase()
::\cr::
send {U+0157}
return


;; Glyph: 'ŗ' Descr: LATIN SMALL LETTER R WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{r}::
send ^x8{Enter}157{Enter}
return

#if GtkApplicationCase()
::\c{r}::
send ^+u157{Enter}
return

#if OtherCase()
::\c{r}::
send {U+0157}
return


;; Glyph: 'Ř' Descr: LATIN CAPITAL LETTER R WITH CARON

#if EmacsCase() && EmacsEnabled
::\vR::
send ^x8{Enter}158{Enter}
return

#if GtkApplicationCase()
::\vR::
send ^+u158{Enter}
return

#if OtherCase()
::\vR::
send {U+0158}
return


;; Glyph: 'Ř' Descr: LATIN CAPITAL LETTER R WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{R}::
send ^x8{Enter}158{Enter}
return

#if GtkApplicationCase()
::\v{R}::
send ^+u158{Enter}
return

#if OtherCase()
::\v{R}::
send {U+0158}
return


;; Glyph: 'ř' Descr: LATIN SMALL LETTER R WITH CARON

#if EmacsCase() && EmacsEnabled
::\vr::
send ^x8{Enter}159{Enter}
return

#if GtkApplicationCase()
::\vr::
send ^+u159{Enter}
return

#if OtherCase()
::\vr::
send {U+0159}
return


;; Glyph: 'ř' Descr: LATIN SMALL LETTER R WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{r}::
send ^x8{Enter}159{Enter}
return

#if GtkApplicationCase()
::\v{r}::
send ^+u159{Enter}
return

#if OtherCase()
::\v{r}::
send {U+0159}
return


;; Glyph: 'Ś' Descr: LATIN CAPITAL LETTER S WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'S::
send ^x8{Enter}15a{Enter}
return

#if GtkApplicationCase()
::\'S::
send ^+u15a{Enter}
return

#if OtherCase()
::\'S::
send {U+015A}
return


;; Glyph: 'Ś' Descr: LATIN CAPITAL LETTER S WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{S}::
send ^x8{Enter}15a{Enter}
return

#if GtkApplicationCase()
::\'{S}::
send ^+u15a{Enter}
return

#if OtherCase()
::\'{S}::
send {U+015A}
return


;; Glyph: 'ś' Descr: LATIN SMALL LETTER S WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'s::
send ^x8{Enter}15b{Enter}
return

#if GtkApplicationCase()
::\'s::
send ^+u15b{Enter}
return

#if OtherCase()
::\'s::
send {U+015B}
return


;; Glyph: 'ś' Descr: LATIN SMALL LETTER S WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{s}::
send ^x8{Enter}15b{Enter}
return

#if GtkApplicationCase()
::\'{s}::
send ^+u15b{Enter}
return

#if OtherCase()
::\'{s}::
send {U+015B}
return


;; Glyph: 'Ŝ' Descr: LATIN CAPITAL LETTER S WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^S::
send ^x8{Enter}15c{Enter}
return

#if GtkApplicationCase()
::\^S::
send ^+u15c{Enter}
return

#if OtherCase()
::\^S::
send {U+015C}
return


;; Glyph: 'Ŝ' Descr: LATIN CAPITAL LETTER S WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{S}::
send ^x8{Enter}15c{Enter}
return

#if GtkApplicationCase()
::\^{S}::
send ^+u15c{Enter}
return

#if OtherCase()
::\^{S}::
send {U+015C}
return


;; Glyph: 'ŝ' Descr: LATIN SMALL LETTER S WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^s::
send ^x8{Enter}15d{Enter}
return

#if GtkApplicationCase()
::\^s::
send ^+u15d{Enter}
return

#if OtherCase()
::\^s::
send {U+015D}
return


;; Glyph: 'ŝ' Descr: LATIN SMALL LETTER S WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{s}::
send ^x8{Enter}15d{Enter}
return

#if GtkApplicationCase()
::\^{s}::
send ^+u15d{Enter}
return

#if OtherCase()
::\^{s}::
send {U+015D}
return


;; Glyph: 'Ş' Descr: LATIN CAPITAL LETTER S WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cS::
send ^x8{Enter}15e{Enter}
return

#if GtkApplicationCase()
::\cS::
send ^+u15e{Enter}
return

#if OtherCase()
::\cS::
send {U+015E}
return


;; Glyph: 'Ş' Descr: LATIN CAPITAL LETTER S WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{S}::
send ^x8{Enter}15e{Enter}
return

#if GtkApplicationCase()
::\c{S}::
send ^+u15e{Enter}
return

#if OtherCase()
::\c{S}::
send {U+015E}
return


;; Glyph: 'ş' Descr: LATIN SMALL LETTER S WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cs::
send ^x8{Enter}15f{Enter}
return

#if GtkApplicationCase()
::\cs::
send ^+u15f{Enter}
return

#if OtherCase()
::\cs::
send {U+015F}
return


;; Glyph: 'ş' Descr: LATIN SMALL LETTER S WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{s}::
send ^x8{Enter}15f{Enter}
return

#if GtkApplicationCase()
::\c{s}::
send ^+u15f{Enter}
return

#if OtherCase()
::\c{s}::
send {U+015F}
return


;; Glyph: 'Š' Descr: LATIN CAPITAL LETTER S WITH CARON

#if EmacsCase() && EmacsEnabled
::\vS::
send ^x8{Enter}160{Enter}
return

#if GtkApplicationCase()
::\vS::
send ^+u160{Enter}
return

#if OtherCase()
::\vS::
send {U+0160}
return


;; Glyph: 'Š' Descr: LATIN CAPITAL LETTER S WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{S}::
send ^x8{Enter}160{Enter}
return

#if GtkApplicationCase()
::\v{S}::
send ^+u160{Enter}
return

#if OtherCase()
::\v{S}::
send {U+0160}
return


;; Glyph: 'š' Descr: LATIN SMALL LETTER S WITH CARON

#if EmacsCase() && EmacsEnabled
::\vs::
send ^x8{Enter}161{Enter}
return

#if GtkApplicationCase()
::\vs::
send ^+u161{Enter}
return

#if OtherCase()
::\vs::
send {U+0161}
return


;; Glyph: 'š' Descr: LATIN SMALL LETTER S WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{s}::
send ^x8{Enter}161{Enter}
return

#if GtkApplicationCase()
::\v{s}::
send ^+u161{Enter}
return

#if OtherCase()
::\v{s}::
send {U+0161}
return


;; Glyph: 'Ţ' Descr: LATIN CAPITAL LETTER T WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cT::
send ^x8{Enter}162{Enter}
return

#if GtkApplicationCase()
::\cT::
send ^+u162{Enter}
return

#if OtherCase()
::\cT::
send {U+0162}
return


;; Glyph: 'Ţ' Descr: LATIN CAPITAL LETTER T WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{T}::
send ^x8{Enter}162{Enter}
return

#if GtkApplicationCase()
::\c{T}::
send ^+u162{Enter}
return

#if OtherCase()
::\c{T}::
send {U+0162}
return


;; Glyph: 'ţ' Descr: LATIN SMALL LETTER T WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\ct::
send ^x8{Enter}163{Enter}
return

#if GtkApplicationCase()
::\ct::
send ^+u163{Enter}
return

#if OtherCase()
::\ct::
send {U+0163}
return


;; Glyph: 'ţ' Descr: LATIN SMALL LETTER T WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{t}::
send ^x8{Enter}163{Enter}
return

#if GtkApplicationCase()
::\c{t}::
send ^+u163{Enter}
return

#if OtherCase()
::\c{t}::
send {U+0163}
return


;; Glyph: 'Ť' Descr: LATIN CAPITAL LETTER T WITH CARON

#if EmacsCase() && EmacsEnabled
::\vT::
send ^x8{Enter}164{Enter}
return

#if GtkApplicationCase()
::\vT::
send ^+u164{Enter}
return

#if OtherCase()
::\vT::
send {U+0164}
return


;; Glyph: 'Ť' Descr: LATIN CAPITAL LETTER T WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{T}::
send ^x8{Enter}164{Enter}
return

#if GtkApplicationCase()
::\v{T}::
send ^+u164{Enter}
return

#if OtherCase()
::\v{T}::
send {U+0164}
return


;; Glyph: 'ť' Descr: LATIN SMALL LETTER T WITH CARON

#if EmacsCase() && EmacsEnabled
::\vt::
send ^x8{Enter}165{Enter}
return

#if GtkApplicationCase()
::\vt::
send ^+u165{Enter}
return

#if OtherCase()
::\vt::
send {U+0165}
return


;; Glyph: 'ť' Descr: LATIN SMALL LETTER T WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{t}::
send ^x8{Enter}165{Enter}
return

#if GtkApplicationCase()
::\v{t}::
send ^+u165{Enter}
return

#if OtherCase()
::\v{t}::
send {U+0165}
return


;; Glyph: 'Ũ' Descr: LATIN CAPITAL LETTER U WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~U::
send ^x8{Enter}168{Enter}
return

#if GtkApplicationCase()
::\~U::
send ^+u168{Enter}
return

#if OtherCase()
::\~U::
send {U+0168}
return


;; Glyph: 'Ũ' Descr: LATIN CAPITAL LETTER U WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{U}::
send ^x8{Enter}168{Enter}
return

#if GtkApplicationCase()
::\~{U}::
send ^+u168{Enter}
return

#if OtherCase()
::\~{U}::
send {U+0168}
return


;; Glyph: 'ũ' Descr: LATIN SMALL LETTER U WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~u::
send ^x8{Enter}169{Enter}
return

#if GtkApplicationCase()
::\~u::
send ^+u169{Enter}
return

#if OtherCase()
::\~u::
send {U+0169}
return


;; Glyph: 'ũ' Descr: LATIN SMALL LETTER U WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{u}::
send ^x8{Enter}169{Enter}
return

#if GtkApplicationCase()
::\~{u}::
send ^+u169{Enter}
return

#if OtherCase()
::\~{u}::
send {U+0169}
return


;; Glyph: 'Ū' Descr: LATIN CAPITAL LETTER U WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=U::
send ^x8{Enter}16a{Enter}
return

#if GtkApplicationCase()
::\=U::
send ^+u16a{Enter}
return

#if OtherCase()
::\=U::
send {U+016A}
return


;; Glyph: 'Ū' Descr: LATIN CAPITAL LETTER U WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={U}::
send ^x8{Enter}16a{Enter}
return

#if GtkApplicationCase()
::\={U}::
send ^+u16a{Enter}
return

#if OtherCase()
::\={U}::
send {U+016A}
return


;; Glyph: 'ū' Descr: LATIN SMALL LETTER U WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=u::
send ^x8{Enter}16b{Enter}
return

#if GtkApplicationCase()
::\=u::
send ^+u16b{Enter}
return

#if OtherCase()
::\=u::
send {U+016B}
return


;; Glyph: 'ū' Descr: LATIN SMALL LETTER U WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={u}::
send ^x8{Enter}16b{Enter}
return

#if GtkApplicationCase()
::\={u}::
send ^+u16b{Enter}
return

#if OtherCase()
::\={u}::
send {U+016B}
return


;; Glyph: 'Ŭ' Descr: LATIN CAPITAL LETTER U WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uU::
send ^x8{Enter}16c{Enter}
return

#if GtkApplicationCase()
::\uU::
send ^+u16c{Enter}
return

#if OtherCase()
::\uU::
send {U+016C}
return


;; Glyph: 'Ŭ' Descr: LATIN CAPITAL LETTER U WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{U}::
send ^x8{Enter}16c{Enter}
return

#if GtkApplicationCase()
::\u{U}::
send ^+u16c{Enter}
return

#if OtherCase()
::\u{U}::
send {U+016C}
return


;; Glyph: 'ŭ' Descr: LATIN SMALL LETTER U WITH BREVE

#if EmacsCase() && EmacsEnabled
::\uu::
send ^x8{Enter}16d{Enter}
return

#if GtkApplicationCase()
::\uu::
send ^+u16d{Enter}
return

#if OtherCase()
::\uu::
send {U+016D}
return


;; Glyph: 'ŭ' Descr: LATIN SMALL LETTER U WITH BREVE

#if EmacsCase() && EmacsEnabled
::\u{u}::
send ^x8{Enter}16d{Enter}
return

#if GtkApplicationCase()
::\u{u}::
send ^+u16d{Enter}
return

#if OtherCase()
::\u{u}::
send {U+016D}
return


;; Glyph: 'Ű' Descr: LATIN CAPITAL LETTER U WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\HU::
send ^x8{Enter}170{Enter}
return

#if GtkApplicationCase()
::\HU::
send ^+u170{Enter}
return

#if OtherCase()
::\HU::
send {U+0170}
return


;; Glyph: 'Ű' Descr: LATIN CAPITAL LETTER U WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\H{U}::
send ^x8{Enter}170{Enter}
return

#if GtkApplicationCase()
::\H{U}::
send ^+u170{Enter}
return

#if OtherCase()
::\H{U}::
send {U+0170}
return


;; Glyph: 'ű' Descr: LATIN SMALL LETTER U WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\Hu::
send ^x8{Enter}171{Enter}
return

#if GtkApplicationCase()
::\Hu::
send ^+u171{Enter}
return

#if OtherCase()
::\Hu::
send {U+0171}
return


;; Glyph: 'ű' Descr: LATIN SMALL LETTER U WITH DOUBLE ACUTE

#if EmacsCase() && EmacsEnabled
::\H{u}::
send ^x8{Enter}171{Enter}
return

#if GtkApplicationCase()
::\H{u}::
send ^+u171{Enter}
return

#if OtherCase()
::\H{u}::
send {U+0171}
return


;; Glyph: 'Ų' Descr: LATIN CAPITAL LETTER U WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\kU::
send ^x8{Enter}172{Enter}
return

#if GtkApplicationCase()
::\kU::
send ^+u172{Enter}
return

#if OtherCase()
::\kU::
send {U+0172}
return


;; Glyph: 'Ų' Descr: LATIN CAPITAL LETTER U WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{U}::
send ^x8{Enter}172{Enter}
return

#if GtkApplicationCase()
::\k{U}::
send ^+u172{Enter}
return

#if OtherCase()
::\k{U}::
send {U+0172}
return


;; Glyph: 'ų' Descr: LATIN SMALL LETTER U WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\ku::
send ^x8{Enter}173{Enter}
return

#if GtkApplicationCase()
::\ku::
send ^+u173{Enter}
return

#if OtherCase()
::\ku::
send {U+0173}
return


;; Glyph: 'ų' Descr: LATIN SMALL LETTER U WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{u}::
send ^x8{Enter}173{Enter}
return

#if GtkApplicationCase()
::\k{u}::
send ^+u173{Enter}
return

#if OtherCase()
::\k{u}::
send {U+0173}
return


;; Glyph: 'Ŵ' Descr: LATIN CAPITAL LETTER W WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^W::
send ^x8{Enter}174{Enter}
return

#if GtkApplicationCase()
::\^W::
send ^+u174{Enter}
return

#if OtherCase()
::\^W::
send {U+0174}
return


;; Glyph: 'Ŵ' Descr: LATIN CAPITAL LETTER W WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{W}::
send ^x8{Enter}174{Enter}
return

#if GtkApplicationCase()
::\^{W}::
send ^+u174{Enter}
return

#if OtherCase()
::\^{W}::
send {U+0174}
return


;; Glyph: 'ŵ' Descr: LATIN SMALL LETTER W WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^w::
send ^x8{Enter}175{Enter}
return

#if GtkApplicationCase()
::\^w::
send ^+u175{Enter}
return

#if OtherCase()
::\^w::
send {U+0175}
return


;; Glyph: 'ŵ' Descr: LATIN SMALL LETTER W WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{w}::
send ^x8{Enter}175{Enter}
return

#if GtkApplicationCase()
::\^{w}::
send ^+u175{Enter}
return

#if OtherCase()
::\^{w}::
send {U+0175}
return


;; Glyph: 'Ŷ' Descr: LATIN CAPITAL LETTER Y WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^Y::
send ^x8{Enter}176{Enter}
return

#if GtkApplicationCase()
::\^Y::
send ^+u176{Enter}
return

#if OtherCase()
::\^Y::
send {U+0176}
return


;; Glyph: 'Ŷ' Descr: LATIN CAPITAL LETTER Y WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{Y}::
send ^x8{Enter}176{Enter}
return

#if GtkApplicationCase()
::\^{Y}::
send ^+u176{Enter}
return

#if OtherCase()
::\^{Y}::
send {U+0176}
return


;; Glyph: 'ŷ' Descr: LATIN SMALL LETTER Y WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^y::
send ^x8{Enter}177{Enter}
return

#if GtkApplicationCase()
::\^y::
send ^+u177{Enter}
return

#if OtherCase()
::\^y::
send {U+0177}
return


;; Glyph: 'ŷ' Descr: LATIN SMALL LETTER Y WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{y}::
send ^x8{Enter}177{Enter}
return

#if GtkApplicationCase()
::\^{y}::
send ^+u177{Enter}
return

#if OtherCase()
::\^{y}::
send {U+0177}
return


;; Glyph: 'Ÿ' Descr: LATIN CAPITAL LETTER Y WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"Y::
send ^x8{Enter}178{Enter}
return

#if GtkApplicationCase()
::\"Y::
send ^+u178{Enter}
return

#if OtherCase()
::\"Y::
send {U+0178}
return


;; Glyph: 'Ÿ' Descr: LATIN CAPITAL LETTER Y WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{Y}::
send ^x8{Enter}178{Enter}
return

#if GtkApplicationCase()
::\"{Y}::
send ^+u178{Enter}
return

#if OtherCase()
::\"{Y}::
send {U+0178}
return


;; Glyph: 'Ź' Descr: LATIN CAPITAL LETTER Z WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'Z::
send ^x8{Enter}179{Enter}
return

#if GtkApplicationCase()
::\'Z::
send ^+u179{Enter}
return

#if OtherCase()
::\'Z::
send {U+0179}
return


;; Glyph: 'Ź' Descr: LATIN CAPITAL LETTER Z WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{Z}::
send ^x8{Enter}179{Enter}
return

#if GtkApplicationCase()
::\'{Z}::
send ^+u179{Enter}
return

#if OtherCase()
::\'{Z}::
send {U+0179}
return


;; Glyph: 'ź' Descr: LATIN SMALL LETTER Z WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'z::
send ^x8{Enter}17a{Enter}
return

#if GtkApplicationCase()
::\'z::
send ^+u17a{Enter}
return

#if OtherCase()
::\'z::
send {U+017A}
return


;; Glyph: 'ź' Descr: LATIN SMALL LETTER Z WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{z}::
send ^x8{Enter}17a{Enter}
return

#if GtkApplicationCase()
::\'{z}::
send ^+u17a{Enter}
return

#if OtherCase()
::\'{z}::
send {U+017A}
return


;; Glyph: 'Ż' Descr: LATIN CAPITAL LETTER Z WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.Z::
send ^x8{Enter}17b{Enter}
return

#if GtkApplicationCase()
::\.Z::
send ^+u17b{Enter}
return

#if OtherCase()
::\.Z::
send {U+017B}
return


;; Glyph: 'Ż' Descr: LATIN CAPITAL LETTER Z WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{Z}::
send ^x8{Enter}17b{Enter}
return

#if GtkApplicationCase()
::\.{Z}::
send ^+u17b{Enter}
return

#if OtherCase()
::\.{Z}::
send {U+017B}
return


;; Glyph: 'ż' Descr: LATIN SMALL LETTER Z WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.z::
send ^x8{Enter}17c{Enter}
return

#if GtkApplicationCase()
::\.z::
send ^+u17c{Enter}
return

#if OtherCase()
::\.z::
send {U+017C}
return


;; Glyph: 'ż' Descr: LATIN SMALL LETTER Z WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{z}::
send ^x8{Enter}17c{Enter}
return

#if GtkApplicationCase()
::\.{z}::
send ^+u17c{Enter}
return

#if OtherCase()
::\.{z}::
send {U+017C}
return


;; Glyph: 'Ž' Descr: LATIN CAPITAL LETTER Z WITH CARON

#if EmacsCase() && EmacsEnabled
::\vZ::
send ^x8{Enter}17d{Enter}
return

#if GtkApplicationCase()
::\vZ::
send ^+u17d{Enter}
return

#if OtherCase()
::\vZ::
send {U+017D}
return


;; Glyph: 'Ž' Descr: LATIN CAPITAL LETTER Z WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{Z}::
send ^x8{Enter}17d{Enter}
return

#if GtkApplicationCase()
::\v{Z}::
send ^+u17d{Enter}
return

#if OtherCase()
::\v{Z}::
send {U+017D}
return


;; Glyph: 'ž' Descr: LATIN SMALL LETTER Z WITH CARON

#if EmacsCase() && EmacsEnabled
::\vz::
send ^x8{Enter}17e{Enter}
return

#if GtkApplicationCase()
::\vz::
send ^+u17e{Enter}
return

#if OtherCase()
::\vz::
send {U+017E}
return


;; Glyph: 'ž' Descr: LATIN SMALL LETTER Z WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{z}::
send ^x8{Enter}17e{Enter}
return

#if GtkApplicationCase()
::\v{z}::
send ^+u17e{Enter}
return

#if OtherCase()
::\v{z}::
send {U+017E}
return


;; Glyph: 'ƛ' Descr: LATIN SMALL LETTER LAMBDA WITH STROKE

#if EmacsCase() && EmacsEnabled
::\lambdabar::
send ^x8{Enter}19b{Enter}
return

#if GtkApplicationCase()
::\lambdabar::
send ^+u19b{Enter}
return

#if OtherCase()
::\lambdabar::
send {U+019B}
return


;; Glyph: 'Ǎ' Descr: LATIN CAPITAL LETTER A WITH CARON

#if EmacsCase() && EmacsEnabled
::\vA::
send ^x8{Enter}1cd{Enter}
return

#if GtkApplicationCase()
::\vA::
send ^+u1cd{Enter}
return

#if OtherCase()
::\vA::
send {U+01CD}
return


;; Glyph: 'Ǎ' Descr: LATIN CAPITAL LETTER A WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{A}::
send ^x8{Enter}1cd{Enter}
return

#if GtkApplicationCase()
::\v{A}::
send ^+u1cd{Enter}
return

#if OtherCase()
::\v{A}::
send {U+01CD}
return


;; Glyph: 'ǎ' Descr: LATIN SMALL LETTER A WITH CARON

#if EmacsCase() && EmacsEnabled
::\va::
send ^x8{Enter}1ce{Enter}
return

#if GtkApplicationCase()
::\va::
send ^+u1ce{Enter}
return

#if OtherCase()
::\va::
send {U+01CE}
return


;; Glyph: 'ǎ' Descr: LATIN SMALL LETTER A WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{a}::
send ^x8{Enter}1ce{Enter}
return

#if GtkApplicationCase()
::\v{a}::
send ^+u1ce{Enter}
return

#if OtherCase()
::\v{a}::
send {U+01CE}
return


;; Glyph: 'Ǐ' Descr: LATIN CAPITAL LETTER I WITH CARON

#if EmacsCase() && EmacsEnabled
::\vI::
send ^x8{Enter}1cf{Enter}
return

#if GtkApplicationCase()
::\vI::
send ^+u1cf{Enter}
return

#if OtherCase()
::\vI::
send {U+01CF}
return


;; Glyph: 'Ǐ' Descr: LATIN CAPITAL LETTER I WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{I}::
send ^x8{Enter}1cf{Enter}
return

#if GtkApplicationCase()
::\v{I}::
send ^+u1cf{Enter}
return

#if OtherCase()
::\v{I}::
send {U+01CF}
return


;; Glyph: 'ǐ' Descr: LATIN SMALL LETTER I WITH CARON

#if EmacsCase() && EmacsEnabled
::\vi::
send ^x8{Enter}1d0{Enter}
return

#if GtkApplicationCase()
::\vi::
send ^+u1d0{Enter}
return

#if OtherCase()
::\vi::
send {U+01D0}
return


;; Glyph: 'ǐ' Descr: LATIN SMALL LETTER I WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{\i}::
send ^x8{Enter}1d0{Enter}
return

#if GtkApplicationCase()
::\v{\i}::
send ^+u1d0{Enter}
return

#if OtherCase()
::\v{\i}::
send {U+01D0}
return


;; Glyph: 'ǐ' Descr: LATIN SMALL LETTER I WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{i}::
send ^x8{Enter}1d0{Enter}
return

#if GtkApplicationCase()
::\v{i}::
send ^+u1d0{Enter}
return

#if OtherCase()
::\v{i}::
send {U+01D0}
return


;; Glyph: 'Ǒ' Descr: LATIN CAPITAL LETTER O WITH CARON

#if EmacsCase() && EmacsEnabled
::\vO::
send ^x8{Enter}1d1{Enter}
return

#if GtkApplicationCase()
::\vO::
send ^+u1d1{Enter}
return

#if OtherCase()
::\vO::
send {U+01D1}
return


;; Glyph: 'Ǒ' Descr: LATIN CAPITAL LETTER O WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{O}::
send ^x8{Enter}1d1{Enter}
return

#if GtkApplicationCase()
::\v{O}::
send ^+u1d1{Enter}
return

#if OtherCase()
::\v{O}::
send {U+01D1}
return


;; Glyph: 'ǒ' Descr: LATIN SMALL LETTER O WITH CARON

#if EmacsCase() && EmacsEnabled
::\vo::
send ^x8{Enter}1d2{Enter}
return

#if GtkApplicationCase()
::\vo::
send ^+u1d2{Enter}
return

#if OtherCase()
::\vo::
send {U+01D2}
return


;; Glyph: 'ǒ' Descr: LATIN SMALL LETTER O WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{o}::
send ^x8{Enter}1d2{Enter}
return

#if GtkApplicationCase()
::\v{o}::
send ^+u1d2{Enter}
return

#if OtherCase()
::\v{o}::
send {U+01D2}
return


;; Glyph: 'Ǔ' Descr: LATIN CAPITAL LETTER U WITH CARON

#if EmacsCase() && EmacsEnabled
::\vU::
send ^x8{Enter}1d3{Enter}
return

#if GtkApplicationCase()
::\vU::
send ^+u1d3{Enter}
return

#if OtherCase()
::\vU::
send {U+01D3}
return


;; Glyph: 'Ǔ' Descr: LATIN CAPITAL LETTER U WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{U}::
send ^x8{Enter}1d3{Enter}
return

#if GtkApplicationCase()
::\v{U}::
send ^+u1d3{Enter}
return

#if OtherCase()
::\v{U}::
send {U+01D3}
return


;; Glyph: 'ǔ' Descr: LATIN SMALL LETTER U WITH CARON

#if EmacsCase() && EmacsEnabled
::\vu::
send ^x8{Enter}1d4{Enter}
return

#if GtkApplicationCase()
::\vu::
send ^+u1d4{Enter}
return

#if OtherCase()
::\vu::
send {U+01D4}
return


;; Glyph: 'ǔ' Descr: LATIN SMALL LETTER U WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{u}::
send ^x8{Enter}1d4{Enter}
return

#if GtkApplicationCase()
::\v{u}::
send ^+u1d4{Enter}
return

#if OtherCase()
::\v{u}::
send {U+01D4}
return


;; Glyph: 'Ǖ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=U::
send ^x8{Enter}1d5{Enter}
return

#if GtkApplicationCase()
::\"\=U::
send ^+u1d5{Enter}
return

#if OtherCase()
::\"\=U::
send {U+01D5}
return


;; Glyph: 'Ǖ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={U}::
send ^x8{Enter}1d5{Enter}
return

#if GtkApplicationCase()
::\"\={U}::
send ^+u1d5{Enter}
return

#if OtherCase()
::\"\={U}::
send {U+01D5}
return


;; Glyph: 'ǖ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=u::
send ^x8{Enter}1d6{Enter}
return

#if GtkApplicationCase()
::\"\=u::
send ^+u1d6{Enter}
return

#if OtherCase()
::\"\=u::
send {U+01D6}
return


;; Glyph: 'ǖ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={u}::
send ^x8{Enter}1d6{Enter}
return

#if GtkApplicationCase()
::\"\={u}::
send ^+u1d6{Enter}
return

#if OtherCase()
::\"\={u}::
send {U+01D6}
return


;; Glyph: 'Ǘ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'U::
send ^x8{Enter}1d7{Enter}
return

#if GtkApplicationCase()
::\"\'U::
send ^+u1d7{Enter}
return

#if OtherCase()
::\"\'U::
send {U+01D7}
return


;; Glyph: 'Ǘ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'{U}::
send ^x8{Enter}1d7{Enter}
return

#if GtkApplicationCase()
::\"\'{U}::
send ^+u1d7{Enter}
return

#if OtherCase()
::\"\'{U}::
send {U+01D7}
return


;; Glyph: 'ǘ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'u::
send ^x8{Enter}1d8{Enter}
return

#if GtkApplicationCase()
::\"\'u::
send ^+u1d8{Enter}
return

#if OtherCase()
::\"\'u::
send {U+01D8}
return


;; Glyph: 'ǘ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'{u}::
send ^x8{Enter}1d8{Enter}
return

#if GtkApplicationCase()
::\"\'{u}::
send ^+u1d8{Enter}
return

#if OtherCase()
::\"\'{u}::
send {U+01D8}
return


;; Glyph: 'Ǚ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON

#if EmacsCase() && EmacsEnabled
::\"\vU::
send ^x8{Enter}1d9{Enter}
return

#if GtkApplicationCase()
::\"\vU::
send ^+u1d9{Enter}
return

#if OtherCase()
::\"\vU::
send {U+01D9}
return


;; Glyph: 'Ǚ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON

#if EmacsCase() && EmacsEnabled
::\"\v{U}::
send ^x8{Enter}1d9{Enter}
return

#if GtkApplicationCase()
::\"\v{U}::
send ^+u1d9{Enter}
return

#if OtherCase()
::\"\v{U}::
send {U+01D9}
return


;; Glyph: 'ǚ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND CARON

#if EmacsCase() && EmacsEnabled
::\"\vu::
send ^x8{Enter}1da{Enter}
return

#if GtkApplicationCase()
::\"\vu::
send ^+u1da{Enter}
return

#if OtherCase()
::\"\vu::
send {U+01DA}
return


;; Glyph: 'ǚ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND CARON

#if EmacsCase() && EmacsEnabled
::\"\v{u}::
send ^x8{Enter}1da{Enter}
return

#if GtkApplicationCase()
::\"\v{u}::
send ^+u1da{Enter}
return

#if OtherCase()
::\"\v{u}::
send {U+01DA}
return


;; Glyph: 'Ǜ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE

#if EmacsCase() && EmacsEnabled
::\"\``U::
send ^x8{Enter}1db{Enter}
return

#if GtkApplicationCase()
::\"\``U::
send ^+u1db{Enter}
return

#if OtherCase()
::\"\``U::
send {U+01DB}
return


;; Glyph: 'Ǜ' Descr: LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE

#if EmacsCase() && EmacsEnabled
::\"\``{U}::
send ^x8{Enter}1db{Enter}
return

#if GtkApplicationCase()
::\"\``{U}::
send ^+u1db{Enter}
return

#if OtherCase()
::\"\``{U}::
send {U+01DB}
return


;; Glyph: 'ǜ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE

#if EmacsCase() && EmacsEnabled
::\"\``u::
send ^x8{Enter}1dc{Enter}
return

#if GtkApplicationCase()
::\"\``u::
send ^+u1dc{Enter}
return

#if OtherCase()
::\"\``u::
send {U+01DC}
return


;; Glyph: 'ǜ' Descr: LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE

#if EmacsCase() && EmacsEnabled
::\"\``{u}::
send ^x8{Enter}1dc{Enter}
return

#if GtkApplicationCase()
::\"\``{u}::
send ^+u1dc{Enter}
return

#if OtherCase()
::\"\``{u}::
send {U+01DC}
return


;; Glyph: 'Ǟ' Descr: LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=A::
send ^x8{Enter}1de{Enter}
return

#if GtkApplicationCase()
::\"\=A::
send ^+u1de{Enter}
return

#if OtherCase()
::\"\=A::
send {U+01DE}
return


;; Glyph: 'Ǟ' Descr: LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={A}::
send ^x8{Enter}1de{Enter}
return

#if GtkApplicationCase()
::\"\={A}::
send ^+u1de{Enter}
return

#if OtherCase()
::\"\={A}::
send {U+01DE}
return


;; Glyph: 'ǟ' Descr: LATIN SMALL LETTER A WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=a::
send ^x8{Enter}1df{Enter}
return

#if GtkApplicationCase()
::\"\=a::
send ^+u1df{Enter}
return

#if OtherCase()
::\"\=a::
send {U+01DF}
return


;; Glyph: 'ǟ' Descr: LATIN SMALL LETTER A WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={a}::
send ^x8{Enter}1df{Enter}
return

#if GtkApplicationCase()
::\"\={a}::
send ^+u1df{Enter}
return

#if OtherCase()
::\"\={a}::
send {U+01DF}
return


;; Glyph: 'Ǡ' Descr: LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\=A::
send ^x8{Enter}1e0{Enter}
return

#if GtkApplicationCase()
::\.\=A::
send ^+u1e0{Enter}
return

#if OtherCase()
::\.\=A::
send {U+01E0}
return


;; Glyph: 'Ǡ' Descr: LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\={A}::
send ^x8{Enter}1e0{Enter}
return

#if GtkApplicationCase()
::\.\={A}::
send ^+u1e0{Enter}
return

#if OtherCase()
::\.\={A}::
send {U+01E0}
return


;; Glyph: 'ǡ' Descr: LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\=a::
send ^x8{Enter}1e1{Enter}
return

#if GtkApplicationCase()
::\.\=a::
send ^+u1e1{Enter}
return

#if OtherCase()
::\.\=a::
send {U+01E1}
return


;; Glyph: 'ǡ' Descr: LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\={a}::
send ^x8{Enter}1e1{Enter}
return

#if GtkApplicationCase()
::\.\={a}::
send ^+u1e1{Enter}
return

#if OtherCase()
::\.\={a}::
send {U+01E1}
return


;; Glyph: 'Ǣ' Descr: LATIN CAPITAL LETTER AE WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=\AE::
send ^x8{Enter}1e2{Enter}
return

#if GtkApplicationCase()
::\=\AE::
send ^+u1e2{Enter}
return

#if OtherCase()
::\=\AE::
send {U+01E2}
return


;; Glyph: 'Ǣ' Descr: LATIN CAPITAL LETTER AE WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={\AE}::
send ^x8{Enter}1e2{Enter}
return

#if GtkApplicationCase()
::\={\AE}::
send ^+u1e2{Enter}
return

#if OtherCase()
::\={\AE}::
send {U+01E2}
return


;; Glyph: 'ǣ' Descr: LATIN SMALL LETTER AE WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=\ae::
send ^x8{Enter}1e3{Enter}
return

#if GtkApplicationCase()
::\=\ae::
send ^+u1e3{Enter}
return

#if OtherCase()
::\=\ae::
send {U+01E3}
return


;; Glyph: 'ǣ' Descr: LATIN SMALL LETTER AE WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={\ae}::
send ^x8{Enter}1e3{Enter}
return

#if GtkApplicationCase()
::\={\ae}::
send ^+u1e3{Enter}
return

#if OtherCase()
::\={\ae}::
send {U+01E3}
return


;; Glyph: 'Ǧ' Descr: LATIN CAPITAL LETTER G WITH CARON

#if EmacsCase() && EmacsEnabled
::\vG::
send ^x8{Enter}1e6{Enter}
return

#if GtkApplicationCase()
::\vG::
send ^+u1e6{Enter}
return

#if OtherCase()
::\vG::
send {U+01E6}
return


;; Glyph: 'Ǧ' Descr: LATIN CAPITAL LETTER G WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{G}::
send ^x8{Enter}1e6{Enter}
return

#if GtkApplicationCase()
::\v{G}::
send ^+u1e6{Enter}
return

#if OtherCase()
::\v{G}::
send {U+01E6}
return


;; Glyph: 'ǧ' Descr: LATIN SMALL LETTER G WITH CARON

#if EmacsCase() && EmacsEnabled
::\vg::
send ^x8{Enter}1e7{Enter}
return

#if GtkApplicationCase()
::\vg::
send ^+u1e7{Enter}
return

#if OtherCase()
::\vg::
send {U+01E7}
return


;; Glyph: 'ǧ' Descr: LATIN SMALL LETTER G WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{g}::
send ^x8{Enter}1e7{Enter}
return

#if GtkApplicationCase()
::\v{g}::
send ^+u1e7{Enter}
return

#if OtherCase()
::\v{g}::
send {U+01E7}
return


;; Glyph: 'Ǩ' Descr: LATIN CAPITAL LETTER K WITH CARON

#if EmacsCase() && EmacsEnabled
::\vK::
send ^x8{Enter}1e8{Enter}
return

#if GtkApplicationCase()
::\vK::
send ^+u1e8{Enter}
return

#if OtherCase()
::\vK::
send {U+01E8}
return


;; Glyph: 'Ǩ' Descr: LATIN CAPITAL LETTER K WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{K}::
send ^x8{Enter}1e8{Enter}
return

#if GtkApplicationCase()
::\v{K}::
send ^+u1e8{Enter}
return

#if OtherCase()
::\v{K}::
send {U+01E8}
return


;; Glyph: 'ǩ' Descr: LATIN SMALL LETTER K WITH CARON

#if EmacsCase() && EmacsEnabled
::\vk::
send ^x8{Enter}1e9{Enter}
return

#if GtkApplicationCase()
::\vk::
send ^+u1e9{Enter}
return

#if OtherCase()
::\vk::
send {U+01E9}
return


;; Glyph: 'ǩ' Descr: LATIN SMALL LETTER K WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{k}::
send ^x8{Enter}1e9{Enter}
return

#if GtkApplicationCase()
::\v{k}::
send ^+u1e9{Enter}
return

#if OtherCase()
::\v{k}::
send {U+01E9}
return


;; Glyph: 'Ǫ' Descr: LATIN CAPITAL LETTER O WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\kO::
send ^x8{Enter}1ea{Enter}
return

#if GtkApplicationCase()
::\kO::
send ^+u1ea{Enter}
return

#if OtherCase()
::\kO::
send {U+01EA}
return


;; Glyph: 'Ǫ' Descr: LATIN CAPITAL LETTER O WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{O}::
send ^x8{Enter}1ea{Enter}
return

#if GtkApplicationCase()
::\k{O}::
send ^+u1ea{Enter}
return

#if OtherCase()
::\k{O}::
send {U+01EA}
return


;; Glyph: 'ǫ' Descr: LATIN SMALL LETTER O WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\ko::
send ^x8{Enter}1eb{Enter}
return

#if GtkApplicationCase()
::\ko::
send ^+u1eb{Enter}
return

#if OtherCase()
::\ko::
send {U+01EB}
return


;; Glyph: 'ǫ' Descr: LATIN SMALL LETTER O WITH OGONEK

#if EmacsCase() && EmacsEnabled
::\k{o}::
send ^x8{Enter}1eb{Enter}
return

#if GtkApplicationCase()
::\k{o}::
send ^+u1eb{Enter}
return

#if OtherCase()
::\k{o}::
send {U+01EB}
return


;; Glyph: 'Ǭ' Descr: LATIN CAPITAL LETTER O WITH OGONEK AND MACRON

#if EmacsCase() && EmacsEnabled
::\k\=O::
send ^x8{Enter}1ec{Enter}
return

#if GtkApplicationCase()
::\k\=O::
send ^+u1ec{Enter}
return

#if OtherCase()
::\k\=O::
send {U+01EC}
return


;; Glyph: 'Ǭ' Descr: LATIN CAPITAL LETTER O WITH OGONEK AND MACRON

#if EmacsCase() && EmacsEnabled
::\k\={O}::
send ^x8{Enter}1ec{Enter}
return

#if GtkApplicationCase()
::\k\={O}::
send ^+u1ec{Enter}
return

#if OtherCase()
::\k\={O}::
send {U+01EC}
return


;; Glyph: 'ǭ' Descr: LATIN SMALL LETTER O WITH OGONEK AND MACRON

#if EmacsCase() && EmacsEnabled
::\k\=o::
send ^x8{Enter}1ed{Enter}
return

#if GtkApplicationCase()
::\k\=o::
send ^+u1ed{Enter}
return

#if OtherCase()
::\k\=o::
send {U+01ED}
return


;; Glyph: 'ǭ' Descr: LATIN SMALL LETTER O WITH OGONEK AND MACRON

#if EmacsCase() && EmacsEnabled
::\k\={o}::
send ^x8{Enter}1ed{Enter}
return

#if GtkApplicationCase()
::\k\={o}::
send ^+u1ed{Enter}
return

#if OtherCase()
::\k\={o}::
send {U+01ED}
return


;; Glyph: 'ǰ' Descr: LATIN SMALL LETTER J WITH CARON

#if EmacsCase() && EmacsEnabled
::\vj::
send ^x8{Enter}1f0{Enter}
return

#if GtkApplicationCase()
::\vj::
send ^+u1f0{Enter}
return

#if OtherCase()
::\vj::
send {U+01F0}
return


;; Glyph: 'ǰ' Descr: LATIN SMALL LETTER J WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{\j}::
send ^x8{Enter}1f0{Enter}
return

#if GtkApplicationCase()
::\v{\j}::
send ^+u1f0{Enter}
return

#if OtherCase()
::\v{\j}::
send {U+01F0}
return


;; Glyph: 'ǰ' Descr: LATIN SMALL LETTER J WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{j}::
send ^x8{Enter}1f0{Enter}
return

#if GtkApplicationCase()
::\v{j}::
send ^+u1f0{Enter}
return

#if OtherCase()
::\v{j}::
send {U+01F0}
return


;; Glyph: 'Ǵ' Descr: LATIN CAPITAL LETTER G WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'G::
send ^x8{Enter}1f4{Enter}
return

#if GtkApplicationCase()
::\'G::
send ^+u1f4{Enter}
return

#if OtherCase()
::\'G::
send {U+01F4}
return


;; Glyph: 'Ǵ' Descr: LATIN CAPITAL LETTER G WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{G}::
send ^x8{Enter}1f4{Enter}
return

#if GtkApplicationCase()
::\'{G}::
send ^+u1f4{Enter}
return

#if OtherCase()
::\'{G}::
send {U+01F4}
return


;; Glyph: 'ǵ' Descr: LATIN SMALL LETTER G WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'g::
send ^x8{Enter}1f5{Enter}
return

#if GtkApplicationCase()
::\'g::
send ^+u1f5{Enter}
return

#if OtherCase()
::\'g::
send {U+01F5}
return


;; Glyph: 'ǵ' Descr: LATIN SMALL LETTER G WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{g}::
send ^x8{Enter}1f5{Enter}
return

#if GtkApplicationCase()
::\'{g}::
send ^+u1f5{Enter}
return

#if OtherCase()
::\'{g}::
send {U+01F5}
return


;; Glyph: 'Ǹ' Descr: LATIN CAPITAL LETTER N WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``N::
send ^x8{Enter}1f8{Enter}
return

#if GtkApplicationCase()
::\``N::
send ^+u1f8{Enter}
return

#if OtherCase()
::\``N::
send {U+01F8}
return


;; Glyph: 'Ǹ' Descr: LATIN CAPITAL LETTER N WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{N}::
send ^x8{Enter}1f8{Enter}
return

#if GtkApplicationCase()
::\``{N}::
send ^+u1f8{Enter}
return

#if OtherCase()
::\``{N}::
send {U+01F8}
return


;; Glyph: 'ǹ' Descr: LATIN SMALL LETTER N WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``n::
send ^x8{Enter}1f9{Enter}
return

#if GtkApplicationCase()
::\``n::
send ^+u1f9{Enter}
return

#if OtherCase()
::\``n::
send {U+01F9}
return


;; Glyph: 'ǹ' Descr: LATIN SMALL LETTER N WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{n}::
send ^x8{Enter}1f9{Enter}
return

#if GtkApplicationCase()
::\``{n}::
send ^+u1f9{Enter}
return

#if OtherCase()
::\``{n}::
send {U+01F9}
return


;; Glyph: 'Ǽ' Descr: LATIN CAPITAL LETTER AE WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'\AE::
send ^x8{Enter}1fc{Enter}
return

#if GtkApplicationCase()
::\'\AE::
send ^+u1fc{Enter}
return

#if OtherCase()
::\'\AE::
send {U+01FC}
return


;; Glyph: 'Ǽ' Descr: LATIN CAPITAL LETTER AE WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{\AE}::
send ^x8{Enter}1fc{Enter}
return

#if GtkApplicationCase()
::\'{\AE}::
send ^+u1fc{Enter}
return

#if OtherCase()
::\'{\AE}::
send {U+01FC}
return


;; Glyph: 'ǽ' Descr: LATIN SMALL LETTER AE WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'\ae::
send ^x8{Enter}1fd{Enter}
return

#if GtkApplicationCase()
::\'\ae::
send ^+u1fd{Enter}
return

#if OtherCase()
::\'\ae::
send {U+01FD}
return


;; Glyph: 'ǽ' Descr: LATIN SMALL LETTER AE WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{\ae}::
send ^x8{Enter}1fd{Enter}
return

#if GtkApplicationCase()
::\'{\ae}::
send ^+u1fd{Enter}
return

#if OtherCase()
::\'{\ae}::
send {U+01FD}
return


;; Glyph: 'Ǿ' Descr: LATIN CAPITAL LETTER O WITH STROKE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\'\O::
send ^x8{Enter}1fe{Enter}
return

#if GtkApplicationCase()
::\'\O::
send ^+u1fe{Enter}
return

#if OtherCase()
::\'\O::
send {U+01FE}
return


;; Glyph: 'Ǿ' Descr: LATIN CAPITAL LETTER O WITH STROKE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\'{\O}::
send ^x8{Enter}1fe{Enter}
return

#if GtkApplicationCase()
::\'{\O}::
send ^+u1fe{Enter}
return

#if OtherCase()
::\'{\O}::
send {U+01FE}
return


;; Glyph: 'ǿ' Descr: LATIN SMALL LETTER O WITH STROKE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\'\o::
send ^x8{Enter}1ff{Enter}
return

#if GtkApplicationCase()
::\'\o::
send ^+u1ff{Enter}
return

#if OtherCase()
::\'\o::
send {U+01FF}
return


;; Glyph: 'ǿ' Descr: LATIN SMALL LETTER O WITH STROKE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\'{\o}::
send ^x8{Enter}1ff{Enter}
return

#if GtkApplicationCase()
::\'{\o}::
send ^+u1ff{Enter}
return

#if OtherCase()
::\'{\o}::
send {U+01FF}
return


;; Glyph: 'Ȟ' Descr: LATIN CAPITAL LETTER H WITH CARON

#if EmacsCase() && EmacsEnabled
::\vH::
send ^x8{Enter}21e{Enter}
return

#if GtkApplicationCase()
::\vH::
send ^+u21e{Enter}
return

#if OtherCase()
::\vH::
send {U+021E}
return


;; Glyph: 'Ȟ' Descr: LATIN CAPITAL LETTER H WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{H}::
send ^x8{Enter}21e{Enter}
return

#if GtkApplicationCase()
::\v{H}::
send ^+u21e{Enter}
return

#if OtherCase()
::\v{H}::
send {U+021E}
return


;; Glyph: 'ȟ' Descr: LATIN SMALL LETTER H WITH CARON

#if EmacsCase() && EmacsEnabled
::\vh::
send ^x8{Enter}21f{Enter}
return

#if GtkApplicationCase()
::\vh::
send ^+u21f{Enter}
return

#if OtherCase()
::\vh::
send {U+021F}
return


;; Glyph: 'ȟ' Descr: LATIN SMALL LETTER H WITH CARON

#if EmacsCase() && EmacsEnabled
::\v{h}::
send ^x8{Enter}21f{Enter}
return

#if GtkApplicationCase()
::\v{h}::
send ^+u21f{Enter}
return

#if OtherCase()
::\v{h}::
send {U+021F}
return


;; Glyph: 'Ȧ' Descr: LATIN CAPITAL LETTER A WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.A::
send ^x8{Enter}226{Enter}
return

#if GtkApplicationCase()
::\.A::
send ^+u226{Enter}
return

#if OtherCase()
::\.A::
send {U+0226}
return


;; Glyph: 'Ȧ' Descr: LATIN CAPITAL LETTER A WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{A}::
send ^x8{Enter}226{Enter}
return

#if GtkApplicationCase()
::\.{A}::
send ^+u226{Enter}
return

#if OtherCase()
::\.{A}::
send {U+0226}
return


;; Glyph: 'ȧ' Descr: LATIN SMALL LETTER A WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.a::
send ^x8{Enter}227{Enter}
return

#if GtkApplicationCase()
::\.a::
send ^+u227{Enter}
return

#if OtherCase()
::\.a::
send {U+0227}
return


;; Glyph: 'ȧ' Descr: LATIN SMALL LETTER A WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{a}::
send ^x8{Enter}227{Enter}
return

#if GtkApplicationCase()
::\.{a}::
send ^+u227{Enter}
return

#if OtherCase()
::\.{a}::
send {U+0227}
return


;; Glyph: 'Ȩ' Descr: LATIN CAPITAL LETTER E WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cE::
send ^x8{Enter}228{Enter}
return

#if GtkApplicationCase()
::\cE::
send ^+u228{Enter}
return

#if OtherCase()
::\cE::
send {U+0228}
return


;; Glyph: 'Ȩ' Descr: LATIN CAPITAL LETTER E WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{E}::
send ^x8{Enter}228{Enter}
return

#if GtkApplicationCase()
::\c{E}::
send ^+u228{Enter}
return

#if OtherCase()
::\c{E}::
send {U+0228}
return


;; Glyph: 'ȩ' Descr: LATIN SMALL LETTER E WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\ce::
send ^x8{Enter}229{Enter}
return

#if GtkApplicationCase()
::\ce::
send ^+u229{Enter}
return

#if OtherCase()
::\ce::
send {U+0229}
return


;; Glyph: 'ȩ' Descr: LATIN SMALL LETTER E WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{e}::
send ^x8{Enter}229{Enter}
return

#if GtkApplicationCase()
::\c{e}::
send ^+u229{Enter}
return

#if OtherCase()
::\c{e}::
send {U+0229}
return


;; Glyph: 'Ȫ' Descr: LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=O::
send ^x8{Enter}22a{Enter}
return

#if GtkApplicationCase()
::\"\=O::
send ^+u22a{Enter}
return

#if OtherCase()
::\"\=O::
send {U+022A}
return


;; Glyph: 'Ȫ' Descr: LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={O}::
send ^x8{Enter}22a{Enter}
return

#if GtkApplicationCase()
::\"\={O}::
send ^+u22a{Enter}
return

#if OtherCase()
::\"\={O}::
send {U+022A}
return


;; Glyph: 'ȫ' Descr: LATIN SMALL LETTER O WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\=o::
send ^x8{Enter}22b{Enter}
return

#if GtkApplicationCase()
::\"\=o::
send ^+u22b{Enter}
return

#if OtherCase()
::\"\=o::
send {U+022B}
return


;; Glyph: 'ȫ' Descr: LATIN SMALL LETTER O WITH DIAERESIS AND MACRON

#if EmacsCase() && EmacsEnabled
::\"\={o}::
send ^x8{Enter}22b{Enter}
return

#if GtkApplicationCase()
::\"\={o}::
send ^+u22b{Enter}
return

#if OtherCase()
::\"\={o}::
send {U+022B}
return


;; Glyph: 'Ȭ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND MACRON

#if EmacsCase() && EmacsEnabled
::\~\=O::
send ^x8{Enter}22c{Enter}
return

#if GtkApplicationCase()
::\~\=O::
send ^+u22c{Enter}
return

#if OtherCase()
::\~\=O::
send {U+022C}
return


;; Glyph: 'Ȭ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND MACRON

#if EmacsCase() && EmacsEnabled
::\~\={O}::
send ^x8{Enter}22c{Enter}
return

#if GtkApplicationCase()
::\~\={O}::
send ^+u22c{Enter}
return

#if OtherCase()
::\~\={O}::
send {U+022C}
return


;; Glyph: 'ȭ' Descr: LATIN SMALL LETTER O WITH TILDE AND MACRON

#if EmacsCase() && EmacsEnabled
::\~\=o::
send ^x8{Enter}22d{Enter}
return

#if GtkApplicationCase()
::\~\=o::
send ^+u22d{Enter}
return

#if OtherCase()
::\~\=o::
send {U+022D}
return


;; Glyph: 'ȭ' Descr: LATIN SMALL LETTER O WITH TILDE AND MACRON

#if EmacsCase() && EmacsEnabled
::\~\={o}::
send ^x8{Enter}22d{Enter}
return

#if GtkApplicationCase()
::\~\={o}::
send ^+u22d{Enter}
return

#if OtherCase()
::\~\={o}::
send {U+022D}
return


;; Glyph: 'Ȯ' Descr: LATIN CAPITAL LETTER O WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.O::
send ^x8{Enter}22e{Enter}
return

#if GtkApplicationCase()
::\.O::
send ^+u22e{Enter}
return

#if OtherCase()
::\.O::
send {U+022E}
return


;; Glyph: 'Ȯ' Descr: LATIN CAPITAL LETTER O WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{O}::
send ^x8{Enter}22e{Enter}
return

#if GtkApplicationCase()
::\.{O}::
send ^+u22e{Enter}
return

#if OtherCase()
::\.{O}::
send {U+022E}
return


;; Glyph: 'ȯ' Descr: LATIN SMALL LETTER O WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.o::
send ^x8{Enter}22f{Enter}
return

#if GtkApplicationCase()
::\.o::
send ^+u22f{Enter}
return

#if OtherCase()
::\.o::
send {U+022F}
return


;; Glyph: 'ȯ' Descr: LATIN SMALL LETTER O WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{o}::
send ^x8{Enter}22f{Enter}
return

#if GtkApplicationCase()
::\.{o}::
send ^+u22f{Enter}
return

#if OtherCase()
::\.{o}::
send {U+022F}
return


;; Glyph: 'Ȱ' Descr: LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\=O::
send ^x8{Enter}230{Enter}
return

#if GtkApplicationCase()
::\.\=O::
send ^+u230{Enter}
return

#if OtherCase()
::\.\=O::
send {U+0230}
return


;; Glyph: 'Ȱ' Descr: LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\={O}::
send ^x8{Enter}230{Enter}
return

#if GtkApplicationCase()
::\.\={O}::
send ^+u230{Enter}
return

#if OtherCase()
::\.\={O}::
send {U+0230}
return


;; Glyph: 'ȱ' Descr: LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\=o::
send ^x8{Enter}231{Enter}
return

#if GtkApplicationCase()
::\.\=o::
send ^+u231{Enter}
return

#if OtherCase()
::\.\=o::
send {U+0231}
return


;; Glyph: 'ȱ' Descr: LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON

#if EmacsCase() && EmacsEnabled
::\.\={o}::
send ^x8{Enter}231{Enter}
return

#if GtkApplicationCase()
::\.\={o}::
send ^+u231{Enter}
return

#if OtherCase()
::\.\={o}::
send {U+0231}
return


;; Glyph: 'Ȳ' Descr: LATIN CAPITAL LETTER Y WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=Y::
send ^x8{Enter}232{Enter}
return

#if GtkApplicationCase()
::\=Y::
send ^+u232{Enter}
return

#if OtherCase()
::\=Y::
send {U+0232}
return


;; Glyph: 'Ȳ' Descr: LATIN CAPITAL LETTER Y WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={Y}::
send ^x8{Enter}232{Enter}
return

#if GtkApplicationCase()
::\={Y}::
send ^+u232{Enter}
return

#if OtherCase()
::\={Y}::
send {U+0232}
return


;; Glyph: 'ȳ' Descr: LATIN SMALL LETTER Y WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=y::
send ^x8{Enter}233{Enter}
return

#if GtkApplicationCase()
::\=y::
send ^+u233{Enter}
return

#if OtherCase()
::\=y::
send {U+0233}
return


;; Glyph: 'ȳ' Descr: LATIN SMALL LETTER Y WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={y}::
send ^x8{Enter}233{Enter}
return

#if GtkApplicationCase()
::\={y}::
send ^+u233{Enter}
return

#if OtherCase()
::\={y}::
send {U+0233}
return


;; Glyph: 'ʰ' Descr: MODIFIER LETTER SMALL H

#if EmacsCase() && EmacsEnabled
::^h::
send ^x8{Enter}2b0{Enter}
return

#if GtkApplicationCase()
::^h::
send ^+u2b0{Enter}
return

#if OtherCase()
::^h::
send {U+02B0}
return


;; Glyph: 'ʱ' Descr: MODIFIER LETTER SMALL H WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\h hook::
send ^x8{Enter}2b1{Enter}
return

#if GtkApplicationCase()
::^\h hook::
send ^+u2b1{Enter}
return

#if OtherCase()
::^\h hook::
send {U+02B1}
return


;; Glyph: 'ʱ' Descr: MODIFIER LETTER SMALL H WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\h with hook::
send ^x8{Enter}2b1{Enter}
return

#if GtkApplicationCase()
::^\h with hook::
send ^+u2b1{Enter}
return

#if OtherCase()
::^\h with hook::
send {U+02B1}
return


;; Glyph: 'ʲ' Descr: MODIFIER LETTER SMALL J

#if EmacsCase() && EmacsEnabled
::^j::
send ^x8{Enter}2b2{Enter}
return

#if GtkApplicationCase()
::^j::
send ^+u2b2{Enter}
return

#if OtherCase()
::^j::
send {U+02B2}
return


;; Glyph: 'ʳ' Descr: MODIFIER LETTER SMALL R

#if EmacsCase() && EmacsEnabled
::^r::
send ^x8{Enter}2b3{Enter}
return

#if GtkApplicationCase()
::^r::
send ^+u2b3{Enter}
return

#if OtherCase()
::^r::
send {U+02B3}
return


;; Glyph: 'ʴ' Descr: MODIFIER LETTER SMALL TURNED R

#if EmacsCase() && EmacsEnabled
::^\turned r::
send ^x8{Enter}2b4{Enter}
return

#if GtkApplicationCase()
::^\turned r::
send ^+u2b4{Enter}
return

#if OtherCase()
::^\turned r::
send {U+02B4}
return


;; Glyph: 'ʵ' Descr: MODIFIER LETTER SMALL TURNED R WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\turned r hook::
send ^x8{Enter}2b5{Enter}
return

#if GtkApplicationCase()
::^\turned r hook::
send ^+u2b5{Enter}
return

#if OtherCase()
::^\turned r hook::
send {U+02B5}
return


;; Glyph: 'ʵ' Descr: MODIFIER LETTER SMALL TURNED R WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\turned r with hook::
send ^x8{Enter}2b5{Enter}
return

#if GtkApplicationCase()
::^\turned r with hook::
send ^+u2b5{Enter}
return

#if OtherCase()
::^\turned r with hook::
send {U+02B5}
return


;; Glyph: 'ʶ' Descr: MODIFIER LETTER SMALL CAPITAL INVERTED R

#if EmacsCase() && EmacsEnabled
::^\capital inverted r::
send ^x8{Enter}2b6{Enter}
return

#if GtkApplicationCase()
::^\capital inverted r::
send ^+u2b6{Enter}
return

#if OtherCase()
::^\capital inverted r::
send {U+02B6}
return


;; Glyph: 'ʷ' Descr: MODIFIER LETTER SMALL W

#if EmacsCase() && EmacsEnabled
::^w::
send ^x8{Enter}2b7{Enter}
return

#if GtkApplicationCase()
::^w::
send ^+u2b7{Enter}
return

#if OtherCase()
::^w::
send {U+02B7}
return


;; Glyph: 'ʸ' Descr: MODIFIER LETTER SMALL Y

#if EmacsCase() && EmacsEnabled
::^y::
send ^x8{Enter}2b8{Enter}
return

#if GtkApplicationCase()
::^y::
send ^+u2b8{Enter}
return

#if OtherCase()
::^y::
send {U+02B8}
return


;; Glyph: 'ˇ' Descr: CARON

#if EmacsCase() && EmacsEnabled
::\v{}::
send ^x8{Enter}2c7{Enter}
return

#if GtkApplicationCase()
::\v{}::
send ^+u2c7{Enter}
return

#if OtherCase()
::\v{}::
send {U+02C7}
return


;; Glyph: '˘' Descr: BREVE

#if EmacsCase() && EmacsEnabled
::\u{}::
send ^x8{Enter}2d8{Enter}
return

#if GtkApplicationCase()
::\u{}::
send ^+u2d8{Enter}
return

#if OtherCase()
::\u{}::
send {U+02D8}
return


;; Glyph: '˙' Descr: DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{}::
send ^x8{Enter}2d9{Enter}
return

#if GtkApplicationCase()
::\.{}::
send ^+u2d9{Enter}
return

#if OtherCase()
::\.{}::
send {U+02D9}
return


;; Glyph: '˛' Descr: OGONEK

#if EmacsCase() && EmacsEnabled
::\k{}::
send ^x8{Enter}2db{Enter}
return

#if GtkApplicationCase()
::\k{}::
send ^+u2db{Enter}
return

#if OtherCase()
::\k{}::
send {U+02DB}
return


;; Glyph: '˜' Descr: SMALL TILDE

#if EmacsCase() && EmacsEnabled
::\~{}::
send ^x8{Enter}2dc{Enter}
return

#if GtkApplicationCase()
::\~{}::
send ^+u2dc{Enter}
return

#if OtherCase()
::\~{}::
send {U+02DC}
return


;; Glyph: '˝' Descr: DOUBLE ACUTE ACCENT

#if EmacsCase() && EmacsEnabled
::\H{}::
send ^x8{Enter}2dd{Enter}
return

#if GtkApplicationCase()
::\H{}::
send ^+u2dd{Enter}
return

#if OtherCase()
::\H{}::
send {U+02DD}
return


;; Glyph: 'ˠ' Descr: MODIFIER LETTER SMALL GAMMA

#if EmacsCase() && EmacsEnabled
::^\gamma::
send ^x8{Enter}2e0{Enter}
return

#if GtkApplicationCase()
::^\gamma::
send ^+u2e0{Enter}
return

#if OtherCase()
::^\gamma::
send {U+02E0}
return


;; Glyph: 'ˡ' Descr: MODIFIER LETTER SMALL L

#if EmacsCase() && EmacsEnabled
::^l::
send ^x8{Enter}2e1{Enter}
return

#if GtkApplicationCase()
::^l::
send ^+u2e1{Enter}
return

#if OtherCase()
::^l::
send {U+02E1}
return


;; Glyph: 'ˢ' Descr: MODIFIER LETTER SMALL S

#if EmacsCase() && EmacsEnabled
::^s::
send ^x8{Enter}2e2{Enter}
return

#if GtkApplicationCase()
::^s::
send ^+u2e2{Enter}
return

#if OtherCase()
::^s::
send {U+02E2}
return


;; Glyph: 'ˣ' Descr: MODIFIER LETTER SMALL X

#if EmacsCase() && EmacsEnabled
::^x::
send ^x8{Enter}2e3{Enter}
return

#if GtkApplicationCase()
::^x::
send ^+u2e3{Enter}
return

#if OtherCase()
::^x::
send {U+02E3}
return


;; Glyph: 'ˤ' Descr: MODIFIER LETTER SMALL REVERSED GLOTTAL STOP

#if EmacsCase() && EmacsEnabled
::^\reversed glottal stop::
send ^x8{Enter}2e4{Enter}
return

#if GtkApplicationCase()
::^\reversed glottal stop::
send ^+u2e4{Enter}
return

#if OtherCase()
::^\reversed glottal stop::
send {U+02E4}
return


;; Glyph: '̀' Descr: COMBINING GRAVE ACCENT

#if EmacsCase() && EmacsEnabled
::\``::
send ^x8{Enter}300{Enter}
return

#if GtkApplicationCase()
::\``::
send ^+u300{Enter}
return

#if OtherCase()
::\``::
send {U+0300}
return


;; Glyph: '́' Descr: COMBINING ACUTE ACCENT

#if EmacsCase() && EmacsEnabled
::\'::
send ^x8{Enter}301{Enter}
return

#if GtkApplicationCase()
::\'::
send ^+u301{Enter}
return

#if OtherCase()
::\'::
send {U+0301}
return


;; Glyph: '̂' Descr: COMBINING CIRCUMFLEX ACCENT

#if EmacsCase() && EmacsEnabled
::\^::
send ^x8{Enter}302{Enter}
return

#if GtkApplicationCase()
::\^::
send ^+u302{Enter}
return

#if OtherCase()
::\^::
send {U+0302}
return


;; Glyph: '̃' Descr: COMBINING TILDE

#if EmacsCase() && EmacsEnabled
::\~::
send ^x8{Enter}303{Enter}
return

#if GtkApplicationCase()
::\~::
send ^+u303{Enter}
return

#if OtherCase()
::\~::
send {U+0303}
return


;; Glyph: '̄' Descr: COMBINING MACRON

#if EmacsCase() && EmacsEnabled
::\=::
send ^x8{Enter}304{Enter}
return

#if GtkApplicationCase()
::\=::
send ^+u304{Enter}
return

#if OtherCase()
::\=::
send {U+0304}
return


;; Glyph: '̆' Descr: COMBINING BREVE

#if EmacsCase() && EmacsEnabled
::\u::
send ^x8{Enter}306{Enter}
return

#if GtkApplicationCase()
::\u::
send ^+u306{Enter}
return

#if OtherCase()
::\u::
send {U+0306}
return


;; Glyph: '̇' Descr: COMBINING DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.::
send ^x8{Enter}307{Enter}
return

#if GtkApplicationCase()
::\.::
send ^+u307{Enter}
return

#if OtherCase()
::\.::
send {U+0307}
return


;; Glyph: '̈' Descr: COMBINING DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"::
send ^x8{Enter}308{Enter}
return

#if GtkApplicationCase()
::\"::
send ^+u308{Enter}
return

#if OtherCase()
::\"::
send {U+0308}
return


;; Glyph: '̋' Descr: COMBINING DOUBLE ACUTE ACCENT

#if EmacsCase() && EmacsEnabled
::\H::
send ^x8{Enter}30b{Enter}
return

#if GtkApplicationCase()
::\H::
send ^+u30b{Enter}
return

#if OtherCase()
::\H::
send {U+030B}
return


;; Glyph: '̌' Descr: COMBINING CARON

#if EmacsCase() && EmacsEnabled
::\v::
send ^x8{Enter}30c{Enter}
return

#if GtkApplicationCase()
::\v::
send ^+u30c{Enter}
return

#if OtherCase()
::\v::
send {U+030C}
return


;; Glyph: '̣' Descr: COMBINING DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d::
send ^x8{Enter}323{Enter}
return

#if GtkApplicationCase()
::\d::
send ^+u323{Enter}
return

#if OtherCase()
::\d::
send {U+0323}
return


;; Glyph: '̧' Descr: COMBINING CEDILLA

#if EmacsCase() && EmacsEnabled
::\c::
send ^x8{Enter}327{Enter}
return

#if GtkApplicationCase()
::\c::
send ^+u327{Enter}
return

#if OtherCase()
::\c::
send {U+0327}
return


;; Glyph: '̨' Descr: COMBINING OGONEK

#if EmacsCase() && EmacsEnabled
::\k::
send ^x8{Enter}328{Enter}
return

#if GtkApplicationCase()
::\k::
send ^+u328{Enter}
return

#if OtherCase()
::\k::
send {U+0328}
return


;; Glyph: '̱' Descr: COMBINING MACRON BELOW

#if EmacsCase() && EmacsEnabled
::\b::
send ^x8{Enter}331{Enter}
return

#if GtkApplicationCase()
::\b::
send ^+u331{Enter}
return

#if OtherCase()
::\b::
send {U+0331}
return


;; Glyph: '̸' Descr: COMBINING LONG SOLIDUS OVERLAY

#if EmacsCase() && EmacsEnabled
::\not::
send ^x8{Enter}338{Enter}
return

#if GtkApplicationCase()
::\not::
send ^+u338{Enter}
return

#if OtherCase()
::\not::
send {U+0338}
return


;; Glyph: 'Ͱ' Descr: GREEK CAPITAL LETTER HETA

#if EmacsCase() && EmacsEnabled
::\Heta::
send ^x8{Enter}370{Enter}
return

#if GtkApplicationCase()
::\Heta::
send ^+u370{Enter}
return

#if OtherCase()
::\Heta::
send {U+0370}
return


;; Glyph: 'ͱ' Descr: GREEK SMALL LETTER HETA

#if EmacsCase() && EmacsEnabled
::\heta::
send ^x8{Enter}371{Enter}
return

#if GtkApplicationCase()
::\heta::
send ^+u371{Enter}
return

#if OtherCase()
::\heta::
send {U+0371}
return


;; Glyph: 'Ϳ' Descr: GREEK CAPITAL LETTER YOT

#if EmacsCase() && EmacsEnabled
::\Yot::
send ^x8{Enter}37f{Enter}
return

#if GtkApplicationCase()
::\Yot::
send ^+u37f{Enter}
return

#if OtherCase()
::\Yot::
send {U+037F}
return


;; Glyph: 'Α' Descr: GREEK CAPITAL LETTER ALPHA

#if EmacsCase() && EmacsEnabled
::\Alpha::
send ^x8{Enter}391{Enter}
return

#if GtkApplicationCase()
::\Alpha::
send ^+u391{Enter}
return

#if OtherCase()
::\Alpha::
send {U+0391}
return


;; Glyph: 'Β' Descr: GREEK CAPITAL LETTER BETA

#if EmacsCase() && EmacsEnabled
::\Beta::
send ^x8{Enter}392{Enter}
return

#if GtkApplicationCase()
::\Beta::
send ^+u392{Enter}
return

#if OtherCase()
::\Beta::
send {U+0392}
return


;; Glyph: 'Γ' Descr: GREEK CAPITAL LETTER GAMMA

#if EmacsCase() && EmacsEnabled
::\Gamma::
send ^x8{Enter}393{Enter}
return

#if GtkApplicationCase()
::\Gamma::
send ^+u393{Enter}
return

#if OtherCase()
::\Gamma::
send {U+0393}
return


;; Glyph: 'Δ' Descr: GREEK CAPITAL LETTER DELTA

#if EmacsCase() && EmacsEnabled
::\Delta::
send ^x8{Enter}394{Enter}
return

#if GtkApplicationCase()
::\Delta::
send ^+u394{Enter}
return

#if OtherCase()
::\Delta::
send {U+0394}
return


;; Glyph: 'Ε' Descr: GREEK CAPITAL LETTER EPSILON

#if EmacsCase() && EmacsEnabled
::\Epsilon::
send ^x8{Enter}395{Enter}
return

#if GtkApplicationCase()
::\Epsilon::
send ^+u395{Enter}
return

#if OtherCase()
::\Epsilon::
send {U+0395}
return


;; Glyph: 'Ζ' Descr: GREEK CAPITAL LETTER ZETA

#if EmacsCase() && EmacsEnabled
::\Zeta::
send ^x8{Enter}396{Enter}
return

#if GtkApplicationCase()
::\Zeta::
send ^+u396{Enter}
return

#if OtherCase()
::\Zeta::
send {U+0396}
return


;; Glyph: 'Η' Descr: GREEK CAPITAL LETTER ETA

#if EmacsCase() && EmacsEnabled
::\Eta::
send ^x8{Enter}397{Enter}
return

#if GtkApplicationCase()
::\Eta::
send ^+u397{Enter}
return

#if OtherCase()
::\Eta::
send {U+0397}
return


;; Glyph: 'Θ' Descr: GREEK CAPITAL LETTER THETA

#if EmacsCase() && EmacsEnabled
::\Theta::
send ^x8{Enter}398{Enter}
return

#if GtkApplicationCase()
::\Theta::
send ^+u398{Enter}
return

#if OtherCase()
::\Theta::
send {U+0398}
return


;; Glyph: 'Ι' Descr: GREEK CAPITAL LETTER IOTA

#if EmacsCase() && EmacsEnabled
::\Iota::
send ^x8{Enter}399{Enter}
return

#if GtkApplicationCase()
::\Iota::
send ^+u399{Enter}
return

#if OtherCase()
::\Iota::
send {U+0399}
return


;; Glyph: 'Κ' Descr: GREEK CAPITAL LETTER KAPPA

#if EmacsCase() && EmacsEnabled
::\Kappa::
send ^x8{Enter}39a{Enter}
return

#if GtkApplicationCase()
::\Kappa::
send ^+u39a{Enter}
return

#if OtherCase()
::\Kappa::
send {U+039A}
return


;; Glyph: 'Λ' Descr: GREEK CAPITAL LETTER LAMDA

#if EmacsCase() && EmacsEnabled
::\Lambda::
send ^x8{Enter}39b{Enter}
return

#if GtkApplicationCase()
::\Lambda::
send ^+u39b{Enter}
return

#if OtherCase()
::\Lambda::
send {U+039B}
return


;; Glyph: 'Λ' Descr: GREEK CAPITAL LETTER LAMDA

#if EmacsCase() && EmacsEnabled
::\Lamda::
send ^x8{Enter}39b{Enter}
return

#if GtkApplicationCase()
::\Lamda::
send ^+u39b{Enter}
return

#if OtherCase()
::\Lamda::
send {U+039B}
return


;; Glyph: 'Μ' Descr: GREEK CAPITAL LETTER MU

#if EmacsCase() && EmacsEnabled
::\Mu::
send ^x8{Enter}39c{Enter}
return

#if GtkApplicationCase()
::\Mu::
send ^+u39c{Enter}
return

#if OtherCase()
::\Mu::
send {U+039C}
return


;; Glyph: 'Ν' Descr: GREEK CAPITAL LETTER NU

#if EmacsCase() && EmacsEnabled
::\Nu::
send ^x8{Enter}39d{Enter}
return

#if GtkApplicationCase()
::\Nu::
send ^+u39d{Enter}
return

#if OtherCase()
::\Nu::
send {U+039D}
return


;; Glyph: 'Ξ' Descr: GREEK CAPITAL LETTER XI

#if EmacsCase() && EmacsEnabled
::\Xi::
send ^x8{Enter}39e{Enter}
return

#if GtkApplicationCase()
::\Xi::
send ^+u39e{Enter}
return

#if OtherCase()
::\Xi::
send {U+039E}
return


;; Glyph: 'Ο' Descr: GREEK CAPITAL LETTER OMICRON

#if EmacsCase() && EmacsEnabled
::\Omicron::
send ^x8{Enter}39f{Enter}
return

#if GtkApplicationCase()
::\Omicron::
send ^+u39f{Enter}
return

#if OtherCase()
::\Omicron::
send {U+039F}
return


;; Glyph: 'Π' Descr: GREEK CAPITAL LETTER PI

#if EmacsCase() && EmacsEnabled
::\Pi::
send ^x8{Enter}3a0{Enter}
return

#if GtkApplicationCase()
::\Pi::
send ^+u3a0{Enter}
return

#if OtherCase()
::\Pi::
send {U+03A0}
return


;; Glyph: 'Ρ' Descr: GREEK CAPITAL LETTER RHO

#if EmacsCase() && EmacsEnabled
::\Rho::
send ^x8{Enter}3a1{Enter}
return

#if GtkApplicationCase()
::\Rho::
send ^+u3a1{Enter}
return

#if OtherCase()
::\Rho::
send {U+03A1}
return


;; Glyph: 'Σ' Descr: GREEK CAPITAL LETTER SIGMA

#if EmacsCase() && EmacsEnabled
::\Sigma::
send ^x8{Enter}3a3{Enter}
return

#if GtkApplicationCase()
::\Sigma::
send ^+u3a3{Enter}
return

#if OtherCase()
::\Sigma::
send {U+03A3}
return


;; Glyph: 'Τ' Descr: GREEK CAPITAL LETTER TAU

#if EmacsCase() && EmacsEnabled
::\Tau::
send ^x8{Enter}3a4{Enter}
return

#if GtkApplicationCase()
::\Tau::
send ^+u3a4{Enter}
return

#if OtherCase()
::\Tau::
send {U+03A4}
return


;; Glyph: 'Υ' Descr: GREEK CAPITAL LETTER UPSILON

#if EmacsCase() && EmacsEnabled
::\Upsilon::
send ^x8{Enter}3a5{Enter}
return

#if GtkApplicationCase()
::\Upsilon::
send ^+u3a5{Enter}
return

#if OtherCase()
::\Upsilon::
send {U+03A5}
return


;; Glyph: 'Φ' Descr: GREEK CAPITAL LETTER PHI

#if EmacsCase() && EmacsEnabled
::\Phi::
send ^x8{Enter}3a6{Enter}
return

#if GtkApplicationCase()
::\Phi::
send ^+u3a6{Enter}
return

#if OtherCase()
::\Phi::
send {U+03A6}
return


;; Glyph: 'Χ' Descr: GREEK CAPITAL LETTER CHI

#if EmacsCase() && EmacsEnabled
::\Chi::
send ^x8{Enter}3a7{Enter}
return

#if GtkApplicationCase()
::\Chi::
send ^+u3a7{Enter}
return

#if OtherCase()
::\Chi::
send {U+03A7}
return


;; Glyph: 'Ψ' Descr: GREEK CAPITAL LETTER PSI

#if EmacsCase() && EmacsEnabled
::\Psi::
send ^x8{Enter}3a8{Enter}
return

#if GtkApplicationCase()
::\Psi::
send ^+u3a8{Enter}
return

#if OtherCase()
::\Psi::
send {U+03A8}
return


;; Glyph: 'Ω' Descr: GREEK CAPITAL LETTER OMEGA

#if EmacsCase() && EmacsEnabled
::\Omega::
send ^x8{Enter}3a9{Enter}
return

#if GtkApplicationCase()
::\Omega::
send ^+u3a9{Enter}
return

#if OtherCase()
::\Omega::
send {U+03A9}
return


;; Glyph: 'α' Descr: GREEK SMALL LETTER ALPHA

#if EmacsCase() && EmacsEnabled
::\alpha::
send ^x8{Enter}3b1{Enter}
return

#if GtkApplicationCase()
::\alpha::
send ^+u3b1{Enter}
return

#if OtherCase()
::\alpha::
send {U+03B1}
return


;; Glyph: 'β' Descr: GREEK SMALL LETTER BETA

#if EmacsCase() && EmacsEnabled
::\beta::
send ^x8{Enter}3b2{Enter}
return

#if GtkApplicationCase()
::\beta::
send ^+u3b2{Enter}
return

#if OtherCase()
::\beta::
send {U+03B2}
return


;; Glyph: 'γ' Descr: GREEK SMALL LETTER GAMMA

#if EmacsCase() && EmacsEnabled
::\gamma::
send ^x8{Enter}3b3{Enter}
return

#if GtkApplicationCase()
::\gamma::
send ^+u3b3{Enter}
return

#if OtherCase()
::\gamma::
send {U+03B3}
return


;; Glyph: 'δ' Descr: GREEK SMALL LETTER DELTA

#if EmacsCase() && EmacsEnabled
::\delta::
send ^x8{Enter}3b4{Enter}
return

#if GtkApplicationCase()
::\delta::
send ^+u3b4{Enter}
return

#if OtherCase()
::\delta::
send {U+03B4}
return


;; Glyph: 'ε' Descr: GREEK SMALL LETTER EPSILON

#if EmacsCase() && EmacsEnabled
::\varepsilon::
send ^x8{Enter}3b5{Enter}
return

#if GtkApplicationCase()
::\varepsilon::
send ^+u3b5{Enter}
return

#if OtherCase()
::\varepsilon::
send {U+03B5}
return


;; Glyph: 'ζ' Descr: GREEK SMALL LETTER ZETA

#if EmacsCase() && EmacsEnabled
::\zeta::
send ^x8{Enter}3b6{Enter}
return

#if GtkApplicationCase()
::\zeta::
send ^+u3b6{Enter}
return

#if OtherCase()
::\zeta::
send {U+03B6}
return


;; Glyph: 'η' Descr: GREEK SMALL LETTER ETA

#if EmacsCase() && EmacsEnabled
::\eta::
send ^x8{Enter}3b7{Enter}
return

#if GtkApplicationCase()
::\eta::
send ^+u3b7{Enter}
return

#if OtherCase()
::\eta::
send {U+03B7}
return


;; Glyph: 'θ' Descr: GREEK SMALL LETTER THETA

#if EmacsCase() && EmacsEnabled
::\theta::
send ^x8{Enter}3b8{Enter}
return

#if GtkApplicationCase()
::\theta::
send ^+u3b8{Enter}
return

#if OtherCase()
::\theta::
send {U+03B8}
return


;; Glyph: 'ι' Descr: GREEK SMALL LETTER IOTA

#if EmacsCase() && EmacsEnabled
::\iota::
send ^x8{Enter}3b9{Enter}
return

#if GtkApplicationCase()
::\iota::
send ^+u3b9{Enter}
return

#if OtherCase()
::\iota::
send {U+03B9}
return


;; Glyph: 'κ' Descr: GREEK SMALL LETTER KAPPA

#if EmacsCase() && EmacsEnabled
::\kappa::
send ^x8{Enter}3ba{Enter}
return

#if GtkApplicationCase()
::\kappa::
send ^+u3ba{Enter}
return

#if OtherCase()
::\kappa::
send {U+03BA}
return


;; Glyph: 'λ' Descr: GREEK SMALL LETTER LAMDA

#if EmacsCase() && EmacsEnabled
::\lambda::
send ^x8{Enter}3bb{Enter}
return

#if GtkApplicationCase()
::\lambda::
send ^+u3bb{Enter}
return

#if OtherCase()
::\lambda::
send {U+03BB}
return


;; Glyph: 'λ' Descr: GREEK SMALL LETTER LAMDA

#if EmacsCase() && EmacsEnabled
::\lamda::
send ^x8{Enter}3bb{Enter}
return

#if GtkApplicationCase()
::\lamda::
send ^+u3bb{Enter}
return

#if OtherCase()
::\lamda::
send {U+03BB}
return


;; Glyph: 'μ' Descr: GREEK SMALL LETTER MU

#if EmacsCase() && EmacsEnabled
::\mu::
send ^x8{Enter}3bc{Enter}
return

#if GtkApplicationCase()
::\mu::
send ^+u3bc{Enter}
return

#if OtherCase()
::\mu::
send {U+03BC}
return


;; Glyph: 'ν' Descr: GREEK SMALL LETTER NU

#if EmacsCase() && EmacsEnabled
::\nu::
send ^x8{Enter}3bd{Enter}
return

#if GtkApplicationCase()
::\nu::
send ^+u3bd{Enter}
return

#if OtherCase()
::\nu::
send {U+03BD}
return


;; Glyph: 'ξ' Descr: GREEK SMALL LETTER XI

#if EmacsCase() && EmacsEnabled
::\xi::
send ^x8{Enter}3be{Enter}
return

#if GtkApplicationCase()
::\xi::
send ^+u3be{Enter}
return

#if OtherCase()
::\xi::
send {U+03BE}
return


;; Glyph: 'ο' Descr: GREEK SMALL LETTER OMICRON

#if EmacsCase() && EmacsEnabled
::\omicron::
send ^x8{Enter}3bf{Enter}
return

#if GtkApplicationCase()
::\omicron::
send ^+u3bf{Enter}
return

#if OtherCase()
::\omicron::
send {U+03BF}
return


;; Glyph: 'π' Descr: GREEK SMALL LETTER PI

#if EmacsCase() && EmacsEnabled
::\pi::
send ^x8{Enter}3c0{Enter}
return

#if GtkApplicationCase()
::\pi::
send ^+u3c0{Enter}
return

#if OtherCase()
::\pi::
send {U+03C0}
return


;; Glyph: 'ρ' Descr: GREEK SMALL LETTER RHO

#if EmacsCase() && EmacsEnabled
::\rho::
send ^x8{Enter}3c1{Enter}
return

#if GtkApplicationCase()
::\rho::
send ^+u3c1{Enter}
return

#if OtherCase()
::\rho::
send {U+03C1}
return


;; Glyph: 'ς' Descr: GREEK SMALL LETTER FINAL SIGMA

#if EmacsCase() && EmacsEnabled
::\varsigma::
send ^x8{Enter}3c2{Enter}
return

#if GtkApplicationCase()
::\varsigma::
send ^+u3c2{Enter}
return

#if OtherCase()
::\varsigma::
send {U+03C2}
return


;; Glyph: 'σ' Descr: GREEK SMALL LETTER SIGMA

#if EmacsCase() && EmacsEnabled
::\sigma::
send ^x8{Enter}3c3{Enter}
return

#if GtkApplicationCase()
::\sigma::
send ^+u3c3{Enter}
return

#if OtherCase()
::\sigma::
send {U+03C3}
return


;; Glyph: 'τ' Descr: GREEK SMALL LETTER TAU

#if EmacsCase() && EmacsEnabled
::\tau::
send ^x8{Enter}3c4{Enter}
return

#if GtkApplicationCase()
::\tau::
send ^+u3c4{Enter}
return

#if OtherCase()
::\tau::
send {U+03C4}
return


;; Glyph: 'υ' Descr: GREEK SMALL LETTER UPSILON

#if EmacsCase() && EmacsEnabled
::\upsilon::
send ^x8{Enter}3c5{Enter}
return

#if GtkApplicationCase()
::\upsilon::
send ^+u3c5{Enter}
return

#if OtherCase()
::\upsilon::
send {U+03C5}
return


;; Glyph: 'φ' Descr: GREEK SMALL LETTER PHI

#if EmacsCase() && EmacsEnabled
::\phi::
send ^x8{Enter}3c6{Enter}
return

#if GtkApplicationCase()
::\phi::
send ^+u3c6{Enter}
return

#if OtherCase()
::\phi::
send {U+03C6}
return


;; Glyph: 'φ' Descr: GREEK SMALL LETTER PHI

#if EmacsCase() && EmacsEnabled
::\straightphi::
send ^x8{Enter}3c6{Enter}
return

#if GtkApplicationCase()
::\straightphi::
send ^+u3c6{Enter}
return

#if OtherCase()
::\straightphi::
send {U+03C6}
return


;; Glyph: 'χ' Descr: GREEK SMALL LETTER CHI

#if EmacsCase() && EmacsEnabled
::\chi::
send ^x8{Enter}3c7{Enter}
return

#if GtkApplicationCase()
::\chi::
send ^+u3c7{Enter}
return

#if OtherCase()
::\chi::
send {U+03C7}
return


;; Glyph: 'ψ' Descr: GREEK SMALL LETTER PSI

#if EmacsCase() && EmacsEnabled
::\psi::
send ^x8{Enter}3c8{Enter}
return

#if GtkApplicationCase()
::\psi::
send ^+u3c8{Enter}
return

#if OtherCase()
::\psi::
send {U+03C8}
return


;; Glyph: 'ω' Descr: GREEK SMALL LETTER OMEGA

#if EmacsCase() && EmacsEnabled
::\omega::
send ^x8{Enter}3c9{Enter}
return

#if GtkApplicationCase()
::\omega::
send ^+u3c9{Enter}
return

#if OtherCase()
::\omega::
send {U+03C9}
return


;; Glyph: 'ϐ' Descr: GREEK BETA SYMBOL

#if EmacsCase() && EmacsEnabled
::\varbeta::
send ^x8{Enter}3d0{Enter}
return

#if GtkApplicationCase()
::\varbeta::
send ^+u3d0{Enter}
return

#if OtherCase()
::\varbeta::
send {U+03D0}
return


;; Glyph: 'ϑ' Descr: GREEK THETA SYMBOL

#if EmacsCase() && EmacsEnabled
::\vartheta::
send ^x8{Enter}3d1{Enter}
return

#if GtkApplicationCase()
::\vartheta::
send ^+u3d1{Enter}
return

#if OtherCase()
::\vartheta::
send {U+03D1}
return


;; Glyph: 'ϕ' Descr: GREEK PHI SYMBOL

#if EmacsCase() && EmacsEnabled
::\varphi::
send ^x8{Enter}3d5{Enter}
return

#if GtkApplicationCase()
::\varphi::
send ^+u3d5{Enter}
return

#if OtherCase()
::\varphi::
send {U+03D5}
return


;; Glyph: 'ϖ' Descr: GREEK PI SYMBOL

#if EmacsCase() && EmacsEnabled
::\varpi::
send ^x8{Enter}3d6{Enter}
return

#if GtkApplicationCase()
::\varpi::
send ^+u3d6{Enter}
return

#if OtherCase()
::\varpi::
send {U+03D6}
return


;; Glyph: 'ϗ' Descr: GREEK KAI SYMBOL

#if EmacsCase() && EmacsEnabled
::\varkai::
send ^x8{Enter}3d7{Enter}
return

#if GtkApplicationCase()
::\varkai::
send ^+u3d7{Enter}
return

#if OtherCase()
::\varkai::
send {U+03D7}
return


;; Glyph: 'Ϛ' Descr: GREEK LETTER STIGMA

#if EmacsCase() && EmacsEnabled
::\Stigma::
send ^x8{Enter}3da{Enter}
return

#if GtkApplicationCase()
::\Stigma::
send ^+u3da{Enter}
return

#if OtherCase()
::\Stigma::
send {U+03DA}
return


;; Glyph: 'ϛ' Descr: GREEK SMALL LETTER STIGMA

#if EmacsCase() && EmacsEnabled
::\stigma::
send ^x8{Enter}3db{Enter}
return

#if GtkApplicationCase()
::\stigma::
send ^+u3db{Enter}
return

#if OtherCase()
::\stigma::
send {U+03DB}
return


;; Glyph: 'Ϝ' Descr: GREEK LETTER DIGAMMA

#if EmacsCase() && EmacsEnabled
::\Digamma::
send ^x8{Enter}3dc{Enter}
return

#if GtkApplicationCase()
::\Digamma::
send ^+u3dc{Enter}
return

#if OtherCase()
::\Digamma::
send {U+03DC}
return


;; Glyph: 'ϝ' Descr: GREEK SMALL LETTER DIGAMMA

#if EmacsCase() && EmacsEnabled
::\digamma::
send ^x8{Enter}3dd{Enter}
return

#if GtkApplicationCase()
::\digamma::
send ^+u3dd{Enter}
return

#if OtherCase()
::\digamma::
send {U+03DD}
return


;; Glyph: 'Ϟ' Descr: GREEK LETTER KOPPA

#if EmacsCase() && EmacsEnabled
::\Koppa::
send ^x8{Enter}3de{Enter}
return

#if GtkApplicationCase()
::\Koppa::
send ^+u3de{Enter}
return

#if OtherCase()
::\Koppa::
send {U+03DE}
return


;; Glyph: 'ϟ' Descr: GREEK SMALL LETTER KOPPA

#if EmacsCase() && EmacsEnabled
::\koppa::
send ^x8{Enter}3df{Enter}
return

#if GtkApplicationCase()
::\koppa::
send ^+u3df{Enter}
return

#if OtherCase()
::\koppa::
send {U+03DF}
return


;; Glyph: 'Ϡ' Descr: GREEK LETTER SAMPI

#if EmacsCase() && EmacsEnabled
::\Sampi::
send ^x8{Enter}3e0{Enter}
return

#if GtkApplicationCase()
::\Sampi::
send ^+u3e0{Enter}
return

#if OtherCase()
::\Sampi::
send {U+03E0}
return


;; Glyph: 'ϡ' Descr: GREEK SMALL LETTER SAMPI

#if EmacsCase() && EmacsEnabled
::\sampi::
send ^x8{Enter}3e1{Enter}
return

#if GtkApplicationCase()
::\sampi::
send ^+u3e1{Enter}
return

#if OtherCase()
::\sampi::
send {U+03E1}
return


;; Glyph: 'Ϣ' Descr: COPTIC CAPITAL LETTER SHEI

#if EmacsCase() && EmacsEnabled
::\Shei::
send ^x8{Enter}3e2{Enter}
return

#if GtkApplicationCase()
::\Shei::
send ^+u3e2{Enter}
return

#if OtherCase()
::\Shei::
send {U+03E2}
return


;; Glyph: 'ϣ' Descr: COPTIC SMALL LETTER SHEI

#if EmacsCase() && EmacsEnabled
::\shei::
send ^x8{Enter}3e3{Enter}
return

#if GtkApplicationCase()
::\shei::
send ^+u3e3{Enter}
return

#if OtherCase()
::\shei::
send {U+03E3}
return


;; Glyph: 'Ϥ' Descr: COPTIC CAPITAL LETTER FEI

#if EmacsCase() && EmacsEnabled
::\Fei::
send ^x8{Enter}3e4{Enter}
return

#if GtkApplicationCase()
::\Fei::
send ^+u3e4{Enter}
return

#if OtherCase()
::\Fei::
send {U+03E4}
return


;; Glyph: 'ϥ' Descr: COPTIC SMALL LETTER FEI

#if EmacsCase() && EmacsEnabled
::\fei::
send ^x8{Enter}3e5{Enter}
return

#if GtkApplicationCase()
::\fei::
send ^+u3e5{Enter}
return

#if OtherCase()
::\fei::
send {U+03E5}
return


;; Glyph: 'Ϧ' Descr: COPTIC CAPITAL LETTER KHEI

#if EmacsCase() && EmacsEnabled
::\Khei::
send ^x8{Enter}3e6{Enter}
return

#if GtkApplicationCase()
::\Khei::
send ^+u3e6{Enter}
return

#if OtherCase()
::\Khei::
send {U+03E6}
return


;; Glyph: 'ϧ' Descr: COPTIC SMALL LETTER KHEI

#if EmacsCase() && EmacsEnabled
::\khei::
send ^x8{Enter}3e7{Enter}
return

#if GtkApplicationCase()
::\khei::
send ^+u3e7{Enter}
return

#if OtherCase()
::\khei::
send {U+03E7}
return


;; Glyph: 'Ϩ' Descr: COPTIC CAPITAL LETTER HORI

#if EmacsCase() && EmacsEnabled
::\Hori::
send ^x8{Enter}3e8{Enter}
return

#if GtkApplicationCase()
::\Hori::
send ^+u3e8{Enter}
return

#if OtherCase()
::\Hori::
send {U+03E8}
return


;; Glyph: 'ϩ' Descr: COPTIC SMALL LETTER HORI

#if EmacsCase() && EmacsEnabled
::\hori::
send ^x8{Enter}3e9{Enter}
return

#if GtkApplicationCase()
::\hori::
send ^+u3e9{Enter}
return

#if OtherCase()
::\hori::
send {U+03E9}
return


;; Glyph: 'Ϫ' Descr: COPTIC CAPITAL LETTER GANGIA

#if EmacsCase() && EmacsEnabled
::\Gangia::
send ^x8{Enter}3ea{Enter}
return

#if GtkApplicationCase()
::\Gangia::
send ^+u3ea{Enter}
return

#if OtherCase()
::\Gangia::
send {U+03EA}
return


;; Glyph: 'ϫ' Descr: COPTIC SMALL LETTER GANGIA

#if EmacsCase() && EmacsEnabled
::\gangia::
send ^x8{Enter}3eb{Enter}
return

#if GtkApplicationCase()
::\gangia::
send ^+u3eb{Enter}
return

#if OtherCase()
::\gangia::
send {U+03EB}
return


;; Glyph: 'Ϭ' Descr: COPTIC CAPITAL LETTER SHIMA

#if EmacsCase() && EmacsEnabled
::\Shima::
send ^x8{Enter}3ec{Enter}
return

#if GtkApplicationCase()
::\Shima::
send ^+u3ec{Enter}
return

#if OtherCase()
::\Shima::
send {U+03EC}
return


;; Glyph: 'ϭ' Descr: COPTIC SMALL LETTER SHIMA

#if EmacsCase() && EmacsEnabled
::\shima::
send ^x8{Enter}3ed{Enter}
return

#if GtkApplicationCase()
::\shima::
send ^+u3ed{Enter}
return

#if OtherCase()
::\shima::
send {U+03ED}
return


;; Glyph: 'Ϯ' Descr: COPTIC CAPITAL LETTER DEI

#if EmacsCase() && EmacsEnabled
::\Dei::
send ^x8{Enter}3ee{Enter}
return

#if GtkApplicationCase()
::\Dei::
send ^+u3ee{Enter}
return

#if OtherCase()
::\Dei::
send {U+03EE}
return


;; Glyph: 'ϯ' Descr: COPTIC SMALL LETTER DEI

#if EmacsCase() && EmacsEnabled
::\dei::
send ^x8{Enter}3ef{Enter}
return

#if GtkApplicationCase()
::\dei::
send ^+u3ef{Enter}
return

#if OtherCase()
::\dei::
send {U+03EF}
return


;; Glyph: 'ϰ' Descr: GREEK KAPPA SYMBOL

#if EmacsCase() && EmacsEnabled
::\varkappa::
send ^x8{Enter}3f0{Enter}
return

#if GtkApplicationCase()
::\varkappa::
send ^+u3f0{Enter}
return

#if OtherCase()
::\varkappa::
send {U+03F0}
return


;; Glyph: 'ϱ' Descr: GREEK RHO SYMBOL

#if EmacsCase() && EmacsEnabled
::\varrho::
send ^x8{Enter}3f1{Enter}
return

#if GtkApplicationCase()
::\varrho::
send ^+u3f1{Enter}
return

#if OtherCase()
::\varrho::
send {U+03F1}
return


;; Glyph: 'ϵ' Descr: GREEK LUNATE EPSILON SYMBOL

#if EmacsCase() && EmacsEnabled
::\epsilon::
send ^x8{Enter}3f5{Enter}
return

#if GtkApplicationCase()
::\epsilon::
send ^+u3f5{Enter}
return

#if OtherCase()
::\epsilon::
send {U+03F5}
return


;; Glyph: 'Ϸ' Descr: GREEK CAPITAL LETTER SHO

#if EmacsCase() && EmacsEnabled
::\Sho::
send ^x8{Enter}3f7{Enter}
return

#if GtkApplicationCase()
::\Sho::
send ^+u3f7{Enter}
return

#if OtherCase()
::\Sho::
send {U+03F7}
return


;; Glyph: 'ϸ' Descr: GREEK SMALL LETTER SHO

#if EmacsCase() && EmacsEnabled
::\sho::
send ^x8{Enter}3f8{Enter}
return

#if GtkApplicationCase()
::\sho::
send ^+u3f8{Enter}
return

#if OtherCase()
::\sho::
send {U+03F8}
return


;; Glyph: 'Ϻ' Descr: GREEK CAPITAL LETTER SAN

#if EmacsCase() && EmacsEnabled
::\San::
send ^x8{Enter}3fa{Enter}
return

#if GtkApplicationCase()
::\San::
send ^+u3fa{Enter}
return

#if OtherCase()
::\San::
send {U+03FA}
return


;; Glyph: 'ϻ' Descr: GREEK SMALL LETTER SAN

#if EmacsCase() && EmacsEnabled
::\san::
send ^x8{Enter}3fb{Enter}
return

#if GtkApplicationCase()
::\san::
send ^+u3fb{Enter}
return

#if OtherCase()
::\san::
send {U+03FB}
return


;; Glyph: '؋' Descr: AFGHANI SIGN

#if EmacsCase() && EmacsEnabled
::\afghani::
send ^x8{Enter}60b{Enter}
return

#if GtkApplicationCase()
::\afghani::
send ^+u60b{Enter}
return

#if OtherCase()
::\afghani::
send {U+060B}
return


;; Glyph: '฿' Descr: THAI CURRENCY SYMBOL BAHT

#if EmacsCase() && EmacsEnabled
::\textbaht::
send ^x8{Enter}e3f{Enter}
return

#if GtkApplicationCase()
::\textbaht::
send ^+ue3f{Enter}
return

#if OtherCase()
::\textbaht::
send {U+0E3F}
return


;; Glyph: 'ᴬ' Descr: MODIFIER LETTER CAPITAL A

#if EmacsCase() && EmacsEnabled
::^A::
send ^x8{Enter}1d2c{Enter}
return

#if GtkApplicationCase()
::^A::
send ^+u1d2c{Enter}
return

#if OtherCase()
::^A::
send {U+1D2C}
return


;; Glyph: 'ᴭ' Descr: MODIFIER LETTER CAPITAL AE

#if EmacsCase() && EmacsEnabled
::^\Ae::
send ^x8{Enter}1d2d{Enter}
return

#if GtkApplicationCase()
::^\Ae::
send ^+u1d2d{Enter}
return

#if OtherCase()
::^\Ae::
send {U+1D2D}
return


;; Glyph: 'ᴮ' Descr: MODIFIER LETTER CAPITAL B

#if EmacsCase() && EmacsEnabled
::^B::
send ^x8{Enter}1d2e{Enter}
return

#if GtkApplicationCase()
::^B::
send ^+u1d2e{Enter}
return

#if OtherCase()
::^B::
send {U+1D2E}
return


;; Glyph: 'ᴯ' Descr: MODIFIER LETTER CAPITAL BARRED B

#if EmacsCase() && EmacsEnabled
::^\Barred B::
send ^x8{Enter}1d2f{Enter}
return

#if GtkApplicationCase()
::^\Barred B::
send ^+u1d2f{Enter}
return

#if OtherCase()
::^\Barred B::
send {U+1D2F}
return


;; Glyph: 'ᴰ' Descr: MODIFIER LETTER CAPITAL D

#if EmacsCase() && EmacsEnabled
::^D::
send ^x8{Enter}1d30{Enter}
return

#if GtkApplicationCase()
::^D::
send ^+u1d30{Enter}
return

#if OtherCase()
::^D::
send {U+1D30}
return


;; Glyph: 'ᴱ' Descr: MODIFIER LETTER CAPITAL E

#if EmacsCase() && EmacsEnabled
::^E::
send ^x8{Enter}1d31{Enter}
return

#if GtkApplicationCase()
::^E::
send ^+u1d31{Enter}
return

#if OtherCase()
::^E::
send {U+1D31}
return


;; Glyph: 'ᴲ' Descr: MODIFIER LETTER CAPITAL REVERSED E

#if EmacsCase() && EmacsEnabled
::^\Reversed E::
send ^x8{Enter}1d32{Enter}
return

#if GtkApplicationCase()
::^\Reversed E::
send ^+u1d32{Enter}
return

#if OtherCase()
::^\Reversed E::
send {U+1D32}
return


;; Glyph: 'ᴳ' Descr: MODIFIER LETTER CAPITAL G

#if EmacsCase() && EmacsEnabled
::^G::
send ^x8{Enter}1d33{Enter}
return

#if GtkApplicationCase()
::^G::
send ^+u1d33{Enter}
return

#if OtherCase()
::^G::
send {U+1D33}
return


;; Glyph: 'ᴴ' Descr: MODIFIER LETTER CAPITAL H

#if EmacsCase() && EmacsEnabled
::^H::
send ^x8{Enter}1d34{Enter}
return

#if GtkApplicationCase()
::^H::
send ^+u1d34{Enter}
return

#if OtherCase()
::^H::
send {U+1D34}
return


;; Glyph: 'ᴵ' Descr: MODIFIER LETTER CAPITAL I

#if EmacsCase() && EmacsEnabled
::^I::
send ^x8{Enter}1d35{Enter}
return

#if GtkApplicationCase()
::^I::
send ^+u1d35{Enter}
return

#if OtherCase()
::^I::
send {U+1D35}
return


;; Glyph: 'ᴶ' Descr: MODIFIER LETTER CAPITAL J

#if EmacsCase() && EmacsEnabled
::^J::
send ^x8{Enter}1d36{Enter}
return

#if GtkApplicationCase()
::^J::
send ^+u1d36{Enter}
return

#if OtherCase()
::^J::
send {U+1D36}
return


;; Glyph: 'ᴷ' Descr: MODIFIER LETTER CAPITAL K

#if EmacsCase() && EmacsEnabled
::^K::
send ^x8{Enter}1d37{Enter}
return

#if GtkApplicationCase()
::^K::
send ^+u1d37{Enter}
return

#if OtherCase()
::^K::
send {U+1D37}
return


;; Glyph: 'ᴸ' Descr: MODIFIER LETTER CAPITAL L

#if EmacsCase() && EmacsEnabled
::^L::
send ^x8{Enter}1d38{Enter}
return

#if GtkApplicationCase()
::^L::
send ^+u1d38{Enter}
return

#if OtherCase()
::^L::
send {U+1D38}
return


;; Glyph: 'ᴹ' Descr: MODIFIER LETTER CAPITAL M

#if EmacsCase() && EmacsEnabled
::^M::
send ^x8{Enter}1d39{Enter}
return

#if GtkApplicationCase()
::^M::
send ^+u1d39{Enter}
return

#if OtherCase()
::^M::
send {U+1D39}
return


;; Glyph: 'ᴺ' Descr: MODIFIER LETTER CAPITAL N

#if EmacsCase() && EmacsEnabled
::^N::
send ^x8{Enter}1d3a{Enter}
return

#if GtkApplicationCase()
::^N::
send ^+u1d3a{Enter}
return

#if OtherCase()
::^N::
send {U+1D3A}
return


;; Glyph: 'ᴻ' Descr: MODIFIER LETTER CAPITAL REVERSED N

#if EmacsCase() && EmacsEnabled
::^\Reversed N::
send ^x8{Enter}1d3b{Enter}
return

#if GtkApplicationCase()
::^\Reversed N::
send ^+u1d3b{Enter}
return

#if OtherCase()
::^\Reversed N::
send {U+1D3B}
return


;; Glyph: 'ᴼ' Descr: MODIFIER LETTER CAPITAL O

#if EmacsCase() && EmacsEnabled
::^O::
send ^x8{Enter}1d3c{Enter}
return

#if GtkApplicationCase()
::^O::
send ^+u1d3c{Enter}
return

#if OtherCase()
::^O::
send {U+1D3C}
return


;; Glyph: 'ᴽ' Descr: MODIFIER LETTER CAPITAL OU

#if EmacsCase() && EmacsEnabled
::^\Ou::
send ^x8{Enter}1d3d{Enter}
return

#if GtkApplicationCase()
::^\Ou::
send ^+u1d3d{Enter}
return

#if OtherCase()
::^\Ou::
send {U+1D3D}
return


;; Glyph: 'ᴾ' Descr: MODIFIER LETTER CAPITAL P

#if EmacsCase() && EmacsEnabled
::^P::
send ^x8{Enter}1d3e{Enter}
return

#if GtkApplicationCase()
::^P::
send ^+u1d3e{Enter}
return

#if OtherCase()
::^P::
send {U+1D3E}
return


;; Glyph: 'ᴿ' Descr: MODIFIER LETTER CAPITAL R

#if EmacsCase() && EmacsEnabled
::^R::
send ^x8{Enter}1d3f{Enter}
return

#if GtkApplicationCase()
::^R::
send ^+u1d3f{Enter}
return

#if OtherCase()
::^R::
send {U+1D3F}
return


;; Glyph: 'ᵀ' Descr: MODIFIER LETTER CAPITAL T

#if EmacsCase() && EmacsEnabled
::^T::
send ^x8{Enter}1d40{Enter}
return

#if GtkApplicationCase()
::^T::
send ^+u1d40{Enter}
return

#if OtherCase()
::^T::
send {U+1D40}
return


;; Glyph: 'ᵁ' Descr: MODIFIER LETTER CAPITAL U

#if EmacsCase() && EmacsEnabled
::^U::
send ^x8{Enter}1d41{Enter}
return

#if GtkApplicationCase()
::^U::
send ^+u1d41{Enter}
return

#if OtherCase()
::^U::
send {U+1D41}
return


;; Glyph: 'ᵂ' Descr: MODIFIER LETTER CAPITAL W

#if EmacsCase() && EmacsEnabled
::^W::
send ^x8{Enter}1d42{Enter}
return

#if GtkApplicationCase()
::^W::
send ^+u1d42{Enter}
return

#if OtherCase()
::^W::
send {U+1D42}
return


;; Glyph: 'ᵃ' Descr: MODIFIER LETTER SMALL A

#if EmacsCase() && EmacsEnabled
::^a::
send ^x8{Enter}1d43{Enter}
return

#if GtkApplicationCase()
::^a::
send ^+u1d43{Enter}
return

#if OtherCase()
::^a::
send {U+1D43}
return


;; Glyph: 'ᵄ' Descr: MODIFIER LETTER SMALL TURNED A

#if EmacsCase() && EmacsEnabled
::^\turned a::
send ^x8{Enter}1d44{Enter}
return

#if GtkApplicationCase()
::^\turned a::
send ^+u1d44{Enter}
return

#if OtherCase()
::^\turned a::
send {U+1D44}
return


;; Glyph: 'ᵅ' Descr: MODIFIER LETTER SMALL ALPHA

#if EmacsCase() && EmacsEnabled
::^\alpha::
send ^x8{Enter}1d45{Enter}
return

#if GtkApplicationCase()
::^\alpha::
send ^+u1d45{Enter}
return

#if OtherCase()
::^\alpha::
send {U+1D45}
return


;; Glyph: 'ᵆ' Descr: MODIFIER LETTER SMALL TURNED AE

#if EmacsCase() && EmacsEnabled
::^\turned ae::
send ^x8{Enter}1d46{Enter}
return

#if GtkApplicationCase()
::^\turned ae::
send ^+u1d46{Enter}
return

#if OtherCase()
::^\turned ae::
send {U+1D46}
return


;; Glyph: 'ᵇ' Descr: MODIFIER LETTER SMALL B

#if EmacsCase() && EmacsEnabled
::^b::
send ^x8{Enter}1d47{Enter}
return

#if GtkApplicationCase()
::^b::
send ^+u1d47{Enter}
return

#if OtherCase()
::^b::
send {U+1D47}
return


;; Glyph: 'ᵈ' Descr: MODIFIER LETTER SMALL D

#if EmacsCase() && EmacsEnabled
::^d::
send ^x8{Enter}1d48{Enter}
return

#if GtkApplicationCase()
::^d::
send ^+u1d48{Enter}
return

#if OtherCase()
::^d::
send {U+1D48}
return


;; Glyph: 'ᵉ' Descr: MODIFIER LETTER SMALL E

#if EmacsCase() && EmacsEnabled
::^e::
send ^x8{Enter}1d49{Enter}
return

#if GtkApplicationCase()
::^e::
send ^+u1d49{Enter}
return

#if OtherCase()
::^e::
send {U+1D49}
return


;; Glyph: 'ᵊ' Descr: MODIFIER LETTER SMALL SCHWA

#if EmacsCase() && EmacsEnabled
::^\schwa::
send ^x8{Enter}1d4a{Enter}
return

#if GtkApplicationCase()
::^\schwa::
send ^+u1d4a{Enter}
return

#if OtherCase()
::^\schwa::
send {U+1D4A}
return


;; Glyph: 'ᵋ' Descr: MODIFIER LETTER SMALL OPEN E

#if EmacsCase() && EmacsEnabled
::^\open e::
send ^x8{Enter}1d4b{Enter}
return

#if GtkApplicationCase()
::^\open e::
send ^+u1d4b{Enter}
return

#if OtherCase()
::^\open e::
send {U+1D4B}
return


;; Glyph: 'ᵌ' Descr: MODIFIER LETTER SMALL TURNED OPEN E

#if EmacsCase() && EmacsEnabled
::^\turned open e::
send ^x8{Enter}1d4c{Enter}
return

#if GtkApplicationCase()
::^\turned open e::
send ^+u1d4c{Enter}
return

#if OtherCase()
::^\turned open e::
send {U+1D4C}
return


;; Glyph: 'ᵍ' Descr: MODIFIER LETTER SMALL G

#if EmacsCase() && EmacsEnabled
::^g::
send ^x8{Enter}1d4d{Enter}
return

#if GtkApplicationCase()
::^g::
send ^+u1d4d{Enter}
return

#if OtherCase()
::^g::
send {U+1D4D}
return


;; Glyph: 'ᵎ' Descr: MODIFIER LETTER SMALL TURNED I

#if EmacsCase() && EmacsEnabled
::^\turned i::
send ^x8{Enter}1d4e{Enter}
return

#if GtkApplicationCase()
::^\turned i::
send ^+u1d4e{Enter}
return

#if OtherCase()
::^\turned i::
send {U+1D4E}
return


;; Glyph: 'ᵏ' Descr: MODIFIER LETTER SMALL K

#if EmacsCase() && EmacsEnabled
::^k::
send ^x8{Enter}1d4f{Enter}
return

#if GtkApplicationCase()
::^k::
send ^+u1d4f{Enter}
return

#if OtherCase()
::^k::
send {U+1D4F}
return


;; Glyph: 'ᵐ' Descr: MODIFIER LETTER SMALL M

#if EmacsCase() && EmacsEnabled
::^m::
send ^x8{Enter}1d50{Enter}
return

#if GtkApplicationCase()
::^m::
send ^+u1d50{Enter}
return

#if OtherCase()
::^m::
send {U+1D50}
return


;; Glyph: 'ᵑ' Descr: MODIFIER LETTER SMALL ENG

#if EmacsCase() && EmacsEnabled
::^\eng::
send ^x8{Enter}1d51{Enter}
return

#if GtkApplicationCase()
::^\eng::
send ^+u1d51{Enter}
return

#if OtherCase()
::^\eng::
send {U+1D51}
return


;; Glyph: 'ᵒ' Descr: MODIFIER LETTER SMALL O

#if EmacsCase() && EmacsEnabled
::^o::
send ^x8{Enter}1d52{Enter}
return

#if GtkApplicationCase()
::^o::
send ^+u1d52{Enter}
return

#if OtherCase()
::^o::
send {U+1D52}
return


;; Glyph: 'ᵓ' Descr: MODIFIER LETTER SMALL OPEN O

#if EmacsCase() && EmacsEnabled
::^\open o::
send ^x8{Enter}1d53{Enter}
return

#if GtkApplicationCase()
::^\open o::
send ^+u1d53{Enter}
return

#if OtherCase()
::^\open o::
send {U+1D53}
return


;; Glyph: 'ᵔ' Descr: MODIFIER LETTER SMALL TOP HALF O

#if EmacsCase() && EmacsEnabled
::^\top half o::
send ^x8{Enter}1d54{Enter}
return

#if GtkApplicationCase()
::^\top half o::
send ^+u1d54{Enter}
return

#if OtherCase()
::^\top half o::
send {U+1D54}
return


;; Glyph: 'ᵕ' Descr: MODIFIER LETTER SMALL BOTTOM HALF O

#if EmacsCase() && EmacsEnabled
::^\bottom half o::
send ^x8{Enter}1d55{Enter}
return

#if GtkApplicationCase()
::^\bottom half o::
send ^+u1d55{Enter}
return

#if OtherCase()
::^\bottom half o::
send {U+1D55}
return


;; Glyph: 'ᵖ' Descr: MODIFIER LETTER SMALL P

#if EmacsCase() && EmacsEnabled
::^p::
send ^x8{Enter}1d56{Enter}
return

#if GtkApplicationCase()
::^p::
send ^+u1d56{Enter}
return

#if OtherCase()
::^p::
send {U+1D56}
return


;; Glyph: 'ᵗ' Descr: MODIFIER LETTER SMALL T

#if EmacsCase() && EmacsEnabled
::^t::
send ^x8{Enter}1d57{Enter}
return

#if GtkApplicationCase()
::^t::
send ^+u1d57{Enter}
return

#if OtherCase()
::^t::
send {U+1D57}
return


;; Glyph: 'ᵘ' Descr: MODIFIER LETTER SMALL U

#if EmacsCase() && EmacsEnabled
::^u::
send ^x8{Enter}1d58{Enter}
return

#if GtkApplicationCase()
::^u::
send ^+u1d58{Enter}
return

#if OtherCase()
::^u::
send {U+1D58}
return


;; Glyph: 'ᵙ' Descr: MODIFIER LETTER SMALL SIDEWAYS U

#if EmacsCase() && EmacsEnabled
::^\sideways u::
send ^x8{Enter}1d59{Enter}
return

#if GtkApplicationCase()
::^\sideways u::
send ^+u1d59{Enter}
return

#if OtherCase()
::^\sideways u::
send {U+1D59}
return


;; Glyph: 'ᵚ' Descr: MODIFIER LETTER SMALL TURNED M

#if EmacsCase() && EmacsEnabled
::^\turned m::
send ^x8{Enter}1d5a{Enter}
return

#if GtkApplicationCase()
::^\turned m::
send ^+u1d5a{Enter}
return

#if OtherCase()
::^\turned m::
send {U+1D5A}
return


;; Glyph: 'ᵛ' Descr: MODIFIER LETTER SMALL V

#if EmacsCase() && EmacsEnabled
::^v::
send ^x8{Enter}1d5b{Enter}
return

#if GtkApplicationCase()
::^v::
send ^+u1d5b{Enter}
return

#if OtherCase()
::^v::
send {U+1D5B}
return


;; Glyph: 'ᵜ' Descr: MODIFIER LETTER SMALL AIN

#if EmacsCase() && EmacsEnabled
::^\ain::
send ^x8{Enter}1d5c{Enter}
return

#if GtkApplicationCase()
::^\ain::
send ^+u1d5c{Enter}
return

#if OtherCase()
::^\ain::
send {U+1D5C}
return


;; Glyph: 'ᵝ' Descr: MODIFIER LETTER SMALL BETA

#if EmacsCase() && EmacsEnabled
::^\beta::
send ^x8{Enter}1d5d{Enter}
return

#if GtkApplicationCase()
::^\beta::
send ^+u1d5d{Enter}
return

#if OtherCase()
::^\beta::
send {U+1D5D}
return


;; Glyph: 'ᵞ' Descr: MODIFIER LETTER SMALL GREEK GAMMA

#if EmacsCase() && EmacsEnabled
::^\greek gamma::
send ^x8{Enter}1d5e{Enter}
return

#if GtkApplicationCase()
::^\greek gamma::
send ^+u1d5e{Enter}
return

#if OtherCase()
::^\greek gamma::
send {U+1D5E}
return


;; Glyph: 'ᵟ' Descr: MODIFIER LETTER SMALL DELTA

#if EmacsCase() && EmacsEnabled
::^\delta::
send ^x8{Enter}1d5f{Enter}
return

#if GtkApplicationCase()
::^\delta::
send ^+u1d5f{Enter}
return

#if OtherCase()
::^\delta::
send {U+1D5F}
return


;; Glyph: 'ᵠ' Descr: MODIFIER LETTER SMALL GREEK PHI

#if EmacsCase() && EmacsEnabled
::^\greek phi::
send ^x8{Enter}1d60{Enter}
return

#if GtkApplicationCase()
::^\greek phi::
send ^+u1d60{Enter}
return

#if OtherCase()
::^\greek phi::
send {U+1D60}
return


;; Glyph: 'ᵡ' Descr: MODIFIER LETTER SMALL CHI

#if EmacsCase() && EmacsEnabled
::^\chi::
send ^x8{Enter}1d61{Enter}
return

#if GtkApplicationCase()
::^\chi::
send ^+u1d61{Enter}
return

#if OtherCase()
::^\chi::
send {U+1D61}
return


;; Glyph: 'ᵢ' Descr: LATIN SUBSCRIPT SMALL LETTER I

#if EmacsCase() && EmacsEnabled
::_i::
send ^x8{Enter}1d62{Enter}
return

#if GtkApplicationCase()
::_i::
send ^+u1d62{Enter}
return

#if OtherCase()
::_i::
send {U+1D62}
return


;; Glyph: 'ᵣ' Descr: LATIN SUBSCRIPT SMALL LETTER R

#if EmacsCase() && EmacsEnabled
::_r::
send ^x8{Enter}1d63{Enter}
return

#if GtkApplicationCase()
::_r::
send ^+u1d63{Enter}
return

#if OtherCase()
::_r::
send {U+1D63}
return


;; Glyph: 'ᵤ' Descr: LATIN SUBSCRIPT SMALL LETTER U

#if EmacsCase() && EmacsEnabled
::_u::
send ^x8{Enter}1d64{Enter}
return

#if GtkApplicationCase()
::_u::
send ^+u1d64{Enter}
return

#if OtherCase()
::_u::
send {U+1D64}
return


;; Glyph: 'ᵥ' Descr: LATIN SUBSCRIPT SMALL LETTER V

#if EmacsCase() && EmacsEnabled
::_v::
send ^x8{Enter}1d65{Enter}
return

#if GtkApplicationCase()
::_v::
send ^+u1d65{Enter}
return

#if OtherCase()
::_v::
send {U+1D65}
return


;; Glyph: 'ᶛ' Descr: MODIFIER LETTER SMALL TURNED ALPHA

#if EmacsCase() && EmacsEnabled
::^\turned alpha::
send ^x8{Enter}1d9b{Enter}
return

#if GtkApplicationCase()
::^\turned alpha::
send ^+u1d9b{Enter}
return

#if OtherCase()
::^\turned alpha::
send {U+1D9B}
return


;; Glyph: 'ᶜ' Descr: MODIFIER LETTER SMALL C

#if EmacsCase() && EmacsEnabled
::^c::
send ^x8{Enter}1d9c{Enter}
return

#if GtkApplicationCase()
::^c::
send ^+u1d9c{Enter}
return

#if OtherCase()
::^c::
send {U+1D9C}
return


;; Glyph: 'ᶝ' Descr: MODIFIER LETTER SMALL C WITH CURL

#if EmacsCase() && EmacsEnabled
::^\c with curl::
send ^x8{Enter}1d9d{Enter}
return

#if GtkApplicationCase()
::^\c with curl::
send ^+u1d9d{Enter}
return

#if OtherCase()
::^\c with curl::
send {U+1D9D}
return


;; Glyph: 'ᶞ' Descr: MODIFIER LETTER SMALL ETH

#if EmacsCase() && EmacsEnabled
::^\eth::
send ^x8{Enter}1d9e{Enter}
return

#if GtkApplicationCase()
::^\eth::
send ^+u1d9e{Enter}
return

#if OtherCase()
::^\eth::
send {U+1D9E}
return


;; Glyph: 'ᶟ' Descr: MODIFIER LETTER SMALL REVERSED OPEN E

#if EmacsCase() && EmacsEnabled
::^\reversed open e::
send ^x8{Enter}1d9f{Enter}
return

#if GtkApplicationCase()
::^\reversed open e::
send ^+u1d9f{Enter}
return

#if OtherCase()
::^\reversed open e::
send {U+1D9F}
return


;; Glyph: 'ᶠ' Descr: MODIFIER LETTER SMALL F

#if EmacsCase() && EmacsEnabled
::^f::
send ^x8{Enter}1da0{Enter}
return

#if GtkApplicationCase()
::^f::
send ^+u1da0{Enter}
return

#if OtherCase()
::^f::
send {U+1DA0}
return


;; Glyph: 'ᶡ' Descr: MODIFIER LETTER SMALL DOTLESS J WITH STROKE

#if EmacsCase() && EmacsEnabled
::^\dotless j with stroke::
send ^x8{Enter}1da1{Enter}
return

#if GtkApplicationCase()
::^\dotless j with stroke::
send ^+u1da1{Enter}
return

#if OtherCase()
::^\dotless j with stroke::
send {U+1DA1}
return


;; Glyph: 'ᶢ' Descr: MODIFIER LETTER SMALL SCRIPT G

#if EmacsCase() && EmacsEnabled
::^\script g::
send ^x8{Enter}1da2{Enter}
return

#if GtkApplicationCase()
::^\script g::
send ^+u1da2{Enter}
return

#if OtherCase()
::^\script g::
send {U+1DA2}
return


;; Glyph: 'ᶣ' Descr: MODIFIER LETTER SMALL TURNED H

#if EmacsCase() && EmacsEnabled
::^\turned h::
send ^x8{Enter}1da3{Enter}
return

#if GtkApplicationCase()
::^\turned h::
send ^+u1da3{Enter}
return

#if OtherCase()
::^\turned h::
send {U+1DA3}
return


;; Glyph: 'ᶤ' Descr: MODIFIER LETTER SMALL I WITH STROKE

#if EmacsCase() && EmacsEnabled
::^\i with stroke::
send ^x8{Enter}1da4{Enter}
return

#if GtkApplicationCase()
::^\i with stroke::
send ^+u1da4{Enter}
return

#if OtherCase()
::^\i with stroke::
send {U+1DA4}
return


;; Glyph: 'ᶥ' Descr: MODIFIER LETTER SMALL IOTA

#if EmacsCase() && EmacsEnabled
::^\iota::
send ^x8{Enter}1da5{Enter}
return

#if GtkApplicationCase()
::^\iota::
send ^+u1da5{Enter}
return

#if OtherCase()
::^\iota::
send {U+1DA5}
return


;; Glyph: 'ᶦ' Descr: MODIFIER LETTER SMALL CAPITAL I

#if EmacsCase() && EmacsEnabled
::^\capital i::
send ^x8{Enter}1da6{Enter}
return

#if GtkApplicationCase()
::^\capital i::
send ^+u1da6{Enter}
return

#if OtherCase()
::^\capital i::
send {U+1DA6}
return


;; Glyph: 'ᶧ' Descr: MODIFIER LETTER SMALL CAPITAL I WITH STROKE

#if EmacsCase() && EmacsEnabled
::^\capital i with stroke::
send ^x8{Enter}1da7{Enter}
return

#if GtkApplicationCase()
::^\capital i with stroke::
send ^+u1da7{Enter}
return

#if OtherCase()
::^\capital i with stroke::
send {U+1DA7}
return


;; Glyph: 'ᶨ' Descr: MODIFIER LETTER SMALL J WITH CROSSED-TAIL

#if EmacsCase() && EmacsEnabled
::^\j with crossed-tail::
send ^x8{Enter}1da8{Enter}
return

#if GtkApplicationCase()
::^\j with crossed-tail::
send ^+u1da8{Enter}
return

#if OtherCase()
::^\j with crossed-tail::
send {U+1DA8}
return


;; Glyph: 'ᶩ' Descr: MODIFIER LETTER SMALL L WITH RETROFLEX HOOK

#if EmacsCase() && EmacsEnabled
::^\l with retroflex hook::
send ^x8{Enter}1da9{Enter}
return

#if GtkApplicationCase()
::^\l with retroflex hook::
send ^+u1da9{Enter}
return

#if OtherCase()
::^\l with retroflex hook::
send {U+1DA9}
return


;; Glyph: 'ᶪ' Descr: MODIFIER LETTER SMALL L WITH PALATAL HOOK

#if EmacsCase() && EmacsEnabled
::^\l with palatal hook::
send ^x8{Enter}1daa{Enter}
return

#if GtkApplicationCase()
::^\l with palatal hook::
send ^+u1daa{Enter}
return

#if OtherCase()
::^\l with palatal hook::
send {U+1DAA}
return


;; Glyph: 'ᶫ' Descr: MODIFIER LETTER SMALL CAPITAL L

#if EmacsCase() && EmacsEnabled
::^\capital l::
send ^x8{Enter}1dab{Enter}
return

#if GtkApplicationCase()
::^\capital l::
send ^+u1dab{Enter}
return

#if OtherCase()
::^\capital l::
send {U+1DAB}
return


;; Glyph: 'ᶬ' Descr: MODIFIER LETTER SMALL M WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\m with hook::
send ^x8{Enter}1dac{Enter}
return

#if GtkApplicationCase()
::^\m with hook::
send ^+u1dac{Enter}
return

#if OtherCase()
::^\m with hook::
send {U+1DAC}
return


;; Glyph: 'ᶭ' Descr: MODIFIER LETTER SMALL TURNED M WITH LONG LEG

#if EmacsCase() && EmacsEnabled
::^\turned m with long leg::
send ^x8{Enter}1dad{Enter}
return

#if GtkApplicationCase()
::^\turned m with long leg::
send ^+u1dad{Enter}
return

#if OtherCase()
::^\turned m with long leg::
send {U+1DAD}
return


;; Glyph: 'ᶮ' Descr: MODIFIER LETTER SMALL N WITH LEFT HOOK

#if EmacsCase() && EmacsEnabled
::^\n with left hook::
send ^x8{Enter}1dae{Enter}
return

#if GtkApplicationCase()
::^\n with left hook::
send ^+u1dae{Enter}
return

#if OtherCase()
::^\n with left hook::
send {U+1DAE}
return


;; Glyph: 'ᶯ' Descr: MODIFIER LETTER SMALL N WITH RETROFLEX HOOK

#if EmacsCase() && EmacsEnabled
::^\n with retroflex hook::
send ^x8{Enter}1daf{Enter}
return

#if GtkApplicationCase()
::^\n with retroflex hook::
send ^+u1daf{Enter}
return

#if OtherCase()
::^\n with retroflex hook::
send {U+1DAF}
return


;; Glyph: 'ᶰ' Descr: MODIFIER LETTER SMALL CAPITAL N

#if EmacsCase() && EmacsEnabled
::^\capital n::
send ^x8{Enter}1db0{Enter}
return

#if GtkApplicationCase()
::^\capital n::
send ^+u1db0{Enter}
return

#if OtherCase()
::^\capital n::
send {U+1DB0}
return


;; Glyph: 'ᶱ' Descr: MODIFIER LETTER SMALL BARRED O

#if EmacsCase() && EmacsEnabled
::^\barred o::
send ^x8{Enter}1db1{Enter}
return

#if GtkApplicationCase()
::^\barred o::
send ^+u1db1{Enter}
return

#if OtherCase()
::^\barred o::
send {U+1DB1}
return


;; Glyph: 'ᶲ' Descr: MODIFIER LETTER SMALL PHI

#if EmacsCase() && EmacsEnabled
::^\phi::
send ^x8{Enter}1db2{Enter}
return

#if GtkApplicationCase()
::^\phi::
send ^+u1db2{Enter}
return

#if OtherCase()
::^\phi::
send {U+1DB2}
return


;; Glyph: 'ᶳ' Descr: MODIFIER LETTER SMALL S WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\s with hook::
send ^x8{Enter}1db3{Enter}
return

#if GtkApplicationCase()
::^\s with hook::
send ^+u1db3{Enter}
return

#if OtherCase()
::^\s with hook::
send {U+1DB3}
return


;; Glyph: 'ᶴ' Descr: MODIFIER LETTER SMALL ESH

#if EmacsCase() && EmacsEnabled
::^\esh::
send ^x8{Enter}1db4{Enter}
return

#if GtkApplicationCase()
::^\esh::
send ^+u1db4{Enter}
return

#if OtherCase()
::^\esh::
send {U+1DB4}
return


;; Glyph: 'ᶵ' Descr: MODIFIER LETTER SMALL T WITH PALATAL HOOK

#if EmacsCase() && EmacsEnabled
::^\t with palatal hook::
send ^x8{Enter}1db5{Enter}
return

#if GtkApplicationCase()
::^\t with palatal hook::
send ^+u1db5{Enter}
return

#if OtherCase()
::^\t with palatal hook::
send {U+1DB5}
return


;; Glyph: 'ᶶ' Descr: MODIFIER LETTER SMALL U BAR

#if EmacsCase() && EmacsEnabled
::^\u bar::
send ^x8{Enter}1db6{Enter}
return

#if GtkApplicationCase()
::^\u bar::
send ^+u1db6{Enter}
return

#if OtherCase()
::^\u bar::
send {U+1DB6}
return


;; Glyph: 'ᶷ' Descr: MODIFIER LETTER SMALL UPSILON

#if EmacsCase() && EmacsEnabled
::^\upsilon::
send ^x8{Enter}1db7{Enter}
return

#if GtkApplicationCase()
::^\upsilon::
send ^+u1db7{Enter}
return

#if OtherCase()
::^\upsilon::
send {U+1DB7}
return


;; Glyph: 'ᶸ' Descr: MODIFIER LETTER SMALL CAPITAL U

#if EmacsCase() && EmacsEnabled
::^\capital u::
send ^x8{Enter}1db8{Enter}
return

#if GtkApplicationCase()
::^\capital u::
send ^+u1db8{Enter}
return

#if OtherCase()
::^\capital u::
send {U+1DB8}
return


;; Glyph: 'ᶹ' Descr: MODIFIER LETTER SMALL V WITH HOOK

#if EmacsCase() && EmacsEnabled
::^\v with hook::
send ^x8{Enter}1db9{Enter}
return

#if GtkApplicationCase()
::^\v with hook::
send ^+u1db9{Enter}
return

#if OtherCase()
::^\v with hook::
send {U+1DB9}
return


;; Glyph: 'ᶺ' Descr: MODIFIER LETTER SMALL TURNED V

#if EmacsCase() && EmacsEnabled
::^\turned v::
send ^x8{Enter}1dba{Enter}
return

#if GtkApplicationCase()
::^\turned v::
send ^+u1dba{Enter}
return

#if OtherCase()
::^\turned v::
send {U+1DBA}
return


;; Glyph: 'ᶻ' Descr: MODIFIER LETTER SMALL Z

#if EmacsCase() && EmacsEnabled
::^z::
send ^x8{Enter}1dbb{Enter}
return

#if GtkApplicationCase()
::^z::
send ^+u1dbb{Enter}
return

#if OtherCase()
::^z::
send {U+1DBB}
return


;; Glyph: 'ᶼ' Descr: MODIFIER LETTER SMALL Z WITH RETROFLEX HOOK

#if EmacsCase() && EmacsEnabled
::^\z with retroflex hook::
send ^x8{Enter}1dbc{Enter}
return

#if GtkApplicationCase()
::^\z with retroflex hook::
send ^+u1dbc{Enter}
return

#if OtherCase()
::^\z with retroflex hook::
send {U+1DBC}
return


;; Glyph: 'ᶽ' Descr: MODIFIER LETTER SMALL Z WITH CURL

#if EmacsCase() && EmacsEnabled
::^\z with curl::
send ^x8{Enter}1dbd{Enter}
return

#if GtkApplicationCase()
::^\z with curl::
send ^+u1dbd{Enter}
return

#if OtherCase()
::^\z with curl::
send {U+1DBD}
return


;; Glyph: 'ᶾ' Descr: MODIFIER LETTER SMALL EZH

#if EmacsCase() && EmacsEnabled
::^\ezh::
send ^x8{Enter}1dbe{Enter}
return

#if GtkApplicationCase()
::^\ezh::
send ^+u1dbe{Enter}
return

#if OtherCase()
::^\ezh::
send {U+1DBE}
return


;; Glyph: 'ᶿ' Descr: MODIFIER LETTER SMALL THETA

#if EmacsCase() && EmacsEnabled
::^\theta::
send ^x8{Enter}1dbf{Enter}
return

#if GtkApplicationCase()
::^\theta::
send ^+u1dbf{Enter}
return

#if OtherCase()
::^\theta::
send {U+1DBF}
return


;; Glyph: 'Ḃ' Descr: LATIN CAPITAL LETTER B WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.B::
send ^x8{Enter}1e02{Enter}
return

#if GtkApplicationCase()
::\.B::
send ^+u1e02{Enter}
return

#if OtherCase()
::\.B::
send {U+1E02}
return


;; Glyph: 'Ḃ' Descr: LATIN CAPITAL LETTER B WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{B}::
send ^x8{Enter}1e02{Enter}
return

#if GtkApplicationCase()
::\.{B}::
send ^+u1e02{Enter}
return

#if OtherCase()
::\.{B}::
send {U+1E02}
return


;; Glyph: 'ḃ' Descr: LATIN SMALL LETTER B WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.b::
send ^x8{Enter}1e03{Enter}
return

#if GtkApplicationCase()
::\.b::
send ^+u1e03{Enter}
return

#if OtherCase()
::\.b::
send {U+1E03}
return


;; Glyph: 'ḃ' Descr: LATIN SMALL LETTER B WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{b}::
send ^x8{Enter}1e03{Enter}
return

#if GtkApplicationCase()
::\.{b}::
send ^+u1e03{Enter}
return

#if OtherCase()
::\.{b}::
send {U+1E03}
return


;; Glyph: 'Ḅ' Descr: LATIN CAPITAL LETTER B WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{B}::
send ^x8{Enter}1e04{Enter}
return

#if GtkApplicationCase()
::\d{B}::
send ^+u1e04{Enter}
return

#if OtherCase()
::\d{B}::
send {U+1E04}
return


;; Glyph: 'ḅ' Descr: LATIN SMALL LETTER B WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{b}::
send ^x8{Enter}1e05{Enter}
return

#if GtkApplicationCase()
::\d{b}::
send ^+u1e05{Enter}
return

#if OtherCase()
::\d{b}::
send {U+1E05}
return


;; Glyph: 'Ḉ' Descr: LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE

#if EmacsCase() && EmacsEnabled
::\c\'C::
send ^x8{Enter}1e08{Enter}
return

#if GtkApplicationCase()
::\c\'C::
send ^+u1e08{Enter}
return

#if OtherCase()
::\c\'C::
send {U+1E08}
return


;; Glyph: 'Ḉ' Descr: LATIN CAPITAL LETTER C WITH CEDILLA AND ACUTE

#if EmacsCase() && EmacsEnabled
::\c\'{C}::
send ^x8{Enter}1e08{Enter}
return

#if GtkApplicationCase()
::\c\'{C}::
send ^+u1e08{Enter}
return

#if OtherCase()
::\c\'{C}::
send {U+1E08}
return


;; Glyph: 'ḉ' Descr: LATIN SMALL LETTER C WITH CEDILLA AND ACUTE

#if EmacsCase() && EmacsEnabled
::\c\'c::
send ^x8{Enter}1e09{Enter}
return

#if GtkApplicationCase()
::\c\'c::
send ^+u1e09{Enter}
return

#if OtherCase()
::\c\'c::
send {U+1E09}
return


;; Glyph: 'ḉ' Descr: LATIN SMALL LETTER C WITH CEDILLA AND ACUTE

#if EmacsCase() && EmacsEnabled
::\c\'{c}::
send ^x8{Enter}1e09{Enter}
return

#if GtkApplicationCase()
::\c\'{c}::
send ^+u1e09{Enter}
return

#if OtherCase()
::\c\'{c}::
send {U+1E09}
return


;; Glyph: 'Ḋ' Descr: LATIN CAPITAL LETTER D WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.D::
send ^x8{Enter}1e0a{Enter}
return

#if GtkApplicationCase()
::\.D::
send ^+u1e0a{Enter}
return

#if OtherCase()
::\.D::
send {U+1E0A}
return


;; Glyph: 'Ḋ' Descr: LATIN CAPITAL LETTER D WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{D}::
send ^x8{Enter}1e0a{Enter}
return

#if GtkApplicationCase()
::\.{D}::
send ^+u1e0a{Enter}
return

#if OtherCase()
::\.{D}::
send {U+1E0A}
return


;; Glyph: 'ḋ' Descr: LATIN SMALL LETTER D WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.d::
send ^x8{Enter}1e0b{Enter}
return

#if GtkApplicationCase()
::\.d::
send ^+u1e0b{Enter}
return

#if OtherCase()
::\.d::
send {U+1E0B}
return


;; Glyph: 'ḋ' Descr: LATIN SMALL LETTER D WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{d}::
send ^x8{Enter}1e0b{Enter}
return

#if GtkApplicationCase()
::\.{d}::
send ^+u1e0b{Enter}
return

#if OtherCase()
::\.{d}::
send {U+1E0B}
return


;; Glyph: 'Ḍ' Descr: LATIN CAPITAL LETTER D WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{D}::
send ^x8{Enter}1e0c{Enter}
return

#if GtkApplicationCase()
::\d{D}::
send ^+u1e0c{Enter}
return

#if OtherCase()
::\d{D}::
send {U+1E0C}
return


;; Glyph: 'ḍ' Descr: LATIN SMALL LETTER D WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{d}::
send ^x8{Enter}1e0d{Enter}
return

#if GtkApplicationCase()
::\d{d}::
send ^+u1e0d{Enter}
return

#if OtherCase()
::\d{d}::
send {U+1E0D}
return


;; Glyph: 'Ḑ' Descr: LATIN CAPITAL LETTER D WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cD::
send ^x8{Enter}1e10{Enter}
return

#if GtkApplicationCase()
::\cD::
send ^+u1e10{Enter}
return

#if OtherCase()
::\cD::
send {U+1E10}
return


;; Glyph: 'Ḑ' Descr: LATIN CAPITAL LETTER D WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{D}::
send ^x8{Enter}1e10{Enter}
return

#if GtkApplicationCase()
::\c{D}::
send ^+u1e10{Enter}
return

#if OtherCase()
::\c{D}::
send {U+1E10}
return


;; Glyph: 'ḑ' Descr: LATIN SMALL LETTER D WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cd::
send ^x8{Enter}1e11{Enter}
return

#if GtkApplicationCase()
::\cd::
send ^+u1e11{Enter}
return

#if OtherCase()
::\cd::
send {U+1E11}
return


;; Glyph: 'ḑ' Descr: LATIN SMALL LETTER D WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{d}::
send ^x8{Enter}1e11{Enter}
return

#if GtkApplicationCase()
::\c{d}::
send ^+u1e11{Enter}
return

#if OtherCase()
::\c{d}::
send {U+1E11}
return


;; Glyph: 'Ḕ' Descr: LATIN CAPITAL LETTER E WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``E::
send ^x8{Enter}1e14{Enter}
return

#if GtkApplicationCase()
::\=\``E::
send ^+u1e14{Enter}
return

#if OtherCase()
::\=\``E::
send {U+1E14}
return


;; Glyph: 'Ḕ' Descr: LATIN CAPITAL LETTER E WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``{E}::
send ^x8{Enter}1e14{Enter}
return

#if GtkApplicationCase()
::\=\``{E}::
send ^+u1e14{Enter}
return

#if OtherCase()
::\=\``{E}::
send {U+1E14}
return


;; Glyph: 'ḕ' Descr: LATIN SMALL LETTER E WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``e::
send ^x8{Enter}1e15{Enter}
return

#if GtkApplicationCase()
::\=\``e::
send ^+u1e15{Enter}
return

#if OtherCase()
::\=\``e::
send {U+1E15}
return


;; Glyph: 'ḕ' Descr: LATIN SMALL LETTER E WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``{e}::
send ^x8{Enter}1e15{Enter}
return

#if GtkApplicationCase()
::\=\``{e}::
send ^+u1e15{Enter}
return

#if OtherCase()
::\=\``{e}::
send {U+1E15}
return


;; Glyph: 'Ḗ' Descr: LATIN CAPITAL LETTER E WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'E::
send ^x8{Enter}1e16{Enter}
return

#if GtkApplicationCase()
::\=\'E::
send ^+u1e16{Enter}
return

#if OtherCase()
::\=\'E::
send {U+1E16}
return


;; Glyph: 'Ḗ' Descr: LATIN CAPITAL LETTER E WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'{E}::
send ^x8{Enter}1e16{Enter}
return

#if GtkApplicationCase()
::\=\'{E}::
send ^+u1e16{Enter}
return

#if OtherCase()
::\=\'{E}::
send {U+1E16}
return


;; Glyph: 'ḗ' Descr: LATIN SMALL LETTER E WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'e::
send ^x8{Enter}1e17{Enter}
return

#if GtkApplicationCase()
::\=\'e::
send ^+u1e17{Enter}
return

#if OtherCase()
::\=\'e::
send {U+1E17}
return


;; Glyph: 'ḗ' Descr: LATIN SMALL LETTER E WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'{e}::
send ^x8{Enter}1e17{Enter}
return

#if GtkApplicationCase()
::\=\'{e}::
send ^+u1e17{Enter}
return

#if OtherCase()
::\=\'{e}::
send {U+1E17}
return


;; Glyph: 'Ḝ' Descr: LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE

#if EmacsCase() && EmacsEnabled
::\c\uE::
send ^x8{Enter}1e1c{Enter}
return

#if GtkApplicationCase()
::\c\uE::
send ^+u1e1c{Enter}
return

#if OtherCase()
::\c\uE::
send {U+1E1C}
return


;; Glyph: 'Ḝ' Descr: LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE

#if EmacsCase() && EmacsEnabled
::\c\u{E}::
send ^x8{Enter}1e1c{Enter}
return

#if GtkApplicationCase()
::\c\u{E}::
send ^+u1e1c{Enter}
return

#if OtherCase()
::\c\u{E}::
send {U+1E1C}
return


;; Glyph: 'ḝ' Descr: LATIN SMALL LETTER E WITH CEDILLA AND BREVE

#if EmacsCase() && EmacsEnabled
::\c\ue::
send ^x8{Enter}1e1d{Enter}
return

#if GtkApplicationCase()
::\c\ue::
send ^+u1e1d{Enter}
return

#if OtherCase()
::\c\ue::
send {U+1E1D}
return


;; Glyph: 'ḝ' Descr: LATIN SMALL LETTER E WITH CEDILLA AND BREVE

#if EmacsCase() && EmacsEnabled
::\c\u{e}::
send ^x8{Enter}1e1d{Enter}
return

#if GtkApplicationCase()
::\c\u{e}::
send ^+u1e1d{Enter}
return

#if OtherCase()
::\c\u{e}::
send {U+1E1D}
return


;; Glyph: 'Ḟ' Descr: LATIN CAPITAL LETTER F WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.F::
send ^x8{Enter}1e1e{Enter}
return

#if GtkApplicationCase()
::\.F::
send ^+u1e1e{Enter}
return

#if OtherCase()
::\.F::
send {U+1E1E}
return


;; Glyph: 'Ḟ' Descr: LATIN CAPITAL LETTER F WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{F}::
send ^x8{Enter}1e1e{Enter}
return

#if GtkApplicationCase()
::\.{F}::
send ^+u1e1e{Enter}
return

#if OtherCase()
::\.{F}::
send {U+1E1E}
return


;; Glyph: 'ḟ' Descr: LATIN SMALL LETTER F WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.f::
send ^x8{Enter}1e1f{Enter}
return

#if GtkApplicationCase()
::\.f::
send ^+u1e1f{Enter}
return

#if OtherCase()
::\.f::
send {U+1E1F}
return


;; Glyph: 'ḟ' Descr: LATIN SMALL LETTER F WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{f}::
send ^x8{Enter}1e1f{Enter}
return

#if GtkApplicationCase()
::\.{f}::
send ^+u1e1f{Enter}
return

#if OtherCase()
::\.{f}::
send {U+1E1F}
return


;; Glyph: 'Ḡ' Descr: LATIN CAPITAL LETTER G WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=G::
send ^x8{Enter}1e20{Enter}
return

#if GtkApplicationCase()
::\=G::
send ^+u1e20{Enter}
return

#if OtherCase()
::\=G::
send {U+1E20}
return


;; Glyph: 'Ḡ' Descr: LATIN CAPITAL LETTER G WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={G}::
send ^x8{Enter}1e20{Enter}
return

#if GtkApplicationCase()
::\={G}::
send ^+u1e20{Enter}
return

#if OtherCase()
::\={G}::
send {U+1E20}
return


;; Glyph: 'ḡ' Descr: LATIN SMALL LETTER G WITH MACRON

#if EmacsCase() && EmacsEnabled
::\=g::
send ^x8{Enter}1e21{Enter}
return

#if GtkApplicationCase()
::\=g::
send ^+u1e21{Enter}
return

#if OtherCase()
::\=g::
send {U+1E21}
return


;; Glyph: 'ḡ' Descr: LATIN SMALL LETTER G WITH MACRON

#if EmacsCase() && EmacsEnabled
::\={g}::
send ^x8{Enter}1e21{Enter}
return

#if GtkApplicationCase()
::\={g}::
send ^+u1e21{Enter}
return

#if OtherCase()
::\={g}::
send {U+1E21}
return


;; Glyph: 'Ḣ' Descr: LATIN CAPITAL LETTER H WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.H::
send ^x8{Enter}1e22{Enter}
return

#if GtkApplicationCase()
::\.H::
send ^+u1e22{Enter}
return

#if OtherCase()
::\.H::
send {U+1E22}
return


;; Glyph: 'Ḣ' Descr: LATIN CAPITAL LETTER H WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{H}::
send ^x8{Enter}1e22{Enter}
return

#if GtkApplicationCase()
::\.{H}::
send ^+u1e22{Enter}
return

#if OtherCase()
::\.{H}::
send {U+1E22}
return


;; Glyph: 'ḣ' Descr: LATIN SMALL LETTER H WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.h::
send ^x8{Enter}1e23{Enter}
return

#if GtkApplicationCase()
::\.h::
send ^+u1e23{Enter}
return

#if OtherCase()
::\.h::
send {U+1E23}
return


;; Glyph: 'ḣ' Descr: LATIN SMALL LETTER H WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{h}::
send ^x8{Enter}1e23{Enter}
return

#if GtkApplicationCase()
::\.{h}::
send ^+u1e23{Enter}
return

#if OtherCase()
::\.{h}::
send {U+1E23}
return


;; Glyph: 'Ḥ' Descr: LATIN CAPITAL LETTER H WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{H}::
send ^x8{Enter}1e24{Enter}
return

#if GtkApplicationCase()
::\d{H}::
send ^+u1e24{Enter}
return

#if OtherCase()
::\d{H}::
send {U+1E24}
return


;; Glyph: 'ḥ' Descr: LATIN SMALL LETTER H WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{h}::
send ^x8{Enter}1e25{Enter}
return

#if GtkApplicationCase()
::\d{h}::
send ^+u1e25{Enter}
return

#if OtherCase()
::\d{h}::
send {U+1E25}
return


;; Glyph: 'Ḧ' Descr: LATIN CAPITAL LETTER H WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"H::
send ^x8{Enter}1e26{Enter}
return

#if GtkApplicationCase()
::\"H::
send ^+u1e26{Enter}
return

#if OtherCase()
::\"H::
send {U+1E26}
return


;; Glyph: 'Ḧ' Descr: LATIN CAPITAL LETTER H WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{H}::
send ^x8{Enter}1e26{Enter}
return

#if GtkApplicationCase()
::\"{H}::
send ^+u1e26{Enter}
return

#if OtherCase()
::\"{H}::
send {U+1E26}
return


;; Glyph: 'ḧ' Descr: LATIN SMALL LETTER H WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"h::
send ^x8{Enter}1e27{Enter}
return

#if GtkApplicationCase()
::\"h::
send ^+u1e27{Enter}
return

#if OtherCase()
::\"h::
send {U+1E27}
return


;; Glyph: 'ḧ' Descr: LATIN SMALL LETTER H WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{h}::
send ^x8{Enter}1e27{Enter}
return

#if GtkApplicationCase()
::\"{h}::
send ^+u1e27{Enter}
return

#if OtherCase()
::\"{h}::
send {U+1E27}
return


;; Glyph: 'Ḩ' Descr: LATIN CAPITAL LETTER H WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\cH::
send ^x8{Enter}1e28{Enter}
return

#if GtkApplicationCase()
::\cH::
send ^+u1e28{Enter}
return

#if OtherCase()
::\cH::
send {U+1E28}
return


;; Glyph: 'Ḩ' Descr: LATIN CAPITAL LETTER H WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{H}::
send ^x8{Enter}1e28{Enter}
return

#if GtkApplicationCase()
::\c{H}::
send ^+u1e28{Enter}
return

#if OtherCase()
::\c{H}::
send {U+1E28}
return


;; Glyph: 'ḩ' Descr: LATIN SMALL LETTER H WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\ch::
send ^x8{Enter}1e29{Enter}
return

#if GtkApplicationCase()
::\ch::
send ^+u1e29{Enter}
return

#if OtherCase()
::\ch::
send {U+1E29}
return


;; Glyph: 'ḩ' Descr: LATIN SMALL LETTER H WITH CEDILLA

#if EmacsCase() && EmacsEnabled
::\c{h}::
send ^x8{Enter}1e29{Enter}
return

#if GtkApplicationCase()
::\c{h}::
send ^+u1e29{Enter}
return

#if OtherCase()
::\c{h}::
send {U+1E29}
return


;; Glyph: 'Ḯ' Descr: LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'I::
send ^x8{Enter}1e2e{Enter}
return

#if GtkApplicationCase()
::\"\'I::
send ^+u1e2e{Enter}
return

#if OtherCase()
::\"\'I::
send {U+1E2E}
return


;; Glyph: 'Ḯ' Descr: LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'{I}::
send ^x8{Enter}1e2e{Enter}
return

#if GtkApplicationCase()
::\"\'{I}::
send ^+u1e2e{Enter}
return

#if OtherCase()
::\"\'{I}::
send {U+1E2E}
return


;; Glyph: 'ḯ' Descr: LATIN SMALL LETTER I WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'i::
send ^x8{Enter}1e2f{Enter}
return

#if GtkApplicationCase()
::\"\'i::
send ^+u1e2f{Enter}
return

#if OtherCase()
::\"\'i::
send {U+1E2F}
return


;; Glyph: 'ḯ' Descr: LATIN SMALL LETTER I WITH DIAERESIS AND ACUTE

#if EmacsCase() && EmacsEnabled
::\"\'{i}::
send ^x8{Enter}1e2f{Enter}
return

#if GtkApplicationCase()
::\"\'{i}::
send ^+u1e2f{Enter}
return

#if OtherCase()
::\"\'{i}::
send {U+1E2F}
return


;; Glyph: 'Ḱ' Descr: LATIN CAPITAL LETTER K WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'K::
send ^x8{Enter}1e30{Enter}
return

#if GtkApplicationCase()
::\'K::
send ^+u1e30{Enter}
return

#if OtherCase()
::\'K::
send {U+1E30}
return


;; Glyph: 'Ḱ' Descr: LATIN CAPITAL LETTER K WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{K}::
send ^x8{Enter}1e30{Enter}
return

#if GtkApplicationCase()
::\'{K}::
send ^+u1e30{Enter}
return

#if OtherCase()
::\'{K}::
send {U+1E30}
return


;; Glyph: 'ḱ' Descr: LATIN SMALL LETTER K WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'k::
send ^x8{Enter}1e31{Enter}
return

#if GtkApplicationCase()
::\'k::
send ^+u1e31{Enter}
return

#if OtherCase()
::\'k::
send {U+1E31}
return


;; Glyph: 'ḱ' Descr: LATIN SMALL LETTER K WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{k}::
send ^x8{Enter}1e31{Enter}
return

#if GtkApplicationCase()
::\'{k}::
send ^+u1e31{Enter}
return

#if OtherCase()
::\'{k}::
send {U+1E31}
return


;; Glyph: 'Ḳ' Descr: LATIN CAPITAL LETTER K WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{K}::
send ^x8{Enter}1e32{Enter}
return

#if GtkApplicationCase()
::\d{K}::
send ^+u1e32{Enter}
return

#if OtherCase()
::\d{K}::
send {U+1E32}
return


;; Glyph: 'ḳ' Descr: LATIN SMALL LETTER K WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{k}::
send ^x8{Enter}1e33{Enter}
return

#if GtkApplicationCase()
::\d{k}::
send ^+u1e33{Enter}
return

#if OtherCase()
::\d{k}::
send {U+1E33}
return


;; Glyph: 'Ḷ' Descr: LATIN CAPITAL LETTER L WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{L}::
send ^x8{Enter}1e36{Enter}
return

#if GtkApplicationCase()
::\d{L}::
send ^+u1e36{Enter}
return

#if OtherCase()
::\d{L}::
send {U+1E36}
return


;; Glyph: 'ḷ' Descr: LATIN SMALL LETTER L WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{l}::
send ^x8{Enter}1e37{Enter}
return

#if GtkApplicationCase()
::\d{l}::
send ^+u1e37{Enter}
return

#if OtherCase()
::\d{l}::
send {U+1E37}
return


;; Glyph: 'Ḹ' Descr: LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\=L::
send ^x8{Enter}1e38{Enter}
return

#if GtkApplicationCase()
::\d\=L::
send ^+u1e38{Enter}
return

#if OtherCase()
::\d\=L::
send {U+1E38}
return


;; Glyph: 'Ḹ' Descr: LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\={L}::
send ^x8{Enter}1e38{Enter}
return

#if GtkApplicationCase()
::\d\={L}::
send ^+u1e38{Enter}
return

#if OtherCase()
::\d\={L}::
send {U+1E38}
return


;; Glyph: 'ḹ' Descr: LATIN SMALL LETTER L WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\=l::
send ^x8{Enter}1e39{Enter}
return

#if GtkApplicationCase()
::\d\=l::
send ^+u1e39{Enter}
return

#if OtherCase()
::\d\=l::
send {U+1E39}
return


;; Glyph: 'ḹ' Descr: LATIN SMALL LETTER L WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\={l}::
send ^x8{Enter}1e39{Enter}
return

#if GtkApplicationCase()
::\d\={l}::
send ^+u1e39{Enter}
return

#if OtherCase()
::\d\={l}::
send {U+1E39}
return


;; Glyph: 'Ḿ' Descr: LATIN CAPITAL LETTER M WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'M::
send ^x8{Enter}1e3e{Enter}
return

#if GtkApplicationCase()
::\'M::
send ^+u1e3e{Enter}
return

#if OtherCase()
::\'M::
send {U+1E3E}
return


;; Glyph: 'Ḿ' Descr: LATIN CAPITAL LETTER M WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{M}::
send ^x8{Enter}1e3e{Enter}
return

#if GtkApplicationCase()
::\'{M}::
send ^+u1e3e{Enter}
return

#if OtherCase()
::\'{M}::
send {U+1E3E}
return


;; Glyph: 'ḿ' Descr: LATIN SMALL LETTER M WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'m::
send ^x8{Enter}1e3f{Enter}
return

#if GtkApplicationCase()
::\'m::
send ^+u1e3f{Enter}
return

#if OtherCase()
::\'m::
send {U+1E3F}
return


;; Glyph: 'ḿ' Descr: LATIN SMALL LETTER M WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{m}::
send ^x8{Enter}1e3f{Enter}
return

#if GtkApplicationCase()
::\'{m}::
send ^+u1e3f{Enter}
return

#if OtherCase()
::\'{m}::
send {U+1E3F}
return


;; Glyph: 'Ṁ' Descr: LATIN CAPITAL LETTER M WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.M::
send ^x8{Enter}1e40{Enter}
return

#if GtkApplicationCase()
::\.M::
send ^+u1e40{Enter}
return

#if OtherCase()
::\.M::
send {U+1E40}
return


;; Glyph: 'Ṁ' Descr: LATIN CAPITAL LETTER M WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{M}::
send ^x8{Enter}1e40{Enter}
return

#if GtkApplicationCase()
::\.{M}::
send ^+u1e40{Enter}
return

#if OtherCase()
::\.{M}::
send {U+1E40}
return


;; Glyph: 'ṁ' Descr: LATIN SMALL LETTER M WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.m::
send ^x8{Enter}1e41{Enter}
return

#if GtkApplicationCase()
::\.m::
send ^+u1e41{Enter}
return

#if OtherCase()
::\.m::
send {U+1E41}
return


;; Glyph: 'ṁ' Descr: LATIN SMALL LETTER M WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{m}::
send ^x8{Enter}1e41{Enter}
return

#if GtkApplicationCase()
::\.{m}::
send ^+u1e41{Enter}
return

#if OtherCase()
::\.{m}::
send {U+1E41}
return


;; Glyph: 'Ṃ' Descr: LATIN CAPITAL LETTER M WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{M}::
send ^x8{Enter}1e42{Enter}
return

#if GtkApplicationCase()
::\d{M}::
send ^+u1e42{Enter}
return

#if OtherCase()
::\d{M}::
send {U+1E42}
return


;; Glyph: 'ṃ' Descr: LATIN SMALL LETTER M WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{m}::
send ^x8{Enter}1e43{Enter}
return

#if GtkApplicationCase()
::\d{m}::
send ^+u1e43{Enter}
return

#if OtherCase()
::\d{m}::
send {U+1E43}
return


;; Glyph: 'Ṅ' Descr: LATIN CAPITAL LETTER N WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.N::
send ^x8{Enter}1e44{Enter}
return

#if GtkApplicationCase()
::\.N::
send ^+u1e44{Enter}
return

#if OtherCase()
::\.N::
send {U+1E44}
return


;; Glyph: 'Ṅ' Descr: LATIN CAPITAL LETTER N WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{N}::
send ^x8{Enter}1e44{Enter}
return

#if GtkApplicationCase()
::\.{N}::
send ^+u1e44{Enter}
return

#if OtherCase()
::\.{N}::
send {U+1E44}
return


;; Glyph: 'ṅ' Descr: LATIN SMALL LETTER N WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.n::
send ^x8{Enter}1e45{Enter}
return

#if GtkApplicationCase()
::\.n::
send ^+u1e45{Enter}
return

#if OtherCase()
::\.n::
send {U+1E45}
return


;; Glyph: 'ṅ' Descr: LATIN SMALL LETTER N WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{n}::
send ^x8{Enter}1e45{Enter}
return

#if GtkApplicationCase()
::\.{n}::
send ^+u1e45{Enter}
return

#if OtherCase()
::\.{n}::
send {U+1E45}
return


;; Glyph: 'Ṇ' Descr: LATIN CAPITAL LETTER N WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{N}::
send ^x8{Enter}1e46{Enter}
return

#if GtkApplicationCase()
::\d{N}::
send ^+u1e46{Enter}
return

#if OtherCase()
::\d{N}::
send {U+1E46}
return


;; Glyph: 'ṇ' Descr: LATIN SMALL LETTER N WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{n}::
send ^x8{Enter}1e47{Enter}
return

#if GtkApplicationCase()
::\d{n}::
send ^+u1e47{Enter}
return

#if OtherCase()
::\d{n}::
send {U+1E47}
return


;; Glyph: 'Ṍ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'O::
send ^x8{Enter}1e4c{Enter}
return

#if GtkApplicationCase()
::\~\'O::
send ^+u1e4c{Enter}
return

#if OtherCase()
::\~\'O::
send {U+1E4C}
return


;; Glyph: 'Ṍ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'{O}::
send ^x8{Enter}1e4c{Enter}
return

#if GtkApplicationCase()
::\~\'{O}::
send ^+u1e4c{Enter}
return

#if OtherCase()
::\~\'{O}::
send {U+1E4C}
return


;; Glyph: 'ṍ' Descr: LATIN SMALL LETTER O WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'o::
send ^x8{Enter}1e4d{Enter}
return

#if GtkApplicationCase()
::\~\'o::
send ^+u1e4d{Enter}
return

#if OtherCase()
::\~\'o::
send {U+1E4D}
return


;; Glyph: 'ṍ' Descr: LATIN SMALL LETTER O WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'{o}::
send ^x8{Enter}1e4d{Enter}
return

#if GtkApplicationCase()
::\~\'{o}::
send ^+u1e4d{Enter}
return

#if OtherCase()
::\~\'{o}::
send {U+1E4D}
return


;; Glyph: 'Ṏ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\~\"O::
send ^x8{Enter}1e4e{Enter}
return

#if GtkApplicationCase()
::\~\"O::
send ^+u1e4e{Enter}
return

#if OtherCase()
::\~\"O::
send {U+1E4E}
return


;; Glyph: 'Ṏ' Descr: LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\~\"{O}::
send ^x8{Enter}1e4e{Enter}
return

#if GtkApplicationCase()
::\~\"{O}::
send ^+u1e4e{Enter}
return

#if OtherCase()
::\~\"{O}::
send {U+1E4E}
return


;; Glyph: 'ṏ' Descr: LATIN SMALL LETTER O WITH TILDE AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\~\"o::
send ^x8{Enter}1e4f{Enter}
return

#if GtkApplicationCase()
::\~\"o::
send ^+u1e4f{Enter}
return

#if OtherCase()
::\~\"o::
send {U+1E4F}
return


;; Glyph: 'ṏ' Descr: LATIN SMALL LETTER O WITH TILDE AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\~\"{o}::
send ^x8{Enter}1e4f{Enter}
return

#if GtkApplicationCase()
::\~\"{o}::
send ^+u1e4f{Enter}
return

#if OtherCase()
::\~\"{o}::
send {U+1E4F}
return


;; Glyph: 'Ṑ' Descr: LATIN CAPITAL LETTER O WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``O::
send ^x8{Enter}1e50{Enter}
return

#if GtkApplicationCase()
::\=\``O::
send ^+u1e50{Enter}
return

#if OtherCase()
::\=\``O::
send {U+1E50}
return


;; Glyph: 'Ṑ' Descr: LATIN CAPITAL LETTER O WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``{O}::
send ^x8{Enter}1e50{Enter}
return

#if GtkApplicationCase()
::\=\``{O}::
send ^+u1e50{Enter}
return

#if OtherCase()
::\=\``{O}::
send {U+1E50}
return


;; Glyph: 'ṑ' Descr: LATIN SMALL LETTER O WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``o::
send ^x8{Enter}1e51{Enter}
return

#if GtkApplicationCase()
::\=\``o::
send ^+u1e51{Enter}
return

#if OtherCase()
::\=\``o::
send {U+1E51}
return


;; Glyph: 'ṑ' Descr: LATIN SMALL LETTER O WITH MACRON AND GRAVE

#if EmacsCase() && EmacsEnabled
::\=\``{o}::
send ^x8{Enter}1e51{Enter}
return

#if GtkApplicationCase()
::\=\``{o}::
send ^+u1e51{Enter}
return

#if OtherCase()
::\=\``{o}::
send {U+1E51}
return


;; Glyph: 'Ṓ' Descr: LATIN CAPITAL LETTER O WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'O::
send ^x8{Enter}1e52{Enter}
return

#if GtkApplicationCase()
::\=\'O::
send ^+u1e52{Enter}
return

#if OtherCase()
::\=\'O::
send {U+1E52}
return


;; Glyph: 'Ṓ' Descr: LATIN CAPITAL LETTER O WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'{O}::
send ^x8{Enter}1e52{Enter}
return

#if GtkApplicationCase()
::\=\'{O}::
send ^+u1e52{Enter}
return

#if OtherCase()
::\=\'{O}::
send {U+1E52}
return


;; Glyph: 'ṓ' Descr: LATIN SMALL LETTER O WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'o::
send ^x8{Enter}1e53{Enter}
return

#if GtkApplicationCase()
::\=\'o::
send ^+u1e53{Enter}
return

#if OtherCase()
::\=\'o::
send {U+1E53}
return


;; Glyph: 'ṓ' Descr: LATIN SMALL LETTER O WITH MACRON AND ACUTE

#if EmacsCase() && EmacsEnabled
::\=\'{o}::
send ^x8{Enter}1e53{Enter}
return

#if GtkApplicationCase()
::\=\'{o}::
send ^+u1e53{Enter}
return

#if OtherCase()
::\=\'{o}::
send {U+1E53}
return


;; Glyph: 'Ṕ' Descr: LATIN CAPITAL LETTER P WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'P::
send ^x8{Enter}1e54{Enter}
return

#if GtkApplicationCase()
::\'P::
send ^+u1e54{Enter}
return

#if OtherCase()
::\'P::
send {U+1E54}
return


;; Glyph: 'Ṕ' Descr: LATIN CAPITAL LETTER P WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{P}::
send ^x8{Enter}1e54{Enter}
return

#if GtkApplicationCase()
::\'{P}::
send ^+u1e54{Enter}
return

#if OtherCase()
::\'{P}::
send {U+1E54}
return


;; Glyph: 'ṕ' Descr: LATIN SMALL LETTER P WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'p::
send ^x8{Enter}1e55{Enter}
return

#if GtkApplicationCase()
::\'p::
send ^+u1e55{Enter}
return

#if OtherCase()
::\'p::
send {U+1E55}
return


;; Glyph: 'ṕ' Descr: LATIN SMALL LETTER P WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{p}::
send ^x8{Enter}1e55{Enter}
return

#if GtkApplicationCase()
::\'{p}::
send ^+u1e55{Enter}
return

#if OtherCase()
::\'{p}::
send {U+1E55}
return


;; Glyph: 'Ṗ' Descr: LATIN CAPITAL LETTER P WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.P::
send ^x8{Enter}1e56{Enter}
return

#if GtkApplicationCase()
::\.P::
send ^+u1e56{Enter}
return

#if OtherCase()
::\.P::
send {U+1E56}
return


;; Glyph: 'Ṗ' Descr: LATIN CAPITAL LETTER P WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{P}::
send ^x8{Enter}1e56{Enter}
return

#if GtkApplicationCase()
::\.{P}::
send ^+u1e56{Enter}
return

#if OtherCase()
::\.{P}::
send {U+1E56}
return


;; Glyph: 'ṗ' Descr: LATIN SMALL LETTER P WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.p::
send ^x8{Enter}1e57{Enter}
return

#if GtkApplicationCase()
::\.p::
send ^+u1e57{Enter}
return

#if OtherCase()
::\.p::
send {U+1E57}
return


;; Glyph: 'ṗ' Descr: LATIN SMALL LETTER P WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{p}::
send ^x8{Enter}1e57{Enter}
return

#if GtkApplicationCase()
::\.{p}::
send ^+u1e57{Enter}
return

#if OtherCase()
::\.{p}::
send {U+1E57}
return


;; Glyph: 'Ṙ' Descr: LATIN CAPITAL LETTER R WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.R::
send ^x8{Enter}1e58{Enter}
return

#if GtkApplicationCase()
::\.R::
send ^+u1e58{Enter}
return

#if OtherCase()
::\.R::
send {U+1E58}
return


;; Glyph: 'Ṙ' Descr: LATIN CAPITAL LETTER R WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{R}::
send ^x8{Enter}1e58{Enter}
return

#if GtkApplicationCase()
::\.{R}::
send ^+u1e58{Enter}
return

#if OtherCase()
::\.{R}::
send {U+1E58}
return


;; Glyph: 'ṙ' Descr: LATIN SMALL LETTER R WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.r::
send ^x8{Enter}1e59{Enter}
return

#if GtkApplicationCase()
::\.r::
send ^+u1e59{Enter}
return

#if OtherCase()
::\.r::
send {U+1E59}
return


;; Glyph: 'ṙ' Descr: LATIN SMALL LETTER R WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{r}::
send ^x8{Enter}1e59{Enter}
return

#if GtkApplicationCase()
::\.{r}::
send ^+u1e59{Enter}
return

#if OtherCase()
::\.{r}::
send {U+1E59}
return


;; Glyph: 'Ṛ' Descr: LATIN CAPITAL LETTER R WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{R}::
send ^x8{Enter}1e5a{Enter}
return

#if GtkApplicationCase()
::\d{R}::
send ^+u1e5a{Enter}
return

#if OtherCase()
::\d{R}::
send {U+1E5A}
return


;; Glyph: 'ṛ' Descr: LATIN SMALL LETTER R WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{r}::
send ^x8{Enter}1e5b{Enter}
return

#if GtkApplicationCase()
::\d{r}::
send ^+u1e5b{Enter}
return

#if OtherCase()
::\d{r}::
send {U+1E5B}
return


;; Glyph: 'Ṝ' Descr: LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\=R::
send ^x8{Enter}1e5c{Enter}
return

#if GtkApplicationCase()
::\d\=R::
send ^+u1e5c{Enter}
return

#if OtherCase()
::\d\=R::
send {U+1E5C}
return


;; Glyph: 'Ṝ' Descr: LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\={R}::
send ^x8{Enter}1e5c{Enter}
return

#if GtkApplicationCase()
::\d\={R}::
send ^+u1e5c{Enter}
return

#if OtherCase()
::\d\={R}::
send {U+1E5C}
return


;; Glyph: 'ṝ' Descr: LATIN SMALL LETTER R WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\=r::
send ^x8{Enter}1e5d{Enter}
return

#if GtkApplicationCase()
::\d\=r::
send ^+u1e5d{Enter}
return

#if OtherCase()
::\d\=r::
send {U+1E5D}
return


;; Glyph: 'ṝ' Descr: LATIN SMALL LETTER R WITH DOT BELOW AND MACRON

#if EmacsCase() && EmacsEnabled
::\d\={r}::
send ^x8{Enter}1e5d{Enter}
return

#if GtkApplicationCase()
::\d\={r}::
send ^+u1e5d{Enter}
return

#if OtherCase()
::\d\={r}::
send {U+1E5D}
return


;; Glyph: 'Ṡ' Descr: LATIN CAPITAL LETTER S WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.S::
send ^x8{Enter}1e60{Enter}
return

#if GtkApplicationCase()
::\.S::
send ^+u1e60{Enter}
return

#if OtherCase()
::\.S::
send {U+1E60}
return


;; Glyph: 'Ṡ' Descr: LATIN CAPITAL LETTER S WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{S}::
send ^x8{Enter}1e60{Enter}
return

#if GtkApplicationCase()
::\.{S}::
send ^+u1e60{Enter}
return

#if OtherCase()
::\.{S}::
send {U+1E60}
return


;; Glyph: 'ṡ' Descr: LATIN SMALL LETTER S WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.s::
send ^x8{Enter}1e61{Enter}
return

#if GtkApplicationCase()
::\.s::
send ^+u1e61{Enter}
return

#if OtherCase()
::\.s::
send {U+1E61}
return


;; Glyph: 'ṡ' Descr: LATIN SMALL LETTER S WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{s}::
send ^x8{Enter}1e61{Enter}
return

#if GtkApplicationCase()
::\.{s}::
send ^+u1e61{Enter}
return

#if OtherCase()
::\.{s}::
send {U+1E61}
return


;; Glyph: 'Ṣ' Descr: LATIN CAPITAL LETTER S WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{S}::
send ^x8{Enter}1e62{Enter}
return

#if GtkApplicationCase()
::\d{S}::
send ^+u1e62{Enter}
return

#if OtherCase()
::\d{S}::
send {U+1E62}
return


;; Glyph: 'ṣ' Descr: LATIN SMALL LETTER S WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{s}::
send ^x8{Enter}1e63{Enter}
return

#if GtkApplicationCase()
::\d{s}::
send ^+u1e63{Enter}
return

#if OtherCase()
::\d{s}::
send {U+1E63}
return


;; Glyph: 'Ṥ' Descr: LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\'\.S::
send ^x8{Enter}1e64{Enter}
return

#if GtkApplicationCase()
::\'\.S::
send ^+u1e64{Enter}
return

#if OtherCase()
::\'\.S::
send {U+1E64}
return


;; Glyph: 'Ṥ' Descr: LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\'\.{S}::
send ^x8{Enter}1e64{Enter}
return

#if GtkApplicationCase()
::\'\.{S}::
send ^+u1e64{Enter}
return

#if OtherCase()
::\'\.{S}::
send {U+1E64}
return


;; Glyph: 'ṥ' Descr: LATIN SMALL LETTER S WITH ACUTE AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\'\.s::
send ^x8{Enter}1e65{Enter}
return

#if GtkApplicationCase()
::\'\.s::
send ^+u1e65{Enter}
return

#if OtherCase()
::\'\.s::
send {U+1E65}
return


;; Glyph: 'ṥ' Descr: LATIN SMALL LETTER S WITH ACUTE AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\'\.{s}::
send ^x8{Enter}1e65{Enter}
return

#if GtkApplicationCase()
::\'\.{s}::
send ^+u1e65{Enter}
return

#if OtherCase()
::\'\.{s}::
send {U+1E65}
return


;; Glyph: 'Ṧ' Descr: LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\v\.S::
send ^x8{Enter}1e66{Enter}
return

#if GtkApplicationCase()
::\v\.S::
send ^+u1e66{Enter}
return

#if OtherCase()
::\v\.S::
send {U+1E66}
return


;; Glyph: 'Ṧ' Descr: LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\v\.{S}::
send ^x8{Enter}1e66{Enter}
return

#if GtkApplicationCase()
::\v\.{S}::
send ^+u1e66{Enter}
return

#if OtherCase()
::\v\.{S}::
send {U+1E66}
return


;; Glyph: 'ṧ' Descr: LATIN SMALL LETTER S WITH CARON AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\v\.s::
send ^x8{Enter}1e67{Enter}
return

#if GtkApplicationCase()
::\v\.s::
send ^+u1e67{Enter}
return

#if OtherCase()
::\v\.s::
send {U+1E67}
return


;; Glyph: 'ṧ' Descr: LATIN SMALL LETTER S WITH CARON AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\v\.{s}::
send ^x8{Enter}1e67{Enter}
return

#if GtkApplicationCase()
::\v\.{s}::
send ^+u1e67{Enter}
return

#if OtherCase()
::\v\.{s}::
send {U+1E67}
return


;; Glyph: 'Ṩ' Descr: LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\d\.S::
send ^x8{Enter}1e68{Enter}
return

#if GtkApplicationCase()
::\d\.S::
send ^+u1e68{Enter}
return

#if OtherCase()
::\d\.S::
send {U+1E68}
return


;; Glyph: 'Ṩ' Descr: LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\d\.{S}::
send ^x8{Enter}1e68{Enter}
return

#if GtkApplicationCase()
::\d\.{S}::
send ^+u1e68{Enter}
return

#if OtherCase()
::\d\.{S}::
send {U+1E68}
return


;; Glyph: 'ṩ' Descr: LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\d\.s::
send ^x8{Enter}1e69{Enter}
return

#if GtkApplicationCase()
::\d\.s::
send ^+u1e69{Enter}
return

#if OtherCase()
::\d\.s::
send {U+1E69}
return


;; Glyph: 'ṩ' Descr: LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\d\.{s}::
send ^x8{Enter}1e69{Enter}
return

#if GtkApplicationCase()
::\d\.{s}::
send ^+u1e69{Enter}
return

#if OtherCase()
::\d\.{s}::
send {U+1E69}
return


;; Glyph: 'Ṫ' Descr: LATIN CAPITAL LETTER T WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.T::
send ^x8{Enter}1e6a{Enter}
return

#if GtkApplicationCase()
::\.T::
send ^+u1e6a{Enter}
return

#if OtherCase()
::\.T::
send {U+1E6A}
return


;; Glyph: 'Ṫ' Descr: LATIN CAPITAL LETTER T WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{T}::
send ^x8{Enter}1e6a{Enter}
return

#if GtkApplicationCase()
::\.{T}::
send ^+u1e6a{Enter}
return

#if OtherCase()
::\.{T}::
send {U+1E6A}
return


;; Glyph: 'ṫ' Descr: LATIN SMALL LETTER T WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.t::
send ^x8{Enter}1e6b{Enter}
return

#if GtkApplicationCase()
::\.t::
send ^+u1e6b{Enter}
return

#if OtherCase()
::\.t::
send {U+1E6B}
return


;; Glyph: 'ṫ' Descr: LATIN SMALL LETTER T WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{t}::
send ^x8{Enter}1e6b{Enter}
return

#if GtkApplicationCase()
::\.{t}::
send ^+u1e6b{Enter}
return

#if OtherCase()
::\.{t}::
send {U+1E6B}
return


;; Glyph: 'Ṭ' Descr: LATIN CAPITAL LETTER T WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{T}::
send ^x8{Enter}1e6c{Enter}
return

#if GtkApplicationCase()
::\d{T}::
send ^+u1e6c{Enter}
return

#if OtherCase()
::\d{T}::
send {U+1E6C}
return


;; Glyph: 'ṭ' Descr: LATIN SMALL LETTER T WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{t}::
send ^x8{Enter}1e6d{Enter}
return

#if GtkApplicationCase()
::\d{t}::
send ^+u1e6d{Enter}
return

#if OtherCase()
::\d{t}::
send {U+1E6D}
return


;; Glyph: 'Ṹ' Descr: LATIN CAPITAL LETTER U WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'U::
send ^x8{Enter}1e78{Enter}
return

#if GtkApplicationCase()
::\~\'U::
send ^+u1e78{Enter}
return

#if OtherCase()
::\~\'U::
send {U+1E78}
return


;; Glyph: 'Ṹ' Descr: LATIN CAPITAL LETTER U WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'{U}::
send ^x8{Enter}1e78{Enter}
return

#if GtkApplicationCase()
::\~\'{U}::
send ^+u1e78{Enter}
return

#if OtherCase()
::\~\'{U}::
send {U+1E78}
return


;; Glyph: 'ṹ' Descr: LATIN SMALL LETTER U WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'u::
send ^x8{Enter}1e79{Enter}
return

#if GtkApplicationCase()
::\~\'u::
send ^+u1e79{Enter}
return

#if OtherCase()
::\~\'u::
send {U+1E79}
return


;; Glyph: 'ṹ' Descr: LATIN SMALL LETTER U WITH TILDE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\~\'{u}::
send ^x8{Enter}1e79{Enter}
return

#if GtkApplicationCase()
::\~\'{u}::
send ^+u1e79{Enter}
return

#if OtherCase()
::\~\'{u}::
send {U+1E79}
return


;; Glyph: 'Ṻ' Descr: LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\=\"U::
send ^x8{Enter}1e7a{Enter}
return

#if GtkApplicationCase()
::\=\"U::
send ^+u1e7a{Enter}
return

#if OtherCase()
::\=\"U::
send {U+1E7A}
return


;; Glyph: 'Ṻ' Descr: LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\=\"{U}::
send ^x8{Enter}1e7a{Enter}
return

#if GtkApplicationCase()
::\=\"{U}::
send ^+u1e7a{Enter}
return

#if OtherCase()
::\=\"{U}::
send {U+1E7A}
return


;; Glyph: 'ṻ' Descr: LATIN SMALL LETTER U WITH MACRON AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\=\"u::
send ^x8{Enter}1e7b{Enter}
return

#if GtkApplicationCase()
::\=\"u::
send ^+u1e7b{Enter}
return

#if OtherCase()
::\=\"u::
send {U+1E7B}
return


;; Glyph: 'ṻ' Descr: LATIN SMALL LETTER U WITH MACRON AND DIAERESIS

#if EmacsCase() && EmacsEnabled
::\=\"{u}::
send ^x8{Enter}1e7b{Enter}
return

#if GtkApplicationCase()
::\=\"{u}::
send ^+u1e7b{Enter}
return

#if OtherCase()
::\=\"{u}::
send {U+1E7B}
return


;; Glyph: 'Ṽ' Descr: LATIN CAPITAL LETTER V WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~V::
send ^x8{Enter}1e7c{Enter}
return

#if GtkApplicationCase()
::\~V::
send ^+u1e7c{Enter}
return

#if OtherCase()
::\~V::
send {U+1E7C}
return


;; Glyph: 'Ṽ' Descr: LATIN CAPITAL LETTER V WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{V}::
send ^x8{Enter}1e7c{Enter}
return

#if GtkApplicationCase()
::\~{V}::
send ^+u1e7c{Enter}
return

#if OtherCase()
::\~{V}::
send {U+1E7C}
return


;; Glyph: 'ṽ' Descr: LATIN SMALL LETTER V WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~v::
send ^x8{Enter}1e7d{Enter}
return

#if GtkApplicationCase()
::\~v::
send ^+u1e7d{Enter}
return

#if OtherCase()
::\~v::
send {U+1E7D}
return


;; Glyph: 'ṽ' Descr: LATIN SMALL LETTER V WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{v}::
send ^x8{Enter}1e7d{Enter}
return

#if GtkApplicationCase()
::\~{v}::
send ^+u1e7d{Enter}
return

#if OtherCase()
::\~{v}::
send {U+1E7D}
return


;; Glyph: 'Ṿ' Descr: LATIN CAPITAL LETTER V WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{V}::
send ^x8{Enter}1e7e{Enter}
return

#if GtkApplicationCase()
::\d{V}::
send ^+u1e7e{Enter}
return

#if OtherCase()
::\d{V}::
send {U+1E7E}
return


;; Glyph: 'ṿ' Descr: LATIN SMALL LETTER V WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{v}::
send ^x8{Enter}1e7f{Enter}
return

#if GtkApplicationCase()
::\d{v}::
send ^+u1e7f{Enter}
return

#if OtherCase()
::\d{v}::
send {U+1E7F}
return


;; Glyph: 'Ẁ' Descr: LATIN CAPITAL LETTER W WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``W::
send ^x8{Enter}1e80{Enter}
return

#if GtkApplicationCase()
::\``W::
send ^+u1e80{Enter}
return

#if OtherCase()
::\``W::
send {U+1E80}
return


;; Glyph: 'Ẁ' Descr: LATIN CAPITAL LETTER W WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{W}::
send ^x8{Enter}1e80{Enter}
return

#if GtkApplicationCase()
::\``{W}::
send ^+u1e80{Enter}
return

#if OtherCase()
::\``{W}::
send {U+1E80}
return


;; Glyph: 'ẁ' Descr: LATIN SMALL LETTER W WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``w::
send ^x8{Enter}1e81{Enter}
return

#if GtkApplicationCase()
::\``w::
send ^+u1e81{Enter}
return

#if OtherCase()
::\``w::
send {U+1E81}
return


;; Glyph: 'ẁ' Descr: LATIN SMALL LETTER W WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{w}::
send ^x8{Enter}1e81{Enter}
return

#if GtkApplicationCase()
::\``{w}::
send ^+u1e81{Enter}
return

#if OtherCase()
::\``{w}::
send {U+1E81}
return


;; Glyph: 'Ẃ' Descr: LATIN CAPITAL LETTER W WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'W::
send ^x8{Enter}1e82{Enter}
return

#if GtkApplicationCase()
::\'W::
send ^+u1e82{Enter}
return

#if OtherCase()
::\'W::
send {U+1E82}
return


;; Glyph: 'Ẃ' Descr: LATIN CAPITAL LETTER W WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{W}::
send ^x8{Enter}1e82{Enter}
return

#if GtkApplicationCase()
::\'{W}::
send ^+u1e82{Enter}
return

#if OtherCase()
::\'{W}::
send {U+1E82}
return


;; Glyph: 'ẃ' Descr: LATIN SMALL LETTER W WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'w::
send ^x8{Enter}1e83{Enter}
return

#if GtkApplicationCase()
::\'w::
send ^+u1e83{Enter}
return

#if OtherCase()
::\'w::
send {U+1E83}
return


;; Glyph: 'ẃ' Descr: LATIN SMALL LETTER W WITH ACUTE

#if EmacsCase() && EmacsEnabled
::\'{w}::
send ^x8{Enter}1e83{Enter}
return

#if GtkApplicationCase()
::\'{w}::
send ^+u1e83{Enter}
return

#if OtherCase()
::\'{w}::
send {U+1E83}
return


;; Glyph: 'Ẅ' Descr: LATIN CAPITAL LETTER W WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"W::
send ^x8{Enter}1e84{Enter}
return

#if GtkApplicationCase()
::\"W::
send ^+u1e84{Enter}
return

#if OtherCase()
::\"W::
send {U+1E84}
return


;; Glyph: 'Ẅ' Descr: LATIN CAPITAL LETTER W WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{W}::
send ^x8{Enter}1e84{Enter}
return

#if GtkApplicationCase()
::\"{W}::
send ^+u1e84{Enter}
return

#if OtherCase()
::\"{W}::
send {U+1E84}
return


;; Glyph: 'ẅ' Descr: LATIN SMALL LETTER W WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"w::
send ^x8{Enter}1e85{Enter}
return

#if GtkApplicationCase()
::\"w::
send ^+u1e85{Enter}
return

#if OtherCase()
::\"w::
send {U+1E85}
return


;; Glyph: 'ẅ' Descr: LATIN SMALL LETTER W WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{w}::
send ^x8{Enter}1e85{Enter}
return

#if GtkApplicationCase()
::\"{w}::
send ^+u1e85{Enter}
return

#if OtherCase()
::\"{w}::
send {U+1E85}
return


;; Glyph: 'Ẇ' Descr: LATIN CAPITAL LETTER W WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.W::
send ^x8{Enter}1e86{Enter}
return

#if GtkApplicationCase()
::\.W::
send ^+u1e86{Enter}
return

#if OtherCase()
::\.W::
send {U+1E86}
return


;; Glyph: 'Ẇ' Descr: LATIN CAPITAL LETTER W WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{W}::
send ^x8{Enter}1e86{Enter}
return

#if GtkApplicationCase()
::\.{W}::
send ^+u1e86{Enter}
return

#if OtherCase()
::\.{W}::
send {U+1E86}
return


;; Glyph: 'ẇ' Descr: LATIN SMALL LETTER W WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.w::
send ^x8{Enter}1e87{Enter}
return

#if GtkApplicationCase()
::\.w::
send ^+u1e87{Enter}
return

#if OtherCase()
::\.w::
send {U+1E87}
return


;; Glyph: 'ẇ' Descr: LATIN SMALL LETTER W WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{w}::
send ^x8{Enter}1e87{Enter}
return

#if GtkApplicationCase()
::\.{w}::
send ^+u1e87{Enter}
return

#if OtherCase()
::\.{w}::
send {U+1E87}
return


;; Glyph: 'Ẉ' Descr: LATIN CAPITAL LETTER W WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{W}::
send ^x8{Enter}1e88{Enter}
return

#if GtkApplicationCase()
::\d{W}::
send ^+u1e88{Enter}
return

#if OtherCase()
::\d{W}::
send {U+1E88}
return


;; Glyph: 'ẉ' Descr: LATIN SMALL LETTER W WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{w}::
send ^x8{Enter}1e89{Enter}
return

#if GtkApplicationCase()
::\d{w}::
send ^+u1e89{Enter}
return

#if OtherCase()
::\d{w}::
send {U+1E89}
return


;; Glyph: 'Ẋ' Descr: LATIN CAPITAL LETTER X WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.X::
send ^x8{Enter}1e8a{Enter}
return

#if GtkApplicationCase()
::\.X::
send ^+u1e8a{Enter}
return

#if OtherCase()
::\.X::
send {U+1E8A}
return


;; Glyph: 'Ẋ' Descr: LATIN CAPITAL LETTER X WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{X}::
send ^x8{Enter}1e8a{Enter}
return

#if GtkApplicationCase()
::\.{X}::
send ^+u1e8a{Enter}
return

#if OtherCase()
::\.{X}::
send {U+1E8A}
return


;; Glyph: 'ẋ' Descr: LATIN SMALL LETTER X WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.x::
send ^x8{Enter}1e8b{Enter}
return

#if GtkApplicationCase()
::\.x::
send ^+u1e8b{Enter}
return

#if OtherCase()
::\.x::
send {U+1E8B}
return


;; Glyph: 'ẋ' Descr: LATIN SMALL LETTER X WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{x}::
send ^x8{Enter}1e8b{Enter}
return

#if GtkApplicationCase()
::\.{x}::
send ^+u1e8b{Enter}
return

#if OtherCase()
::\.{x}::
send {U+1E8B}
return


;; Glyph: 'Ẍ' Descr: LATIN CAPITAL LETTER X WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"X::
send ^x8{Enter}1e8c{Enter}
return

#if GtkApplicationCase()
::\"X::
send ^+u1e8c{Enter}
return

#if OtherCase()
::\"X::
send {U+1E8C}
return


;; Glyph: 'Ẍ' Descr: LATIN CAPITAL LETTER X WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{X}::
send ^x8{Enter}1e8c{Enter}
return

#if GtkApplicationCase()
::\"{X}::
send ^+u1e8c{Enter}
return

#if OtherCase()
::\"{X}::
send {U+1E8C}
return


;; Glyph: 'ẍ' Descr: LATIN SMALL LETTER X WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"x::
send ^x8{Enter}1e8d{Enter}
return

#if GtkApplicationCase()
::\"x::
send ^+u1e8d{Enter}
return

#if OtherCase()
::\"x::
send {U+1E8D}
return


;; Glyph: 'ẍ' Descr: LATIN SMALL LETTER X WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{x}::
send ^x8{Enter}1e8d{Enter}
return

#if GtkApplicationCase()
::\"{x}::
send ^+u1e8d{Enter}
return

#if OtherCase()
::\"{x}::
send {U+1E8D}
return


;; Glyph: 'Ẏ' Descr: LATIN CAPITAL LETTER Y WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.Y::
send ^x8{Enter}1e8e{Enter}
return

#if GtkApplicationCase()
::\.Y::
send ^+u1e8e{Enter}
return

#if OtherCase()
::\.Y::
send {U+1E8E}
return


;; Glyph: 'Ẏ' Descr: LATIN CAPITAL LETTER Y WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{Y}::
send ^x8{Enter}1e8e{Enter}
return

#if GtkApplicationCase()
::\.{Y}::
send ^+u1e8e{Enter}
return

#if OtherCase()
::\.{Y}::
send {U+1E8E}
return


;; Glyph: 'ẏ' Descr: LATIN SMALL LETTER Y WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.y::
send ^x8{Enter}1e8f{Enter}
return

#if GtkApplicationCase()
::\.y::
send ^+u1e8f{Enter}
return

#if OtherCase()
::\.y::
send {U+1E8F}
return


;; Glyph: 'ẏ' Descr: LATIN SMALL LETTER Y WITH DOT ABOVE

#if EmacsCase() && EmacsEnabled
::\.{y}::
send ^x8{Enter}1e8f{Enter}
return

#if GtkApplicationCase()
::\.{y}::
send ^+u1e8f{Enter}
return

#if OtherCase()
::\.{y}::
send {U+1E8F}
return


;; Glyph: 'Ẑ' Descr: LATIN CAPITAL LETTER Z WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^Z::
send ^x8{Enter}1e90{Enter}
return

#if GtkApplicationCase()
::\^Z::
send ^+u1e90{Enter}
return

#if OtherCase()
::\^Z::
send {U+1E90}
return


;; Glyph: 'Ẑ' Descr: LATIN CAPITAL LETTER Z WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{Z}::
send ^x8{Enter}1e90{Enter}
return

#if GtkApplicationCase()
::\^{Z}::
send ^+u1e90{Enter}
return

#if OtherCase()
::\^{Z}::
send {U+1E90}
return


;; Glyph: 'ẑ' Descr: LATIN SMALL LETTER Z WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^z::
send ^x8{Enter}1e91{Enter}
return

#if GtkApplicationCase()
::\^z::
send ^+u1e91{Enter}
return

#if OtherCase()
::\^z::
send {U+1E91}
return


;; Glyph: 'ẑ' Descr: LATIN SMALL LETTER Z WITH CIRCUMFLEX

#if EmacsCase() && EmacsEnabled
::\^{z}::
send ^x8{Enter}1e91{Enter}
return

#if GtkApplicationCase()
::\^{z}::
send ^+u1e91{Enter}
return

#if OtherCase()
::\^{z}::
send {U+1E91}
return


;; Glyph: 'Ẓ' Descr: LATIN CAPITAL LETTER Z WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{Z}::
send ^x8{Enter}1e92{Enter}
return

#if GtkApplicationCase()
::\d{Z}::
send ^+u1e92{Enter}
return

#if OtherCase()
::\d{Z}::
send {U+1E92}
return


;; Glyph: 'ẓ' Descr: LATIN SMALL LETTER Z WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{z}::
send ^x8{Enter}1e93{Enter}
return

#if GtkApplicationCase()
::\d{z}::
send ^+u1e93{Enter}
return

#if OtherCase()
::\d{z}::
send {U+1E93}
return


;; Glyph: 'ẗ' Descr: LATIN SMALL LETTER T WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"t::
send ^x8{Enter}1e97{Enter}
return

#if GtkApplicationCase()
::\"t::
send ^+u1e97{Enter}
return

#if OtherCase()
::\"t::
send {U+1E97}
return


;; Glyph: 'ẗ' Descr: LATIN SMALL LETTER T WITH DIAERESIS

#if EmacsCase() && EmacsEnabled
::\"{t}::
send ^x8{Enter}1e97{Enter}
return

#if GtkApplicationCase()
::\"{t}::
send ^+u1e97{Enter}
return

#if OtherCase()
::\"{t}::
send {U+1E97}
return


;; Glyph: 'Ạ' Descr: LATIN CAPITAL LETTER A WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{A}::
send ^x8{Enter}1ea0{Enter}
return

#if GtkApplicationCase()
::\d{A}::
send ^+u1ea0{Enter}
return

#if OtherCase()
::\d{A}::
send {U+1EA0}
return


;; Glyph: 'ạ' Descr: LATIN SMALL LETTER A WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{a}::
send ^x8{Enter}1ea1{Enter}
return

#if GtkApplicationCase()
::\d{a}::
send ^+u1ea1{Enter}
return

#if OtherCase()
::\d{a}::
send {U+1EA1}
return


;; Glyph: 'Ấ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'A::
send ^x8{Enter}1ea4{Enter}
return

#if GtkApplicationCase()
::\^\'A::
send ^+u1ea4{Enter}
return

#if OtherCase()
::\^\'A::
send {U+1EA4}
return


;; Glyph: 'Ấ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{A}::
send ^x8{Enter}1ea4{Enter}
return

#if GtkApplicationCase()
::\^\'{A}::
send ^+u1ea4{Enter}
return

#if OtherCase()
::\^\'{A}::
send {U+1EA4}
return


;; Glyph: 'ấ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'a::
send ^x8{Enter}1ea5{Enter}
return

#if GtkApplicationCase()
::\^\'a::
send ^+u1ea5{Enter}
return

#if OtherCase()
::\^\'a::
send {U+1EA5}
return


;; Glyph: 'ấ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{a}::
send ^x8{Enter}1ea5{Enter}
return

#if GtkApplicationCase()
::\^\'{a}::
send ^+u1ea5{Enter}
return

#if OtherCase()
::\^\'{a}::
send {U+1EA5}
return


;; Glyph: 'Ầ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``A::
send ^x8{Enter}1ea6{Enter}
return

#if GtkApplicationCase()
::\^\``A::
send ^+u1ea6{Enter}
return

#if OtherCase()
::\^\``A::
send {U+1EA6}
return


;; Glyph: 'Ầ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{A}::
send ^x8{Enter}1ea6{Enter}
return

#if GtkApplicationCase()
::\^\``{A}::
send ^+u1ea6{Enter}
return

#if OtherCase()
::\^\``{A}::
send {U+1EA6}
return


;; Glyph: 'ầ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``a::
send ^x8{Enter}1ea7{Enter}
return

#if GtkApplicationCase()
::\^\``a::
send ^+u1ea7{Enter}
return

#if OtherCase()
::\^\``a::
send {U+1EA7}
return


;; Glyph: 'ầ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{a}::
send ^x8{Enter}1ea7{Enter}
return

#if GtkApplicationCase()
::\^\``{a}::
send ^+u1ea7{Enter}
return

#if OtherCase()
::\^\``{a}::
send {U+1EA7}
return


;; Glyph: 'Ẫ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~A::
send ^x8{Enter}1eaa{Enter}
return

#if GtkApplicationCase()
::\^\~A::
send ^+u1eaa{Enter}
return

#if OtherCase()
::\^\~A::
send {U+1EAA}
return


;; Glyph: 'Ẫ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{A}::
send ^x8{Enter}1eaa{Enter}
return

#if GtkApplicationCase()
::\^\~{A}::
send ^+u1eaa{Enter}
return

#if OtherCase()
::\^\~{A}::
send {U+1EAA}
return


;; Glyph: 'ẫ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~a::
send ^x8{Enter}1eab{Enter}
return

#if GtkApplicationCase()
::\^\~a::
send ^+u1eab{Enter}
return

#if OtherCase()
::\^\~a::
send {U+1EAB}
return


;; Glyph: 'ẫ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{a}::
send ^x8{Enter}1eab{Enter}
return

#if GtkApplicationCase()
::\^\~{a}::
send ^+u1eab{Enter}
return

#if OtherCase()
::\^\~{a}::
send {U+1EAB}
return


;; Glyph: 'Ậ' Descr: LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{A}::
send ^x8{Enter}1eac{Enter}
return

#if GtkApplicationCase()
::\^\d{A}::
send ^+u1eac{Enter}
return

#if OtherCase()
::\^\d{A}::
send {U+1EAC}
return


;; Glyph: 'ậ' Descr: LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{a}::
send ^x8{Enter}1ead{Enter}
return

#if GtkApplicationCase()
::\^\d{a}::
send ^+u1ead{Enter}
return

#if OtherCase()
::\^\d{a}::
send {U+1EAD}
return


;; Glyph: 'Ắ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\u\'A::
send ^x8{Enter}1eae{Enter}
return

#if GtkApplicationCase()
::\u\'A::
send ^+u1eae{Enter}
return

#if OtherCase()
::\u\'A::
send {U+1EAE}
return


;; Glyph: 'Ắ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\u\'{A}::
send ^x8{Enter}1eae{Enter}
return

#if GtkApplicationCase()
::\u\'{A}::
send ^+u1eae{Enter}
return

#if OtherCase()
::\u\'{A}::
send {U+1EAE}
return


;; Glyph: 'ắ' Descr: LATIN SMALL LETTER A WITH BREVE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\u\'a::
send ^x8{Enter}1eaf{Enter}
return

#if GtkApplicationCase()
::\u\'a::
send ^+u1eaf{Enter}
return

#if OtherCase()
::\u\'a::
send {U+1EAF}
return


;; Glyph: 'ắ' Descr: LATIN SMALL LETTER A WITH BREVE AND ACUTE

#if EmacsCase() && EmacsEnabled
::\u\'{a}::
send ^x8{Enter}1eaf{Enter}
return

#if GtkApplicationCase()
::\u\'{a}::
send ^+u1eaf{Enter}
return

#if OtherCase()
::\u\'{a}::
send {U+1EAF}
return


;; Glyph: 'Ằ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND GRAVE

#if EmacsCase() && EmacsEnabled
::\u\``A::
send ^x8{Enter}1eb0{Enter}
return

#if GtkApplicationCase()
::\u\``A::
send ^+u1eb0{Enter}
return

#if OtherCase()
::\u\``A::
send {U+1EB0}
return


;; Glyph: 'Ằ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND GRAVE

#if EmacsCase() && EmacsEnabled
::\u\``{A}::
send ^x8{Enter}1eb0{Enter}
return

#if GtkApplicationCase()
::\u\``{A}::
send ^+u1eb0{Enter}
return

#if OtherCase()
::\u\``{A}::
send {U+1EB0}
return


;; Glyph: 'ằ' Descr: LATIN SMALL LETTER A WITH BREVE AND GRAVE

#if EmacsCase() && EmacsEnabled
::\u\``a::
send ^x8{Enter}1eb1{Enter}
return

#if GtkApplicationCase()
::\u\``a::
send ^+u1eb1{Enter}
return

#if OtherCase()
::\u\``a::
send {U+1EB1}
return


;; Glyph: 'ằ' Descr: LATIN SMALL LETTER A WITH BREVE AND GRAVE

#if EmacsCase() && EmacsEnabled
::\u\``{a}::
send ^x8{Enter}1eb1{Enter}
return

#if GtkApplicationCase()
::\u\``{a}::
send ^+u1eb1{Enter}
return

#if OtherCase()
::\u\``{a}::
send {U+1EB1}
return


;; Glyph: 'Ẵ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND TILDE

#if EmacsCase() && EmacsEnabled
::\u\~A::
send ^x8{Enter}1eb4{Enter}
return

#if GtkApplicationCase()
::\u\~A::
send ^+u1eb4{Enter}
return

#if OtherCase()
::\u\~A::
send {U+1EB4}
return


;; Glyph: 'Ẵ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND TILDE

#if EmacsCase() && EmacsEnabled
::\u\~{A}::
send ^x8{Enter}1eb4{Enter}
return

#if GtkApplicationCase()
::\u\~{A}::
send ^+u1eb4{Enter}
return

#if OtherCase()
::\u\~{A}::
send {U+1EB4}
return


;; Glyph: 'ẵ' Descr: LATIN SMALL LETTER A WITH BREVE AND TILDE

#if EmacsCase() && EmacsEnabled
::\u\~a::
send ^x8{Enter}1eb5{Enter}
return

#if GtkApplicationCase()
::\u\~a::
send ^+u1eb5{Enter}
return

#if OtherCase()
::\u\~a::
send {U+1EB5}
return


;; Glyph: 'ẵ' Descr: LATIN SMALL LETTER A WITH BREVE AND TILDE

#if EmacsCase() && EmacsEnabled
::\u\~{a}::
send ^x8{Enter}1eb5{Enter}
return

#if GtkApplicationCase()
::\u\~{a}::
send ^+u1eb5{Enter}
return

#if OtherCase()
::\u\~{a}::
send {U+1EB5}
return


;; Glyph: 'Ặ' Descr: LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\u\d{A}::
send ^x8{Enter}1eb6{Enter}
return

#if GtkApplicationCase()
::\u\d{A}::
send ^+u1eb6{Enter}
return

#if OtherCase()
::\u\d{A}::
send {U+1EB6}
return


;; Glyph: 'ặ' Descr: LATIN SMALL LETTER A WITH BREVE AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\u\d{a}::
send ^x8{Enter}1eb7{Enter}
return

#if GtkApplicationCase()
::\u\d{a}::
send ^+u1eb7{Enter}
return

#if OtherCase()
::\u\d{a}::
send {U+1EB7}
return


;; Glyph: 'Ẹ' Descr: LATIN CAPITAL LETTER E WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{E}::
send ^x8{Enter}1eb8{Enter}
return

#if GtkApplicationCase()
::\d{E}::
send ^+u1eb8{Enter}
return

#if OtherCase()
::\d{E}::
send {U+1EB8}
return


;; Glyph: 'ẹ' Descr: LATIN SMALL LETTER E WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{e}::
send ^x8{Enter}1eb9{Enter}
return

#if GtkApplicationCase()
::\d{e}::
send ^+u1eb9{Enter}
return

#if OtherCase()
::\d{e}::
send {U+1EB9}
return


;; Glyph: 'Ẽ' Descr: LATIN CAPITAL LETTER E WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~E::
send ^x8{Enter}1ebc{Enter}
return

#if GtkApplicationCase()
::\~E::
send ^+u1ebc{Enter}
return

#if OtherCase()
::\~E::
send {U+1EBC}
return


;; Glyph: 'Ẽ' Descr: LATIN CAPITAL LETTER E WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{E}::
send ^x8{Enter}1ebc{Enter}
return

#if GtkApplicationCase()
::\~{E}::
send ^+u1ebc{Enter}
return

#if OtherCase()
::\~{E}::
send {U+1EBC}
return


;; Glyph: 'ẽ' Descr: LATIN SMALL LETTER E WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~e::
send ^x8{Enter}1ebd{Enter}
return

#if GtkApplicationCase()
::\~e::
send ^+u1ebd{Enter}
return

#if OtherCase()
::\~e::
send {U+1EBD}
return


;; Glyph: 'ẽ' Descr: LATIN SMALL LETTER E WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{e}::
send ^x8{Enter}1ebd{Enter}
return

#if GtkApplicationCase()
::\~{e}::
send ^+u1ebd{Enter}
return

#if OtherCase()
::\~{e}::
send {U+1EBD}
return


;; Glyph: 'Ế' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'E::
send ^x8{Enter}1ebe{Enter}
return

#if GtkApplicationCase()
::\^\'E::
send ^+u1ebe{Enter}
return

#if OtherCase()
::\^\'E::
send {U+1EBE}
return


;; Glyph: 'Ế' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{E}::
send ^x8{Enter}1ebe{Enter}
return

#if GtkApplicationCase()
::\^\'{E}::
send ^+u1ebe{Enter}
return

#if OtherCase()
::\^\'{E}::
send {U+1EBE}
return


;; Glyph: 'ế' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'e::
send ^x8{Enter}1ebf{Enter}
return

#if GtkApplicationCase()
::\^\'e::
send ^+u1ebf{Enter}
return

#if OtherCase()
::\^\'e::
send {U+1EBF}
return


;; Glyph: 'ế' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{e}::
send ^x8{Enter}1ebf{Enter}
return

#if GtkApplicationCase()
::\^\'{e}::
send ^+u1ebf{Enter}
return

#if OtherCase()
::\^\'{e}::
send {U+1EBF}
return


;; Glyph: 'Ề' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``E::
send ^x8{Enter}1ec0{Enter}
return

#if GtkApplicationCase()
::\^\``E::
send ^+u1ec0{Enter}
return

#if OtherCase()
::\^\``E::
send {U+1EC0}
return


;; Glyph: 'Ề' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{E}::
send ^x8{Enter}1ec0{Enter}
return

#if GtkApplicationCase()
::\^\``{E}::
send ^+u1ec0{Enter}
return

#if OtherCase()
::\^\``{E}::
send {U+1EC0}
return


;; Glyph: 'ề' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``e::
send ^x8{Enter}1ec1{Enter}
return

#if GtkApplicationCase()
::\^\``e::
send ^+u1ec1{Enter}
return

#if OtherCase()
::\^\``e::
send {U+1EC1}
return


;; Glyph: 'ề' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{e}::
send ^x8{Enter}1ec1{Enter}
return

#if GtkApplicationCase()
::\^\``{e}::
send ^+u1ec1{Enter}
return

#if OtherCase()
::\^\``{e}::
send {U+1EC1}
return


;; Glyph: 'Ễ' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~E::
send ^x8{Enter}1ec4{Enter}
return

#if GtkApplicationCase()
::\^\~E::
send ^+u1ec4{Enter}
return

#if OtherCase()
::\^\~E::
send {U+1EC4}
return


;; Glyph: 'Ễ' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{E}::
send ^x8{Enter}1ec4{Enter}
return

#if GtkApplicationCase()
::\^\~{E}::
send ^+u1ec4{Enter}
return

#if OtherCase()
::\^\~{E}::
send {U+1EC4}
return


;; Glyph: 'ễ' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~e::
send ^x8{Enter}1ec5{Enter}
return

#if GtkApplicationCase()
::\^\~e::
send ^+u1ec5{Enter}
return

#if OtherCase()
::\^\~e::
send {U+1EC5}
return


;; Glyph: 'ễ' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{e}::
send ^x8{Enter}1ec5{Enter}
return

#if GtkApplicationCase()
::\^\~{e}::
send ^+u1ec5{Enter}
return

#if OtherCase()
::\^\~{e}::
send {U+1EC5}
return


;; Glyph: 'Ệ' Descr: LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{E}::
send ^x8{Enter}1ec6{Enter}
return

#if GtkApplicationCase()
::\^\d{E}::
send ^+u1ec6{Enter}
return

#if OtherCase()
::\^\d{E}::
send {U+1EC6}
return


;; Glyph: 'ệ' Descr: LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{e}::
send ^x8{Enter}1ec7{Enter}
return

#if GtkApplicationCase()
::\^\d{e}::
send ^+u1ec7{Enter}
return

#if OtherCase()
::\^\d{e}::
send {U+1EC7}
return


;; Glyph: 'Ị' Descr: LATIN CAPITAL LETTER I WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{I}::
send ^x8{Enter}1eca{Enter}
return

#if GtkApplicationCase()
::\d{I}::
send ^+u1eca{Enter}
return

#if OtherCase()
::\d{I}::
send {U+1ECA}
return


;; Glyph: 'ị' Descr: LATIN SMALL LETTER I WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{i}::
send ^x8{Enter}1ecb{Enter}
return

#if GtkApplicationCase()
::\d{i}::
send ^+u1ecb{Enter}
return

#if OtherCase()
::\d{i}::
send {U+1ECB}
return


;; Glyph: 'Ọ' Descr: LATIN CAPITAL LETTER O WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{O}::
send ^x8{Enter}1ecc{Enter}
return

#if GtkApplicationCase()
::\d{O}::
send ^+u1ecc{Enter}
return

#if OtherCase()
::\d{O}::
send {U+1ECC}
return


;; Glyph: 'ọ' Descr: LATIN SMALL LETTER O WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{o}::
send ^x8{Enter}1ecd{Enter}
return

#if GtkApplicationCase()
::\d{o}::
send ^+u1ecd{Enter}
return

#if OtherCase()
::\d{o}::
send {U+1ECD}
return


;; Glyph: 'Ố' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'O::
send ^x8{Enter}1ed0{Enter}
return

#if GtkApplicationCase()
::\^\'O::
send ^+u1ed0{Enter}
return

#if OtherCase()
::\^\'O::
send {U+1ED0}
return


;; Glyph: 'Ố' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{O}::
send ^x8{Enter}1ed0{Enter}
return

#if GtkApplicationCase()
::\^\'{O}::
send ^+u1ed0{Enter}
return

#if OtherCase()
::\^\'{O}::
send {U+1ED0}
return


;; Glyph: 'ố' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'o::
send ^x8{Enter}1ed1{Enter}
return

#if GtkApplicationCase()
::\^\'o::
send ^+u1ed1{Enter}
return

#if OtherCase()
::\^\'o::
send {U+1ED1}
return


;; Glyph: 'ố' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE

#if EmacsCase() && EmacsEnabled
::\^\'{o}::
send ^x8{Enter}1ed1{Enter}
return

#if GtkApplicationCase()
::\^\'{o}::
send ^+u1ed1{Enter}
return

#if OtherCase()
::\^\'{o}::
send {U+1ED1}
return


;; Glyph: 'Ồ' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``O::
send ^x8{Enter}1ed2{Enter}
return

#if GtkApplicationCase()
::\^\``O::
send ^+u1ed2{Enter}
return

#if OtherCase()
::\^\``O::
send {U+1ED2}
return


;; Glyph: 'Ồ' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{O}::
send ^x8{Enter}1ed2{Enter}
return

#if GtkApplicationCase()
::\^\``{O}::
send ^+u1ed2{Enter}
return

#if OtherCase()
::\^\``{O}::
send {U+1ED2}
return


;; Glyph: 'ồ' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``o::
send ^x8{Enter}1ed3{Enter}
return

#if GtkApplicationCase()
::\^\``o::
send ^+u1ed3{Enter}
return

#if OtherCase()
::\^\``o::
send {U+1ED3}
return


;; Glyph: 'ồ' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE

#if EmacsCase() && EmacsEnabled
::\^\``{o}::
send ^x8{Enter}1ed3{Enter}
return

#if GtkApplicationCase()
::\^\``{o}::
send ^+u1ed3{Enter}
return

#if OtherCase()
::\^\``{o}::
send {U+1ED3}
return


;; Glyph: 'Ỗ' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~O::
send ^x8{Enter}1ed6{Enter}
return

#if GtkApplicationCase()
::\^\~O::
send ^+u1ed6{Enter}
return

#if OtherCase()
::\^\~O::
send {U+1ED6}
return


;; Glyph: 'Ỗ' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{O}::
send ^x8{Enter}1ed6{Enter}
return

#if GtkApplicationCase()
::\^\~{O}::
send ^+u1ed6{Enter}
return

#if OtherCase()
::\^\~{O}::
send {U+1ED6}
return


;; Glyph: 'ỗ' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~o::
send ^x8{Enter}1ed7{Enter}
return

#if GtkApplicationCase()
::\^\~o::
send ^+u1ed7{Enter}
return

#if OtherCase()
::\^\~o::
send {U+1ED7}
return


;; Glyph: 'ỗ' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE

#if EmacsCase() && EmacsEnabled
::\^\~{o}::
send ^x8{Enter}1ed7{Enter}
return

#if GtkApplicationCase()
::\^\~{o}::
send ^+u1ed7{Enter}
return

#if OtherCase()
::\^\~{o}::
send {U+1ED7}
return


;; Glyph: 'Ộ' Descr: LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{O}::
send ^x8{Enter}1ed8{Enter}
return

#if GtkApplicationCase()
::\^\d{O}::
send ^+u1ed8{Enter}
return

#if OtherCase()
::\^\d{O}::
send {U+1ED8}
return


;; Glyph: 'ộ' Descr: LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW

#if EmacsCase() && EmacsEnabled
::\^\d{o}::
send ^x8{Enter}1ed9{Enter}
return

#if GtkApplicationCase()
::\^\d{o}::
send ^+u1ed9{Enter}
return

#if OtherCase()
::\^\d{o}::
send {U+1ED9}
return


;; Glyph: 'Ụ' Descr: LATIN CAPITAL LETTER U WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{U}::
send ^x8{Enter}1ee4{Enter}
return

#if GtkApplicationCase()
::\d{U}::
send ^+u1ee4{Enter}
return

#if OtherCase()
::\d{U}::
send {U+1EE4}
return


;; Glyph: 'ụ' Descr: LATIN SMALL LETTER U WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{u}::
send ^x8{Enter}1ee5{Enter}
return

#if GtkApplicationCase()
::\d{u}::
send ^+u1ee5{Enter}
return

#if OtherCase()
::\d{u}::
send {U+1EE5}
return


;; Glyph: 'Ỳ' Descr: LATIN CAPITAL LETTER Y WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``Y::
send ^x8{Enter}1ef2{Enter}
return

#if GtkApplicationCase()
::\``Y::
send ^+u1ef2{Enter}
return

#if OtherCase()
::\``Y::
send {U+1EF2}
return


;; Glyph: 'Ỳ' Descr: LATIN CAPITAL LETTER Y WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{Y}::
send ^x8{Enter}1ef2{Enter}
return

#if GtkApplicationCase()
::\``{Y}::
send ^+u1ef2{Enter}
return

#if OtherCase()
::\``{Y}::
send {U+1EF2}
return


;; Glyph: 'ỳ' Descr: LATIN SMALL LETTER Y WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``y::
send ^x8{Enter}1ef3{Enter}
return

#if GtkApplicationCase()
::\``y::
send ^+u1ef3{Enter}
return

#if OtherCase()
::\``y::
send {U+1EF3}
return


;; Glyph: 'ỳ' Descr: LATIN SMALL LETTER Y WITH GRAVE

#if EmacsCase() && EmacsEnabled
::\``{y}::
send ^x8{Enter}1ef3{Enter}
return

#if GtkApplicationCase()
::\``{y}::
send ^+u1ef3{Enter}
return

#if OtherCase()
::\``{y}::
send {U+1EF3}
return


;; Glyph: 'Ỵ' Descr: LATIN CAPITAL LETTER Y WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{Y}::
send ^x8{Enter}1ef4{Enter}
return

#if GtkApplicationCase()
::\d{Y}::
send ^+u1ef4{Enter}
return

#if OtherCase()
::\d{Y}::
send {U+1EF4}
return


;; Glyph: 'ỵ' Descr: LATIN SMALL LETTER Y WITH DOT BELOW

#if EmacsCase() && EmacsEnabled
::\d{y}::
send ^x8{Enter}1ef5{Enter}
return

#if GtkApplicationCase()
::\d{y}::
send ^+u1ef5{Enter}
return

#if OtherCase()
::\d{y}::
send {U+1EF5}
return


;; Glyph: 'Ỹ' Descr: LATIN CAPITAL LETTER Y WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~Y::
send ^x8{Enter}1ef8{Enter}
return

#if GtkApplicationCase()
::\~Y::
send ^+u1ef8{Enter}
return

#if OtherCase()
::\~Y::
send {U+1EF8}
return


;; Glyph: 'Ỹ' Descr: LATIN CAPITAL LETTER Y WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{Y}::
send ^x8{Enter}1ef8{Enter}
return

#if GtkApplicationCase()
::\~{Y}::
send ^+u1ef8{Enter}
return

#if OtherCase()
::\~{Y}::
send {U+1EF8}
return


;; Glyph: 'ỹ' Descr: LATIN SMALL LETTER Y WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~y::
send ^x8{Enter}1ef9{Enter}
return

#if GtkApplicationCase()
::\~y::
send ^+u1ef9{Enter}
return

#if OtherCase()
::\~y::
send {U+1EF9}
return


;; Glyph: 'ỹ' Descr: LATIN SMALL LETTER Y WITH TILDE

#if EmacsCase() && EmacsEnabled
::\~{y}::
send ^x8{Enter}1ef9{Enter}
return

#if GtkApplicationCase()
::\~{y}::
send ^+u1ef9{Enter}
return

#if OtherCase()
::\~{y}::
send {U+1EF9}
return


;; Glyph: ' ' Descr: EM QUAD

#if EmacsCase() && EmacsEnabled
::\quad::
send ^x8{Enter}2001{Enter}
return

#if GtkApplicationCase()
::\quad::
send ^+u2001{Enter}
return

#if OtherCase()
::\quad::
send {U+2001}
return


;; Glyph: '‌' Descr: ZERO WIDTH NON-JOINER

#if EmacsCase() && EmacsEnabled
::\/::
send ^x8{Enter}200c{Enter}
return

#if GtkApplicationCase()
::\/::
send ^+u200c{Enter}
return

#if OtherCase()
::\/::
send {U+200C}
return


;; Glyph: '–' Descr: EN DASH

#if EmacsCase() && EmacsEnabled
::--::
send ^x8{Enter}2013{Enter}
return

#if GtkApplicationCase()
::--::
send ^+u2013{Enter}
return

#if OtherCase()
::--::
send {U+2013}
return


;; Glyph: '—' Descr: EM DASH

#if EmacsCase() && EmacsEnabled
::---::
send ^x8{Enter}2014{Enter}
return

#if GtkApplicationCase()
::---::
send ^+u2014{Enter}
return

#if OtherCase()
::---::
send {U+2014}
return


;; Glyph: '‖' Descr: DOUBLE VERTICAL LINE

#if EmacsCase() && EmacsEnabled
::\Vert::
send ^x8{Enter}2016{Enter}
return

#if GtkApplicationCase()
::\Vert::
send ^+u2016{Enter}
return

#if OtherCase()
::\Vert::
send {U+2016}
return


;; Glyph: '‘' Descr: LEFT SINGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\grq::
send ^x8{Enter}2018{Enter}
return

#if GtkApplicationCase()
::\grq::
send ^+u2018{Enter}
return

#if OtherCase()
::\grq::
send {U+2018}
return


;; Glyph: '‘' Descr: LEFT SINGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\lq::
send ^x8{Enter}2018{Enter}
return

#if GtkApplicationCase()
::\lq::
send ^+u2018{Enter}
return

#if OtherCase()
::\lq::
send {U+2018}
return


;; Glyph: '’' Descr: RIGHT SINGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\rq::
send ^x8{Enter}2019{Enter}
return

#if GtkApplicationCase()
::\rq::
send ^+u2019{Enter}
return

#if OtherCase()
::\rq::
send {U+2019}
return


;; Glyph: '‚' Descr: SINGLE LOW-9 QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\glq::
send ^x8{Enter}201a{Enter}
return

#if GtkApplicationCase()
::\glq::
send ^+u201a{Enter}
return

#if OtherCase()
::\glq::
send {U+201A}
return


;; Glyph: '“' Descr: LEFT DOUBLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\"'::
send ^x8{Enter}201c{Enter}
return

#if GtkApplicationCase()
::\"'::
send ^+u201c{Enter}
return

#if OtherCase()
::\"'::
send {U+201C}
return


;; Glyph: '“' Descr: LEFT DOUBLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\grqq::
send ^x8{Enter}201c{Enter}
return

#if GtkApplicationCase()
::\grqq::
send ^+u201c{Enter}
return

#if OtherCase()
::\grqq::
send {U+201C}
return


;; Glyph: '“' Descr: LEFT DOUBLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\ldq::
send ^x8{Enter}201c{Enter}
return

#if GtkApplicationCase()
::\ldq::
send ^+u201c{Enter}
return

#if OtherCase()
::\ldq::
send {U+201C}
return


;; Glyph: '”' Descr: RIGHT DOUBLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\rdq::
send ^x8{Enter}201d{Enter}
return

#if GtkApplicationCase()
::\rdq::
send ^+u201d{Enter}
return

#if OtherCase()
::\rdq::
send {U+201D}
return


;; Glyph: '„' Descr: DOUBLE LOW-9 QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\"``::
send ^x8{Enter}201e{Enter}
return

#if GtkApplicationCase()
::\"``::
send ^+u201e{Enter}
return

#if OtherCase()
::\"``::
send {U+201E}
return


;; Glyph: '„' Descr: DOUBLE LOW-9 QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\glqq::
send ^x8{Enter}201e{Enter}
return

#if GtkApplicationCase()
::\glqq::
send ^+u201e{Enter}
return

#if OtherCase()
::\glqq::
send {U+201E}
return


;; Glyph: '†' Descr: DAGGER

#if EmacsCase() && EmacsEnabled
::\dag::
send ^x8{Enter}2020{Enter}
return

#if GtkApplicationCase()
::\dag::
send ^+u2020{Enter}
return

#if OtherCase()
::\dag::
send {U+2020}
return


;; Glyph: '†' Descr: DAGGER

#if EmacsCase() && EmacsEnabled
::\dagger::
send ^x8{Enter}2020{Enter}
return

#if GtkApplicationCase()
::\dagger::
send ^+u2020{Enter}
return

#if OtherCase()
::\dagger::
send {U+2020}
return


;; Glyph: '‡' Descr: DOUBLE DAGGER

#if EmacsCase() && EmacsEnabled
::\ddag::
send ^x8{Enter}2021{Enter}
return

#if GtkApplicationCase()
::\ddag::
send ^+u2021{Enter}
return

#if OtherCase()
::\ddag::
send {U+2021}
return


;; Glyph: '‡' Descr: DOUBLE DAGGER

#if EmacsCase() && EmacsEnabled
::\ddagger::
send ^x8{Enter}2021{Enter}
return

#if GtkApplicationCase()
::\ddagger::
send ^+u2021{Enter}
return

#if OtherCase()
::\ddagger::
send {U+2021}
return


;; Glyph: '•' Descr: BULLET

#if EmacsCase() && EmacsEnabled
::\bullet::
send ^x8{Enter}2022{Enter}
return

#if GtkApplicationCase()
::\bullet::
send ^+u2022{Enter}
return

#if OtherCase()
::\bullet::
send {U+2022}
return


;; Glyph: '…' Descr: HORIZONTAL ELLIPSIS

#if EmacsCase() && EmacsEnabled
::\ldots::
send ^x8{Enter}2026{Enter}
return

#if GtkApplicationCase()
::\ldots::
send ^+u2026{Enter}
return

#if OtherCase()
::\ldots::
send {U+2026}
return


;; Glyph: '' Descr: LINE SEPARATOR

#if EmacsCase() && EmacsEnabled
::\newline::
send ^x8{Enter}2028{Enter}
return

#if GtkApplicationCase()
::\newline::
send ^+u2028{Enter}
return

#if OtherCase()
::\newline::
send {U+2028}
return


;; Glyph: '' Descr: PARAGRAPH SEPARATOR

#if EmacsCase() && EmacsEnabled
::\par::
send ^x8{Enter}2029{Enter}
return

#if GtkApplicationCase()
::\par::
send ^+u2029{Enter}
return

#if OtherCase()
::\par::
send {U+2029}
return


;; Glyph: ' ' Descr: NARROW NO-BREAK SPACE

#if EmacsCase() && EmacsEnabled
::\`,::
send ^x8{Enter}202f{Enter}
return

#if GtkApplicationCase()
::\`,::
send ^+u202f{Enter}
return

#if OtherCase()
::\`,::
send {U+202F}
return


;; Glyph: '‰' Descr: PER MILLE SIGN

#if EmacsCase() && EmacsEnabled
::\permil::
send ^x8{Enter}2030{Enter}
return

#if GtkApplicationCase()
::\permil::
send ^+u2030{Enter}
return

#if OtherCase()
::\permil::
send {U+2030}
return


;; Glyph: '‱' Descr: PER TEN THOUSAND SIGN

#if EmacsCase() && EmacsEnabled
::\textpertenthousand::
send ^x8{Enter}2031{Enter}
return

#if GtkApplicationCase()
::\textpertenthousand::
send ^+u2031{Enter}
return

#if OtherCase()
::\textpertenthousand::
send {U+2031}
return


;; Glyph: '′' Descr: PRIME

#if EmacsCase() && EmacsEnabled
::\prime::
send ^x8{Enter}2032{Enter}
return

#if GtkApplicationCase()
::\prime::
send ^+u2032{Enter}
return

#if OtherCase()
::\prime::
send {U+2032}
return


;; Glyph: '′' Descr: PRIME

#if EmacsCase() && EmacsEnabled
::\varprime::
send ^x8{Enter}2032{Enter}
return

#if GtkApplicationCase()
::\varprime::
send ^+u2032{Enter}
return

#if OtherCase()
::\varprime::
send {U+2032}
return


;; Glyph: '‵' Descr: REVERSED PRIME

#if EmacsCase() && EmacsEnabled
::\backprime::
send ^x8{Enter}2035{Enter}
return

#if GtkApplicationCase()
::\backprime::
send ^+u2035{Enter}
return

#if OtherCase()
::\backprime::
send {U+2035}
return


;; Glyph: '‹' Descr: SINGLE LEFT-POINTING ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\flq::
send ^x8{Enter}2039{Enter}
return

#if GtkApplicationCase()
::\flq::
send ^+u2039{Enter}
return

#if OtherCase()
::\flq::
send {U+2039}
return


;; Glyph: '›' Descr: SINGLE RIGHT-POINTING ANGLE QUOTATION MARK

#if EmacsCase() && EmacsEnabled
::\frq::
send ^x8{Enter}203a{Enter}
return

#if GtkApplicationCase()
::\frq::
send ^+u203a{Enter}
return

#if OtherCase()
::\frq::
send {U+203A}
return


;; Glyph: '※' Descr: REFERENCE MARK

#if EmacsCase() && EmacsEnabled
::\textreferencemark::
send ^x8{Enter}203b{Enter}
return

#if GtkApplicationCase()
::\textreferencemark::
send ^+u203b{Enter}
return

#if OtherCase()
::\textreferencemark::
send {U+203B}
return


;; Glyph: '‽' Descr: INTERROBANG

#if EmacsCase() && EmacsEnabled
::\textinterrobang::
send ^x8{Enter}203d{Enter}
return

#if GtkApplicationCase()
::\textinterrobang::
send ^+u203d{Enter}
return

#if OtherCase()
::\textinterrobang::
send {U+203D}
return


;; Glyph: '⁄' Descr: FRACTION SLASH

#if EmacsCase() && EmacsEnabled
::\textfractionsolidus::
send ^x8{Enter}2044{Enter}
return

#if GtkApplicationCase()
::\textfractionsolidus::
send ^+u2044{Enter}
return

#if OtherCase()
::\textfractionsolidus::
send {U+2044}
return


;; Glyph: '⁅' Descr: LEFT SQUARE BRACKET WITH QUILL

#if EmacsCase() && EmacsEnabled
::\textlquill::
send ^x8{Enter}2045{Enter}
return

#if GtkApplicationCase()
::\textlquill::
send ^+u2045{Enter}
return

#if OtherCase()
::\textlquill::
send {U+2045}
return


;; Glyph: '⁆' Descr: RIGHT SQUARE BRACKET WITH QUILL

#if EmacsCase() && EmacsEnabled
::\textrquill::
send ^x8{Enter}2046{Enter}
return

#if GtkApplicationCase()
::\textrquill::
send ^+u2046{Enter}
return

#if OtherCase()
::\textrquill::
send {U+2046}
return


;; Glyph: '⁒' Descr: COMMERCIAL MINUS SIGN

#if EmacsCase() && EmacsEnabled
::\textdiscount::
send ^x8{Enter}2052{Enter}
return

#if GtkApplicationCase()
::\textdiscount::
send ^+u2052{Enter}
return

#if OtherCase()
::\textdiscount::
send {U+2052}
return


;; Glyph: '⁰' Descr: SUPERSCRIPT ZERO

#if EmacsCase() && EmacsEnabled
::^0::
send ^x8{Enter}2070{Enter}
return

#if GtkApplicationCase()
::^0::
send ^+u2070{Enter}
return

#if OtherCase()
::^0::
send {U+2070}
return


;; Glyph: 'ⁱ' Descr: SUPERSCRIPT LATIN SMALL LETTER I

#if EmacsCase() && EmacsEnabled
::^i::
send ^x8{Enter}2071{Enter}
return

#if GtkApplicationCase()
::^i::
send ^+u2071{Enter}
return

#if OtherCase()
::^i::
send {U+2071}
return


;; Glyph: '⁴' Descr: SUPERSCRIPT FOUR

#if EmacsCase() && EmacsEnabled
::^4::
send ^x8{Enter}2074{Enter}
return

#if GtkApplicationCase()
::^4::
send ^+u2074{Enter}
return

#if OtherCase()
::^4::
send {U+2074}
return


;; Glyph: '⁵' Descr: SUPERSCRIPT FIVE

#if EmacsCase() && EmacsEnabled
::^5::
send ^x8{Enter}2075{Enter}
return

#if GtkApplicationCase()
::^5::
send ^+u2075{Enter}
return

#if OtherCase()
::^5::
send {U+2075}
return


;; Glyph: '⁶' Descr: SUPERSCRIPT SIX

#if EmacsCase() && EmacsEnabled
::^6::
send ^x8{Enter}2076{Enter}
return

#if GtkApplicationCase()
::^6::
send ^+u2076{Enter}
return

#if OtherCase()
::^6::
send {U+2076}
return


;; Glyph: '⁷' Descr: SUPERSCRIPT SEVEN

#if EmacsCase() && EmacsEnabled
::^7::
send ^x8{Enter}2077{Enter}
return

#if GtkApplicationCase()
::^7::
send ^+u2077{Enter}
return

#if OtherCase()
::^7::
send {U+2077}
return


;; Glyph: '⁸' Descr: SUPERSCRIPT EIGHT

#if EmacsCase() && EmacsEnabled
::^8::
send ^x8{Enter}2078{Enter}
return

#if GtkApplicationCase()
::^8::
send ^+u2078{Enter}
return

#if OtherCase()
::^8::
send {U+2078}
return


;; Glyph: '⁹' Descr: SUPERSCRIPT NINE

#if EmacsCase() && EmacsEnabled
::^9::
send ^x8{Enter}2079{Enter}
return

#if GtkApplicationCase()
::^9::
send ^+u2079{Enter}
return

#if OtherCase()
::^9::
send {U+2079}
return


;; Glyph: '⁺' Descr: SUPERSCRIPT PLUS SIGN

#if EmacsCase() && EmacsEnabled
::^+::
send ^x8{Enter}207a{Enter}
return

#if GtkApplicationCase()
::^+::
send ^+u207a{Enter}
return

#if OtherCase()
::^+::
send {U+207A}
return


;; Glyph: '⁻' Descr: SUPERSCRIPT MINUS

#if EmacsCase() && EmacsEnabled
::^-::
send ^x8{Enter}207b{Enter}
return

#if GtkApplicationCase()
::^-::
send ^+u207b{Enter}
return

#if OtherCase()
::^-::
send {U+207B}
return


;; Glyph: '⁼' Descr: SUPERSCRIPT EQUALS SIGN

#if EmacsCase() && EmacsEnabled
::^=::
send ^x8{Enter}207c{Enter}
return

#if GtkApplicationCase()
::^=::
send ^+u207c{Enter}
return

#if OtherCase()
::^=::
send {U+207C}
return


;; Glyph: '⁽' Descr: SUPERSCRIPT LEFT PARENTHESIS

#if EmacsCase() && EmacsEnabled
::^(::
send ^x8{Enter}207d{Enter}
return

#if GtkApplicationCase()
::^(::
send ^+u207d{Enter}
return

#if OtherCase()
::^(::
send {U+207D}
return


;; Glyph: '⁾' Descr: SUPERSCRIPT RIGHT PARENTHESIS

#if EmacsCase() && EmacsEnabled
::^)::
send ^x8{Enter}207e{Enter}
return

#if GtkApplicationCase()
::^)::
send ^+u207e{Enter}
return

#if OtherCase()
::^)::
send {U+207E}
return


;; Glyph: 'ⁿ' Descr: SUPERSCRIPT LATIN SMALL LETTER N

#if EmacsCase() && EmacsEnabled
::^n::
send ^x8{Enter}207f{Enter}
return

#if GtkApplicationCase()
::^n::
send ^+u207f{Enter}
return

#if OtherCase()
::^n::
send {U+207F}
return


;; Glyph: '₀' Descr: SUBSCRIPT ZERO

#if EmacsCase() && EmacsEnabled
::_0::
send ^x8{Enter}2080{Enter}
return

#if GtkApplicationCase()
::_0::
send ^+u2080{Enter}
return

#if OtherCase()
::_0::
send {U+2080}
return


;; Glyph: '₁' Descr: SUBSCRIPT ONE

#if EmacsCase() && EmacsEnabled
::_1::
send ^x8{Enter}2081{Enter}
return

#if GtkApplicationCase()
::_1::
send ^+u2081{Enter}
return

#if OtherCase()
::_1::
send {U+2081}
return


;; Glyph: '₂' Descr: SUBSCRIPT TWO

#if EmacsCase() && EmacsEnabled
::_2::
send ^x8{Enter}2082{Enter}
return

#if GtkApplicationCase()
::_2::
send ^+u2082{Enter}
return

#if OtherCase()
::_2::
send {U+2082}
return


;; Glyph: '₃' Descr: SUBSCRIPT THREE

#if EmacsCase() && EmacsEnabled
::_3::
send ^x8{Enter}2083{Enter}
return

#if GtkApplicationCase()
::_3::
send ^+u2083{Enter}
return

#if OtherCase()
::_3::
send {U+2083}
return


;; Glyph: '₄' Descr: SUBSCRIPT FOUR

#if EmacsCase() && EmacsEnabled
::_4::
send ^x8{Enter}2084{Enter}
return

#if GtkApplicationCase()
::_4::
send ^+u2084{Enter}
return

#if OtherCase()
::_4::
send {U+2084}
return


;; Glyph: '₅' Descr: SUBSCRIPT FIVE

#if EmacsCase() && EmacsEnabled
::_5::
send ^x8{Enter}2085{Enter}
return

#if GtkApplicationCase()
::_5::
send ^+u2085{Enter}
return

#if OtherCase()
::_5::
send {U+2085}
return


;; Glyph: '₆' Descr: SUBSCRIPT SIX

#if EmacsCase() && EmacsEnabled
::_6::
send ^x8{Enter}2086{Enter}
return

#if GtkApplicationCase()
::_6::
send ^+u2086{Enter}
return

#if OtherCase()
::_6::
send {U+2086}
return


;; Glyph: '₇' Descr: SUBSCRIPT SEVEN

#if EmacsCase() && EmacsEnabled
::_7::
send ^x8{Enter}2087{Enter}
return

#if GtkApplicationCase()
::_7::
send ^+u2087{Enter}
return

#if OtherCase()
::_7::
send {U+2087}
return


;; Glyph: '₈' Descr: SUBSCRIPT EIGHT

#if EmacsCase() && EmacsEnabled
::_8::
send ^x8{Enter}2088{Enter}
return

#if GtkApplicationCase()
::_8::
send ^+u2088{Enter}
return

#if OtherCase()
::_8::
send {U+2088}
return


;; Glyph: '₉' Descr: SUBSCRIPT NINE

#if EmacsCase() && EmacsEnabled
::_9::
send ^x8{Enter}2089{Enter}
return

#if GtkApplicationCase()
::_9::
send ^+u2089{Enter}
return

#if OtherCase()
::_9::
send {U+2089}
return


;; Glyph: '₊' Descr: SUBSCRIPT PLUS SIGN

#if EmacsCase() && EmacsEnabled
::_+::
send ^x8{Enter}208a{Enter}
return

#if GtkApplicationCase()
::_+::
send ^+u208a{Enter}
return

#if OtherCase()
::_+::
send {U+208A}
return


;; Glyph: '₋' Descr: SUBSCRIPT MINUS

#if EmacsCase() && EmacsEnabled
::_-::
send ^x8{Enter}208b{Enter}
return

#if GtkApplicationCase()
::_-::
send ^+u208b{Enter}
return

#if OtherCase()
::_-::
send {U+208B}
return


;; Glyph: '₌' Descr: SUBSCRIPT EQUALS SIGN

#if EmacsCase() && EmacsEnabled
::_=::
send ^x8{Enter}208c{Enter}
return

#if GtkApplicationCase()
::_=::
send ^+u208c{Enter}
return

#if OtherCase()
::_=::
send {U+208C}
return


;; Glyph: '₍' Descr: SUBSCRIPT LEFT PARENTHESIS

#if EmacsCase() && EmacsEnabled
::_(::
send ^x8{Enter}208d{Enter}
return

#if GtkApplicationCase()
::_(::
send ^+u208d{Enter}
return

#if OtherCase()
::_(::
send {U+208D}
return


;; Glyph: '₎' Descr: SUBSCRIPT RIGHT PARENTHESIS

#if EmacsCase() && EmacsEnabled
::_)::
send ^x8{Enter}208e{Enter}
return

#if GtkApplicationCase()
::_)::
send ^+u208e{Enter}
return

#if OtherCase()
::_)::
send {U+208E}
return


;; Glyph: 'ₐ' Descr: LATIN SUBSCRIPT SMALL LETTER A

#if EmacsCase() && EmacsEnabled
::_a::
send ^x8{Enter}2090{Enter}
return

#if GtkApplicationCase()
::_a::
send ^+u2090{Enter}
return

#if OtherCase()
::_a::
send {U+2090}
return


;; Glyph: 'ₑ' Descr: LATIN SUBSCRIPT SMALL LETTER E

#if EmacsCase() && EmacsEnabled
::_e::
send ^x8{Enter}2091{Enter}
return

#if GtkApplicationCase()
::_e::
send ^+u2091{Enter}
return

#if OtherCase()
::_e::
send {U+2091}
return


;; Glyph: 'ₒ' Descr: LATIN SUBSCRIPT SMALL LETTER O

#if EmacsCase() && EmacsEnabled
::_o::
send ^x8{Enter}2092{Enter}
return

#if GtkApplicationCase()
::_o::
send ^+u2092{Enter}
return

#if OtherCase()
::_o::
send {U+2092}
return


;; Glyph: 'ₓ' Descr: LATIN SUBSCRIPT SMALL LETTER X

#if EmacsCase() && EmacsEnabled
::_x::
send ^x8{Enter}2093{Enter}
return

#if GtkApplicationCase()
::_x::
send ^+u2093{Enter}
return

#if OtherCase()
::_x::
send {U+2093}
return


;; Glyph: 'ₕ' Descr: LATIN SUBSCRIPT SMALL LETTER H

#if EmacsCase() && EmacsEnabled
::_h::
send ^x8{Enter}2095{Enter}
return

#if GtkApplicationCase()
::_h::
send ^+u2095{Enter}
return

#if OtherCase()
::_h::
send {U+2095}
return


;; Glyph: 'ₖ' Descr: LATIN SUBSCRIPT SMALL LETTER K

#if EmacsCase() && EmacsEnabled
::_k::
send ^x8{Enter}2096{Enter}
return

#if GtkApplicationCase()
::_k::
send ^+u2096{Enter}
return

#if OtherCase()
::_k::
send {U+2096}
return


;; Glyph: 'ₗ' Descr: LATIN SUBSCRIPT SMALL LETTER L

#if EmacsCase() && EmacsEnabled
::_l::
send ^x8{Enter}2097{Enter}
return

#if GtkApplicationCase()
::_l::
send ^+u2097{Enter}
return

#if OtherCase()
::_l::
send {U+2097}
return


;; Glyph: 'ₘ' Descr: LATIN SUBSCRIPT SMALL LETTER M

#if EmacsCase() && EmacsEnabled
::_m::
send ^x8{Enter}2098{Enter}
return

#if GtkApplicationCase()
::_m::
send ^+u2098{Enter}
return

#if OtherCase()
::_m::
send {U+2098}
return


;; Glyph: 'ₙ' Descr: LATIN SUBSCRIPT SMALL LETTER N

#if EmacsCase() && EmacsEnabled
::_n::
send ^x8{Enter}2099{Enter}
return

#if GtkApplicationCase()
::_n::
send ^+u2099{Enter}
return

#if OtherCase()
::_n::
send {U+2099}
return


;; Glyph: 'ₚ' Descr: LATIN SUBSCRIPT SMALL LETTER P

#if EmacsCase() && EmacsEnabled
::_p::
send ^x8{Enter}209a{Enter}
return

#if GtkApplicationCase()
::_p::
send ^+u209a{Enter}
return

#if OtherCase()
::_p::
send {U+209A}
return


;; Glyph: 'ₛ' Descr: LATIN SUBSCRIPT SMALL LETTER S

#if EmacsCase() && EmacsEnabled
::_s::
send ^x8{Enter}209b{Enter}
return

#if GtkApplicationCase()
::_s::
send ^+u209b{Enter}
return

#if OtherCase()
::_s::
send {U+209B}
return


;; Glyph: 'ₜ' Descr: LATIN SUBSCRIPT SMALL LETTER T

#if EmacsCase() && EmacsEnabled
::_t::
send ^x8{Enter}209c{Enter}
return

#if GtkApplicationCase()
::_t::
send ^+u209c{Enter}
return

#if OtherCase()
::_t::
send {U+209C}
return


;; Glyph: '₡' Descr: COLON SIGN

#if EmacsCase() && EmacsEnabled
::\colon::
send ^x8{Enter}20a1{Enter}
return

#if GtkApplicationCase()
::\colon::
send ^+u20a1{Enter}
return

#if OtherCase()
::\colon::
send {U+20A1}
return


;; Glyph: '₡' Descr: COLON SIGN

#if EmacsCase() && EmacsEnabled
::\textcolonmonetary::
send ^x8{Enter}20a1{Enter}
return

#if GtkApplicationCase()
::\textcolonmonetary::
send ^+u20a1{Enter}
return

#if OtherCase()
::\textcolonmonetary::
send {U+20A1}
return


;; Glyph: '₢' Descr: CRUZEIRO SIGN

#if EmacsCase() && EmacsEnabled
::\cruzeiro::
send ^x8{Enter}20a2{Enter}
return

#if GtkApplicationCase()
::\cruzeiro::
send ^+u20a2{Enter}
return

#if OtherCase()
::\cruzeiro::
send {U+20A2}
return


;; Glyph: '₤' Descr: LIRA SIGN

#if EmacsCase() && EmacsEnabled
::\lira::
send ^x8{Enter}20a4{Enter}
return

#if GtkApplicationCase()
::\lira::
send ^+u20a4{Enter}
return

#if OtherCase()
::\lira::
send {U+20A4}
return


;; Glyph: '₤' Descr: LIRA SIGN

#if EmacsCase() && EmacsEnabled
::\textlira::
send ^x8{Enter}20a4{Enter}
return

#if GtkApplicationCase()
::\textlira::
send ^+u20a4{Enter}
return

#if OtherCase()
::\textlira::
send {U+20A4}
return


;; Glyph: '₥' Descr: MILL SIGN

#if EmacsCase() && EmacsEnabled
::\mill::
send ^x8{Enter}20a5{Enter}
return

#if GtkApplicationCase()
::\mill::
send ^+u20a5{Enter}
return

#if OtherCase()
::\mill::
send {U+20A5}
return


;; Glyph: '₦' Descr: NAIRA SIGN

#if EmacsCase() && EmacsEnabled
::\naira::
send ^x8{Enter}20a6{Enter}
return

#if GtkApplicationCase()
::\naira::
send ^+u20a6{Enter}
return

#if OtherCase()
::\naira::
send {U+20A6}
return


;; Glyph: '₦' Descr: NAIRA SIGN

#if EmacsCase() && EmacsEnabled
::\textnaira::
send ^x8{Enter}20a6{Enter}
return

#if GtkApplicationCase()
::\textnaira::
send ^+u20a6{Enter}
return

#if OtherCase()
::\textnaira::
send {U+20A6}
return


;; Glyph: '₧' Descr: PESETA SIGN

#if EmacsCase() && EmacsEnabled
::\peseta::
send ^x8{Enter}20a7{Enter}
return

#if GtkApplicationCase()
::\peseta::
send ^+u20a7{Enter}
return

#if OtherCase()
::\peseta::
send {U+20A7}
return


;; Glyph: '₨' Descr: RUPEE SIGN

#if EmacsCase() && EmacsEnabled
::\rupee::
send ^x8{Enter}20a8{Enter}
return

#if GtkApplicationCase()
::\rupee::
send ^+u20a8{Enter}
return

#if OtherCase()
::\rupee::
send {U+20A8}
return


;; Glyph: '₩' Descr: WON SIGN

#if EmacsCase() && EmacsEnabled
::\textwon::
send ^x8{Enter}20a9{Enter}
return

#if GtkApplicationCase()
::\textwon::
send ^+u20a9{Enter}
return

#if OtherCase()
::\textwon::
send {U+20A9}
return


;; Glyph: '₩' Descr: WON SIGN

#if EmacsCase() && EmacsEnabled
::\won::
send ^x8{Enter}20a9{Enter}
return

#if GtkApplicationCase()
::\won::
send ^+u20a9{Enter}
return

#if OtherCase()
::\won::
send {U+20A9}
return


;; Glyph: '₫' Descr: DONG SIGN

#if EmacsCase() && EmacsEnabled
::\dong::
send ^x8{Enter}20ab{Enter}
return

#if GtkApplicationCase()
::\dong::
send ^+u20ab{Enter}
return

#if OtherCase()
::\dong::
send {U+20AB}
return


;; Glyph: '€' Descr: EURO SIGN

#if EmacsCase() && EmacsEnabled
::\euro::
send ^x8{Enter}20ac{Enter}
return

#if GtkApplicationCase()
::\euro::
send ^+u20ac{Enter}
return

#if OtherCase()
::\euro::
send {U+20AC}
return


;; Glyph: '₭' Descr: KIP SIGN

#if EmacsCase() && EmacsEnabled
::\kip::
send ^x8{Enter}20ad{Enter}
return

#if GtkApplicationCase()
::\kip::
send ^+u20ad{Enter}
return

#if OtherCase()
::\kip::
send {U+20AD}
return


;; Glyph: '₮' Descr: TUGRIK SIGN

#if EmacsCase() && EmacsEnabled
::\tugrik::
send ^x8{Enter}20ae{Enter}
return

#if GtkApplicationCase()
::\tugrik::
send ^+u20ae{Enter}
return

#if OtherCase()
::\tugrik::
send {U+20AE}
return


;; Glyph: '₯' Descr: DRACHMA SIGN

#if EmacsCase() && EmacsEnabled
::\drachma::
send ^x8{Enter}20af{Enter}
return

#if GtkApplicationCase()
::\drachma::
send ^+u20af{Enter}
return

#if OtherCase()
::\drachma::
send {U+20AF}
return


;; Glyph: '₱' Descr: PESO SIGN

#if EmacsCase() && EmacsEnabled
::\peso::
send ^x8{Enter}20b1{Enter}
return

#if GtkApplicationCase()
::\peso::
send ^+u20b1{Enter}
return

#if OtherCase()
::\peso::
send {U+20B1}
return


;; Glyph: '₱' Descr: PESO SIGN

#if EmacsCase() && EmacsEnabled
::\textpeso::
send ^x8{Enter}20b1{Enter}
return

#if GtkApplicationCase()
::\textpeso::
send ^+u20b1{Enter}
return

#if OtherCase()
::\textpeso::
send {U+20B1}
return


;; Glyph: '₲' Descr: GUARANI SIGN

#if EmacsCase() && EmacsEnabled
::\guarani::
send ^x8{Enter}20b2{Enter}
return

#if GtkApplicationCase()
::\guarani::
send ^+u20b2{Enter}
return

#if OtherCase()
::\guarani::
send {U+20B2}
return


;; Glyph: '₳' Descr: AUSTRAL SIGN

#if EmacsCase() && EmacsEnabled
::\austral::
send ^x8{Enter}20b3{Enter}
return

#if GtkApplicationCase()
::\austral::
send ^+u20b3{Enter}
return

#if OtherCase()
::\austral::
send {U+20B3}
return


;; Glyph: '₴' Descr: HRYVNIA SIGN

#if EmacsCase() && EmacsEnabled
::\hryvnia::
send ^x8{Enter}20b4{Enter}
return

#if GtkApplicationCase()
::\hryvnia::
send ^+u20b4{Enter}
return

#if OtherCase()
::\hryvnia::
send {U+20B4}
return


;; Glyph: '₵' Descr: CEDI SIGN

#if EmacsCase() && EmacsEnabled
::\cedi::
send ^x8{Enter}20b5{Enter}
return

#if GtkApplicationCase()
::\cedi::
send ^+u20b5{Enter}
return

#if OtherCase()
::\cedi::
send {U+20B5}
return


;; Glyph: '₷' Descr: SPESMILO SIGN

#if EmacsCase() && EmacsEnabled
::\spesmilo::
send ^x8{Enter}20b7{Enter}
return

#if GtkApplicationCase()
::\spesmilo::
send ^+u20b7{Enter}
return

#if OtherCase()
::\spesmilo::
send {U+20B7}
return


;; Glyph: '₸' Descr: TENGE SIGN

#if EmacsCase() && EmacsEnabled
::\tenge::
send ^x8{Enter}20b8{Enter}
return

#if GtkApplicationCase()
::\tenge::
send ^+u20b8{Enter}
return

#if OtherCase()
::\tenge::
send {U+20B8}
return


;; Glyph: '₼' Descr: MANAT SIGN

#if EmacsCase() && EmacsEnabled
::\manat::
send ^x8{Enter}20bc{Enter}
return

#if GtkApplicationCase()
::\manat::
send ^+u20bc{Enter}
return

#if OtherCase()
::\manat::
send {U+20BC}
return


;; Glyph: '₽' Descr: RUBLE SIGN

#if EmacsCase() && EmacsEnabled
::\ruble::
send ^x8{Enter}20bd{Enter}
return

#if GtkApplicationCase()
::\ruble::
send ^+u20bd{Enter}
return

#if OtherCase()
::\ruble::
send {U+20BD}
return


;; Glyph: '₾' Descr: LARI SIGN

#if EmacsCase() && EmacsEnabled
::\lari::
send ^x8{Enter}20be{Enter}
return

#if GtkApplicationCase()
::\lari::
send ^+u20be{Enter}
return

#if OtherCase()
::\lari::
send {U+20BE}
return


;; Glyph: '⃗' Descr: COMBINING RIGHT ARROW ABOVE

#if EmacsCase() && EmacsEnabled
::\vec::
send ^x8{Enter}20d7{Enter}
return

#if GtkApplicationCase()
::\vec::
send ^+u20d7{Enter}
return

#if OtherCase()
::\vec::
send {U+20D7}
return


;; Glyph: '⃝' Descr: COMBINING ENCLOSING CIRCLE

#if EmacsCase() && EmacsEnabled
::\textbigcircle::
send ^x8{Enter}20dd{Enter}
return

#if GtkApplicationCase()
::\textbigcircle::
send ^+u20dd{Enter}
return

#if OtherCase()
::\textbigcircle::
send {U+20DD}
return


;; Glyph: '℃' Descr: DEGREE CELSIUS

#if EmacsCase() && EmacsEnabled
::\celsius::
send ^x8{Enter}2103{Enter}
return

#if GtkApplicationCase()
::\celsius::
send ^+u2103{Enter}
return

#if OtherCase()
::\celsius::
send {U+2103}
return


;; Glyph: 'ℏ' Descr: PLANCK CONSTANT OVER TWO PI

#if EmacsCase() && EmacsEnabled
::\hbar::
send ^x8{Enter}210f{Enter}
return

#if GtkApplicationCase()
::\hbar::
send ^+u210f{Enter}
return

#if OtherCase()
::\hbar::
send {U+210F}
return


;; Glyph: 'ℐ' Descr: SCRIPT CAPITAL I

#if EmacsCase() && EmacsEnabled
::\mathscr{I}::
send ^x8{Enter}2110{Enter}
return

#if GtkApplicationCase()
::\mathscr{I}::
send ^+u2110{Enter}
return

#if OtherCase()
::\mathscr{I}::
send {U+2110}
return


;; Glyph: 'ℑ' Descr: BLACK-LETTER CAPITAL I

#if EmacsCase() && EmacsEnabled
::\Im::
send ^x8{Enter}2111{Enter}
return

#if GtkApplicationCase()
::\Im::
send ^+u2111{Enter}
return

#if OtherCase()
::\Im::
send {U+2111}
return


;; Glyph: 'ℓ' Descr: SCRIPT SMALL L

#if EmacsCase() && EmacsEnabled
::\ell::
send ^x8{Enter}2113{Enter}
return

#if GtkApplicationCase()
::\ell::
send ^+u2113{Enter}
return

#if OtherCase()
::\ell::
send {U+2113}
return


;; Glyph: 'ℕ' Descr: DOUBLE-STRUCK CAPITAL N

#if EmacsCase() && EmacsEnabled
::\Bbb{N}::
send ^x8{Enter}2115{Enter}
return

#if GtkApplicationCase()
::\Bbb{N}::
send ^+u2115{Enter}
return

#if OtherCase()
::\Bbb{N}::
send {U+2115}
return


;; Glyph: '№' Descr: NUMERO SIGN

#if EmacsCase() && EmacsEnabled
::\numero::
send ^x8{Enter}2116{Enter}
return

#if GtkApplicationCase()
::\numero::
send ^+u2116{Enter}
return

#if OtherCase()
::\numero::
send {U+2116}
return


;; Glyph: '№' Descr: NUMERO SIGN

#if EmacsCase() && EmacsEnabled
::\textnumero::
send ^x8{Enter}2116{Enter}
return

#if GtkApplicationCase()
::\textnumero::
send ^+u2116{Enter}
return

#if OtherCase()
::\textnumero::
send {U+2116}
return


;; Glyph: '℗' Descr: SOUND RECORDING COPYRIGHT

#if EmacsCase() && EmacsEnabled
::\textcircledP::
send ^x8{Enter}2117{Enter}
return

#if GtkApplicationCase()
::\textcircledP::
send ^+u2117{Enter}
return

#if OtherCase()
::\textcircledP::
send {U+2117}
return


;; Glyph: '℘' Descr: SCRIPT CAPITAL P

#if EmacsCase() && EmacsEnabled
::\wp::
send ^x8{Enter}2118{Enter}
return

#if GtkApplicationCase()
::\wp::
send ^+u2118{Enter}
return

#if OtherCase()
::\wp::
send {U+2118}
return


;; Glyph: 'ℙ' Descr: DOUBLE-STRUCK CAPITAL P

#if EmacsCase() && EmacsEnabled
::\Bbb{P}::
send ^x8{Enter}2119{Enter}
return

#if GtkApplicationCase()
::\Bbb{P}::
send ^+u2119{Enter}
return

#if OtherCase()
::\Bbb{P}::
send {U+2119}
return


;; Glyph: 'ℜ' Descr: BLACK-LETTER CAPITAL R

#if EmacsCase() && EmacsEnabled
::\Re::
send ^x8{Enter}211c{Enter}
return

#if GtkApplicationCase()
::\Re::
send ^+u211c{Enter}
return

#if OtherCase()
::\Re::
send {U+211C}
return


;; Glyph: 'ℝ' Descr: DOUBLE-STRUCK CAPITAL R

#if EmacsCase() && EmacsEnabled
::\Bbb{R}::
send ^x8{Enter}211d{Enter}
return

#if GtkApplicationCase()
::\Bbb{R}::
send ^+u211d{Enter}
return

#if OtherCase()
::\Bbb{R}::
send {U+211D}
return


;; Glyph: '℞' Descr: PRESCRIPTION TAKE

#if EmacsCase() && EmacsEnabled
::\textrecipe::
send ^x8{Enter}211e{Enter}
return

#if GtkApplicationCase()
::\textrecipe::
send ^+u211e{Enter}
return

#if OtherCase()
::\textrecipe::
send {U+211E}
return


;; Glyph: '℠' Descr: SERVICE MARK

#if EmacsCase() && EmacsEnabled
::^{SM}::
send ^x8{Enter}2120{Enter}
return

#if GtkApplicationCase()
::^{SM}::
send ^+u2120{Enter}
return

#if OtherCase()
::^{SM}::
send {U+2120}
return


;; Glyph: '℡' Descr: TELEPHONE SIGN

#if EmacsCase() && EmacsEnabled
::\telephone::
send ^x8{Enter}2121{Enter}
return

#if GtkApplicationCase()
::\telephone::
send ^+u2121{Enter}
return

#if OtherCase()
::\telephone::
send {U+2121}
return


;; Glyph: '℡' Descr: TELEPHONE SIGN

#if EmacsCase() && EmacsEnabled
::^{TEL}::
send ^x8{Enter}2121{Enter}
return

#if GtkApplicationCase()
::^{TEL}::
send ^+u2121{Enter}
return

#if OtherCase()
::^{TEL}::
send {U+2121}
return


;; Glyph: '™' Descr: TRADE MARK SIGN

#if EmacsCase() && EmacsEnabled
::^{TM}::
send ^x8{Enter}2122{Enter}
return

#if GtkApplicationCase()
::^{TM}::
send ^+u2122{Enter}
return

#if OtherCase()
::^{TM}::
send {U+2122}
return


;; Glyph: 'ℤ' Descr: DOUBLE-STRUCK CAPITAL Z

#if EmacsCase() && EmacsEnabled
::\Bbb{Z}::
send ^x8{Enter}2124{Enter}
return

#if GtkApplicationCase()
::\Bbb{Z}::
send ^+u2124{Enter}
return

#if OtherCase()
::\Bbb{Z}::
send {U+2124}
return


;; Glyph: '℥' Descr: OUNCE SIGN

#if EmacsCase() && EmacsEnabled
::\ounce::
send ^x8{Enter}2125{Enter}
return

#if GtkApplicationCase()
::\ounce::
send ^+u2125{Enter}
return

#if OtherCase()
::\ounce::
send {U+2125}
return


;; Glyph: 'Ω' Descr: OHM SIGN

#if EmacsCase() && EmacsEnabled
::\ohm::
send ^x8{Enter}2126{Enter}
return

#if GtkApplicationCase()
::\ohm::
send ^+u2126{Enter}
return

#if OtherCase()
::\ohm::
send {U+2126}
return


;; Glyph: '℧' Descr: INVERTED OHM SIGN

#if EmacsCase() && EmacsEnabled
::\mho::
send ^x8{Enter}2127{Enter}
return

#if GtkApplicationCase()
::\mho::
send ^+u2127{Enter}
return

#if OtherCase()
::\mho::
send {U+2127}
return


;; Glyph: 'K' Descr: KELVIN SIGN

#if EmacsCase() && EmacsEnabled
::\kelvin::
send ^x8{Enter}212a{Enter}
return

#if GtkApplicationCase()
::\kelvin::
send ^+u212a{Enter}
return

#if OtherCase()
::\kelvin::
send {U+212A}
return


;; Glyph: 'Å' Descr: ANGSTROM SIGN

#if EmacsCase() && EmacsEnabled
::\angstrom::
send ^x8{Enter}212b{Enter}
return

#if GtkApplicationCase()
::\angstrom::
send ^+u212b{Enter}
return

#if OtherCase()
::\angstrom::
send {U+212B}
return


;; Glyph: '℮' Descr: ESTIMATED SYMBOL

#if EmacsCase() && EmacsEnabled
::\textestimated::
send ^x8{Enter}212e{Enter}
return

#if GtkApplicationCase()
::\textestimated::
send ^+u212e{Enter}
return

#if OtherCase()
::\textestimated::
send {U+212E}
return


;; Glyph: 'ℵ' Descr: ALEF SYMBOL

#if EmacsCase() && EmacsEnabled
::\aleph::
send ^x8{Enter}2135{Enter}
return

#if GtkApplicationCase()
::\aleph::
send ^+u2135{Enter}
return

#if OtherCase()
::\aleph::
send {U+2135}
return


;; Glyph: 'ℶ' Descr: BET SYMBOL

#if EmacsCase() && EmacsEnabled
::\beth::
send ^x8{Enter}2136{Enter}
return

#if GtkApplicationCase()
::\beth::
send ^+u2136{Enter}
return

#if OtherCase()
::\beth::
send {U+2136}
return


;; Glyph: 'ℷ' Descr: GIMEL SYMBOL

#if EmacsCase() && EmacsEnabled
::\gimel::
send ^x8{Enter}2137{Enter}
return

#if GtkApplicationCase()
::\gimel::
send ^+u2137{Enter}
return

#if OtherCase()
::\gimel::
send {U+2137}
return


;; Glyph: 'ℸ' Descr: DALET SYMBOL

#if EmacsCase() && EmacsEnabled
::\daleth::
send ^x8{Enter}2138{Enter}
return

#if GtkApplicationCase()
::\daleth::
send ^+u2138{Enter}
return

#if OtherCase()
::\daleth::
send {U+2138}
return


;; Glyph: '℻' Descr: FACSIMILE SIGN

#if EmacsCase() && EmacsEnabled
::\facsimile::
send ^x8{Enter}213b{Enter}
return

#if GtkApplicationCase()
::\facsimile::
send ^+u213b{Enter}
return

#if OtherCase()
::\facsimile::
send {U+213B}
return


;; Glyph: '⅌' Descr: PER SIGN

#if EmacsCase() && EmacsEnabled
::\per::
send ^x8{Enter}214c{Enter}
return

#if GtkApplicationCase()
::\per::
send ^+u214c{Enter}
return

#if OtherCase()
::\per::
send {U+214C}
return


;; Glyph: '⅓' Descr: VULGAR FRACTION ONE THIRD

#if EmacsCase() && EmacsEnabled
::\frac13::
send ^x8{Enter}2153{Enter}
return

#if GtkApplicationCase()
::\frac13::
send ^+u2153{Enter}
return

#if OtherCase()
::\frac13::
send {U+2153}
return


;; Glyph: '⅔' Descr: VULGAR FRACTION TWO THIRDS

#if EmacsCase() && EmacsEnabled
::\frac23::
send ^x8{Enter}2154{Enter}
return

#if GtkApplicationCase()
::\frac23::
send ^+u2154{Enter}
return

#if OtherCase()
::\frac23::
send {U+2154}
return


;; Glyph: '⅕' Descr: VULGAR FRACTION ONE FIFTH

#if EmacsCase() && EmacsEnabled
::\frac15::
send ^x8{Enter}2155{Enter}
return

#if GtkApplicationCase()
::\frac15::
send ^+u2155{Enter}
return

#if OtherCase()
::\frac15::
send {U+2155}
return


;; Glyph: '⅖' Descr: VULGAR FRACTION TWO FIFTHS

#if EmacsCase() && EmacsEnabled
::\frac25::
send ^x8{Enter}2156{Enter}
return

#if GtkApplicationCase()
::\frac25::
send ^+u2156{Enter}
return

#if OtherCase()
::\frac25::
send {U+2156}
return


;; Glyph: '⅗' Descr: VULGAR FRACTION THREE FIFTHS

#if EmacsCase() && EmacsEnabled
::\frac35::
send ^x8{Enter}2157{Enter}
return

#if GtkApplicationCase()
::\frac35::
send ^+u2157{Enter}
return

#if OtherCase()
::\frac35::
send {U+2157}
return


;; Glyph: '⅘' Descr: VULGAR FRACTION FOUR FIFTHS

#if EmacsCase() && EmacsEnabled
::\frac45::
send ^x8{Enter}2158{Enter}
return

#if GtkApplicationCase()
::\frac45::
send ^+u2158{Enter}
return

#if OtherCase()
::\frac45::
send {U+2158}
return


;; Glyph: '⅙' Descr: VULGAR FRACTION ONE SIXTH

#if EmacsCase() && EmacsEnabled
::\frac16::
send ^x8{Enter}2159{Enter}
return

#if GtkApplicationCase()
::\frac16::
send ^+u2159{Enter}
return

#if OtherCase()
::\frac16::
send {U+2159}
return


;; Glyph: '⅚' Descr: VULGAR FRACTION FIVE SIXTHS

#if EmacsCase() && EmacsEnabled
::\frac56::
send ^x8{Enter}215a{Enter}
return

#if GtkApplicationCase()
::\frac56::
send ^+u215a{Enter}
return

#if OtherCase()
::\frac56::
send {U+215A}
return


;; Glyph: '⅛' Descr: VULGAR FRACTION ONE EIGHTH

#if EmacsCase() && EmacsEnabled
::\frac18::
send ^x8{Enter}215b{Enter}
return

#if GtkApplicationCase()
::\frac18::
send ^+u215b{Enter}
return

#if OtherCase()
::\frac18::
send {U+215B}
return


;; Glyph: '⅜' Descr: VULGAR FRACTION THREE EIGHTHS

#if EmacsCase() && EmacsEnabled
::\frac38::
send ^x8{Enter}215c{Enter}
return

#if GtkApplicationCase()
::\frac38::
send ^+u215c{Enter}
return

#if OtherCase()
::\frac38::
send {U+215C}
return


;; Glyph: '⅝' Descr: VULGAR FRACTION FIVE EIGHTHS

#if EmacsCase() && EmacsEnabled
::\frac58::
send ^x8{Enter}215d{Enter}
return

#if GtkApplicationCase()
::\frac58::
send ^+u215d{Enter}
return

#if OtherCase()
::\frac58::
send {U+215D}
return


;; Glyph: '⅞' Descr: VULGAR FRACTION SEVEN EIGHTHS

#if EmacsCase() && EmacsEnabled
::\frac78::
send ^x8{Enter}215e{Enter}
return

#if GtkApplicationCase()
::\frac78::
send ^+u215e{Enter}
return

#if OtherCase()
::\frac78::
send {U+215E}
return


;; Glyph: '⅟' Descr: FRACTION NUMERATOR ONE

#if EmacsCase() && EmacsEnabled
::\frac1::
send ^x8{Enter}215f{Enter}
return

#if GtkApplicationCase()
::\frac1::
send ^+u215f{Enter}
return

#if OtherCase()
::\frac1::
send {U+215F}
return


;; Glyph: '←' Descr: LEFTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\gets::
send ^x8{Enter}2190{Enter}
return

#if GtkApplicationCase()
::\gets::
send ^+u2190{Enter}
return

#if OtherCase()
::\gets::
send {U+2190}
return


;; Glyph: '←' Descr: LEFTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\leftarrow::
send ^x8{Enter}2190{Enter}
return

#if GtkApplicationCase()
::\leftarrow::
send ^+u2190{Enter}
return

#if OtherCase()
::\leftarrow::
send {U+2190}
return


;; Glyph: '←' Descr: LEFTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\longleftarrow::
send ^x8{Enter}2190{Enter}
return

#if GtkApplicationCase()
::\longleftarrow::
send ^+u2190{Enter}
return

#if OtherCase()
::\longleftarrow::
send {U+2190}
return


;; Glyph: '↑' Descr: UPWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\uparrow::
send ^x8{Enter}2191{Enter}
return

#if GtkApplicationCase()
::\uparrow::
send ^+u2191{Enter}
return

#if OtherCase()
::\uparrow::
send {U+2191}
return


;; Glyph: '→' Descr: RIGHTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\longrightarrow::
send ^x8{Enter}2192{Enter}
return

#if GtkApplicationCase()
::\longrightarrow::
send ^+u2192{Enter}
return

#if OtherCase()
::\longrightarrow::
send {U+2192}
return


;; Glyph: '→' Descr: RIGHTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\rightarrow::
send ^x8{Enter}2192{Enter}
return

#if GtkApplicationCase()
::\rightarrow::
send ^+u2192{Enter}
return

#if OtherCase()
::\rightarrow::
send {U+2192}
return


;; Glyph: '→' Descr: RIGHTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\to::
send ^x8{Enter}2192{Enter}
return

#if GtkApplicationCase()
::\to::
send ^+u2192{Enter}
return

#if OtherCase()
::\to::
send {U+2192}
return


;; Glyph: '↓' Descr: DOWNWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\downarrow::
send ^x8{Enter}2193{Enter}
return

#if GtkApplicationCase()
::\downarrow::
send ^+u2193{Enter}
return

#if OtherCase()
::\downarrow::
send {U+2193}
return


;; Glyph: '↔' Descr: LEFT RIGHT ARROW

#if EmacsCase() && EmacsEnabled
::\leftrightarrow::
send ^x8{Enter}2194{Enter}
return

#if GtkApplicationCase()
::\leftrightarrow::
send ^+u2194{Enter}
return

#if OtherCase()
::\leftrightarrow::
send {U+2194}
return


;; Glyph: '↔' Descr: LEFT RIGHT ARROW

#if EmacsCase() && EmacsEnabled
::\longleftrightarrow::
send ^x8{Enter}2194{Enter}
return

#if GtkApplicationCase()
::\longleftrightarrow::
send ^+u2194{Enter}
return

#if OtherCase()
::\longleftrightarrow::
send {U+2194}
return


;; Glyph: '↕' Descr: UP DOWN ARROW

#if EmacsCase() && EmacsEnabled
::\updownarrow::
send ^x8{Enter}2195{Enter}
return

#if GtkApplicationCase()
::\updownarrow::
send ^+u2195{Enter}
return

#if OtherCase()
::\updownarrow::
send {U+2195}
return


;; Glyph: '↖' Descr: NORTH WEST ARROW

#if EmacsCase() && EmacsEnabled
::\nwarrow::
send ^x8{Enter}2196{Enter}
return

#if GtkApplicationCase()
::\nwarrow::
send ^+u2196{Enter}
return

#if OtherCase()
::\nwarrow::
send {U+2196}
return


;; Glyph: '↗' Descr: NORTH EAST ARROW

#if EmacsCase() && EmacsEnabled
::\nearrow::
send ^x8{Enter}2197{Enter}
return

#if GtkApplicationCase()
::\nearrow::
send ^+u2197{Enter}
return

#if OtherCase()
::\nearrow::
send {U+2197}
return


;; Glyph: '↘' Descr: SOUTH EAST ARROW

#if EmacsCase() && EmacsEnabled
::\searrow::
send ^x8{Enter}2198{Enter}
return

#if GtkApplicationCase()
::\searrow::
send ^+u2198{Enter}
return

#if OtherCase()
::\searrow::
send {U+2198}
return


;; Glyph: '↙' Descr: SOUTH WEST ARROW

#if EmacsCase() && EmacsEnabled
::\swarrow::
send ^x8{Enter}2199{Enter}
return

#if GtkApplicationCase()
::\swarrow::
send ^+u2199{Enter}
return

#if OtherCase()
::\swarrow::
send {U+2199}
return


;; Glyph: '↚' Descr: LEFTWARDS ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nleftarrow::
send ^x8{Enter}219a{Enter}
return

#if GtkApplicationCase()
::\nleftarrow::
send ^+u219a{Enter}
return

#if OtherCase()
::\nleftarrow::
send {U+219A}
return


;; Glyph: '↛' Descr: RIGHTWARDS ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nrightarrow::
send ^x8{Enter}219b{Enter}
return

#if GtkApplicationCase()
::\nrightarrow::
send ^+u219b{Enter}
return

#if OtherCase()
::\nrightarrow::
send {U+219B}
return


;; Glyph: '↝' Descr: RIGHTWARDS WAVE ARROW

#if EmacsCase() && EmacsEnabled
::\leadsto::
send ^x8{Enter}219d{Enter}
return

#if GtkApplicationCase()
::\leadsto::
send ^+u219d{Enter}
return

#if OtherCase()
::\leadsto::
send {U+219D}
return


;; Glyph: '↞' Descr: LEFTWARDS TWO HEADED ARROW

#if EmacsCase() && EmacsEnabled
::\twoheadleftarrow::
send ^x8{Enter}219e{Enter}
return

#if GtkApplicationCase()
::\twoheadleftarrow::
send ^+u219e{Enter}
return

#if OtherCase()
::\twoheadleftarrow::
send {U+219E}
return


;; Glyph: '↠' Descr: RIGHTWARDS TWO HEADED ARROW

#if EmacsCase() && EmacsEnabled
::\twoheadrightarrow::
send ^x8{Enter}21a0{Enter}
return

#if GtkApplicationCase()
::\twoheadrightarrow::
send ^+u21a0{Enter}
return

#if OtherCase()
::\twoheadrightarrow::
send {U+21A0}
return


;; Glyph: '↢' Descr: LEFTWARDS ARROW WITH TAIL

#if EmacsCase() && EmacsEnabled
::\leftarrowtail::
send ^x8{Enter}21a2{Enter}
return

#if GtkApplicationCase()
::\leftarrowtail::
send ^+u21a2{Enter}
return

#if OtherCase()
::\leftarrowtail::
send {U+21A2}
return


;; Glyph: '↣' Descr: RIGHTWARDS ARROW WITH TAIL

#if EmacsCase() && EmacsEnabled
::\rightarrowtail::
send ^x8{Enter}21a3{Enter}
return

#if GtkApplicationCase()
::\rightarrowtail::
send ^+u21a3{Enter}
return

#if OtherCase()
::\rightarrowtail::
send {U+21A3}
return


;; Glyph: '↦' Descr: RIGHTWARDS ARROW FROM BAR

#if EmacsCase() && EmacsEnabled
::\longmapsto::
send ^x8{Enter}21a6{Enter}
return

#if GtkApplicationCase()
::\longmapsto::
send ^+u21a6{Enter}
return

#if OtherCase()
::\longmapsto::
send {U+21A6}
return


;; Glyph: '↦' Descr: RIGHTWARDS ARROW FROM BAR

#if EmacsCase() && EmacsEnabled
::\mapsto::
send ^x8{Enter}21a6{Enter}
return

#if GtkApplicationCase()
::\mapsto::
send ^+u21a6{Enter}
return

#if OtherCase()
::\mapsto::
send {U+21A6}
return


;; Glyph: '↩' Descr: LEFTWARDS ARROW WITH HOOK

#if EmacsCase() && EmacsEnabled
::\hookleftarrow::
send ^x8{Enter}21a9{Enter}
return

#if GtkApplicationCase()
::\hookleftarrow::
send ^+u21a9{Enter}
return

#if OtherCase()
::\hookleftarrow::
send {U+21A9}
return


;; Glyph: '↪' Descr: RIGHTWARDS ARROW WITH HOOK

#if EmacsCase() && EmacsEnabled
::\hookrightarrow::
send ^x8{Enter}21aa{Enter}
return

#if GtkApplicationCase()
::\hookrightarrow::
send ^+u21aa{Enter}
return

#if OtherCase()
::\hookrightarrow::
send {U+21AA}
return


;; Glyph: '↫' Descr: LEFTWARDS ARROW WITH LOOP

#if EmacsCase() && EmacsEnabled
::\looparrowleft::
send ^x8{Enter}21ab{Enter}
return

#if GtkApplicationCase()
::\looparrowleft::
send ^+u21ab{Enter}
return

#if OtherCase()
::\looparrowleft::
send {U+21AB}
return


;; Glyph: '↬' Descr: RIGHTWARDS ARROW WITH LOOP

#if EmacsCase() && EmacsEnabled
::\looparrowright::
send ^x8{Enter}21ac{Enter}
return

#if GtkApplicationCase()
::\looparrowright::
send ^+u21ac{Enter}
return

#if OtherCase()
::\looparrowright::
send {U+21AC}
return


;; Glyph: '↭' Descr: LEFT RIGHT WAVE ARROW

#if EmacsCase() && EmacsEnabled
::\leftrightsquigarrow::
send ^x8{Enter}21ad{Enter}
return

#if GtkApplicationCase()
::\leftrightsquigarrow::
send ^+u21ad{Enter}
return

#if OtherCase()
::\leftrightsquigarrow::
send {U+21AD}
return


;; Glyph: '↮' Descr: LEFT RIGHT ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nleftrightarrow::
send ^x8{Enter}21ae{Enter}
return

#if GtkApplicationCase()
::\nleftrightarrow::
send ^+u21ae{Enter}
return

#if OtherCase()
::\nleftrightarrow::
send {U+21AE}
return


;; Glyph: '↰' Descr: UPWARDS ARROW WITH TIP LEFTWARDS

#if EmacsCase() && EmacsEnabled
::\Lsh::
send ^x8{Enter}21b0{Enter}
return

#if GtkApplicationCase()
::\Lsh::
send ^+u21b0{Enter}
return

#if OtherCase()
::\Lsh::
send {U+21B0}
return


;; Glyph: '↱' Descr: UPWARDS ARROW WITH TIP RIGHTWARDS

#if EmacsCase() && EmacsEnabled
::\Rsh::
send ^x8{Enter}21b1{Enter}
return

#if GtkApplicationCase()
::\Rsh::
send ^+u21b1{Enter}
return

#if OtherCase()
::\Rsh::
send {U+21B1}
return


;; Glyph: '↶' Descr: ANTICLOCKWISE TOP SEMICIRCLE ARROW

#if EmacsCase() && EmacsEnabled
::\curvearrowleft::
send ^x8{Enter}21b6{Enter}
return

#if GtkApplicationCase()
::\curvearrowleft::
send ^+u21b6{Enter}
return

#if OtherCase()
::\curvearrowleft::
send {U+21B6}
return


;; Glyph: '↷' Descr: CLOCKWISE TOP SEMICIRCLE ARROW

#if EmacsCase() && EmacsEnabled
::\curvearrowright::
send ^x8{Enter}21b7{Enter}
return

#if GtkApplicationCase()
::\curvearrowright::
send ^+u21b7{Enter}
return

#if OtherCase()
::\curvearrowright::
send {U+21B7}
return


;; Glyph: '↺' Descr: ANTICLOCKWISE OPEN CIRCLE ARROW

#if EmacsCase() && EmacsEnabled
::\circlearrowleft::
send ^x8{Enter}21ba{Enter}
return

#if GtkApplicationCase()
::\circlearrowleft::
send ^+u21ba{Enter}
return

#if OtherCase()
::\circlearrowleft::
send {U+21BA}
return


;; Glyph: '↻' Descr: CLOCKWISE OPEN CIRCLE ARROW

#if EmacsCase() && EmacsEnabled
::\circlearrowright::
send ^x8{Enter}21bb{Enter}
return

#if GtkApplicationCase()
::\circlearrowright::
send ^+u21bb{Enter}
return

#if OtherCase()
::\circlearrowright::
send {U+21BB}
return


;; Glyph: '↼' Descr: LEFTWARDS HARPOON WITH BARB UPWARDS

#if EmacsCase() && EmacsEnabled
::\leftharpoonup::
send ^x8{Enter}21bc{Enter}
return

#if GtkApplicationCase()
::\leftharpoonup::
send ^+u21bc{Enter}
return

#if OtherCase()
::\leftharpoonup::
send {U+21BC}
return


;; Glyph: '↽' Descr: LEFTWARDS HARPOON WITH BARB DOWNWARDS

#if EmacsCase() && EmacsEnabled
::\leftharpoondown::
send ^x8{Enter}21bd{Enter}
return

#if GtkApplicationCase()
::\leftharpoondown::
send ^+u21bd{Enter}
return

#if OtherCase()
::\leftharpoondown::
send {U+21BD}
return


;; Glyph: '↾' Descr: UPWARDS HARPOON WITH BARB RIGHTWARDS

#if EmacsCase() && EmacsEnabled
::\uprightharpoon::
send ^x8{Enter}21be{Enter}
return

#if GtkApplicationCase()
::\uprightharpoon::
send ^+u21be{Enter}
return

#if OtherCase()
::\uprightharpoon::
send {U+21BE}
return


;; Glyph: '↿' Descr: UPWARDS HARPOON WITH BARB LEFTWARDS

#if EmacsCase() && EmacsEnabled
::\upleftharpoon::
send ^x8{Enter}21bf{Enter}
return

#if GtkApplicationCase()
::\upleftharpoon::
send ^+u21bf{Enter}
return

#if OtherCase()
::\upleftharpoon::
send {U+21BF}
return


;; Glyph: '⇀' Descr: RIGHTWARDS HARPOON WITH BARB UPWARDS

#if EmacsCase() && EmacsEnabled
::\rightharpoonup::
send ^x8{Enter}21c0{Enter}
return

#if GtkApplicationCase()
::\rightharpoonup::
send ^+u21c0{Enter}
return

#if OtherCase()
::\rightharpoonup::
send {U+21C0}
return


;; Glyph: '⇁' Descr: RIGHTWARDS HARPOON WITH BARB DOWNWARDS

#if EmacsCase() && EmacsEnabled
::\rightharpoondown::
send ^x8{Enter}21c1{Enter}
return

#if GtkApplicationCase()
::\rightharpoondown::
send ^+u21c1{Enter}
return

#if OtherCase()
::\rightharpoondown::
send {U+21C1}
return


;; Glyph: '⇂' Descr: DOWNWARDS HARPOON WITH BARB RIGHTWARDS

#if EmacsCase() && EmacsEnabled
::\downrightharpoon::
send ^x8{Enter}21c2{Enter}
return

#if GtkApplicationCase()
::\downrightharpoon::
send ^+u21c2{Enter}
return

#if OtherCase()
::\downrightharpoon::
send {U+21C2}
return


;; Glyph: '⇃' Descr: DOWNWARDS HARPOON WITH BARB LEFTWARDS

#if EmacsCase() && EmacsEnabled
::\downleftharpoon::
send ^x8{Enter}21c3{Enter}
return

#if GtkApplicationCase()
::\downleftharpoon::
send ^+u21c3{Enter}
return

#if OtherCase()
::\downleftharpoon::
send {U+21C3}
return


;; Glyph: '⇄' Descr: RIGHTWARDS ARROW OVER LEFTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\rightleftarrows::
send ^x8{Enter}21c4{Enter}
return

#if GtkApplicationCase()
::\rightleftarrows::
send ^+u21c4{Enter}
return

#if OtherCase()
::\rightleftarrows::
send {U+21C4}
return


;; Glyph: '⇆' Descr: LEFTWARDS ARROW OVER RIGHTWARDS ARROW

#if EmacsCase() && EmacsEnabled
::\leftrightarrows::
send ^x8{Enter}21c6{Enter}
return

#if GtkApplicationCase()
::\leftrightarrows::
send ^+u21c6{Enter}
return

#if OtherCase()
::\leftrightarrows::
send {U+21C6}
return


;; Glyph: '⇇' Descr: LEFTWARDS PAIRED ARROWS

#if EmacsCase() && EmacsEnabled
::\leftleftarrows::
send ^x8{Enter}21c7{Enter}
return

#if GtkApplicationCase()
::\leftleftarrows::
send ^+u21c7{Enter}
return

#if OtherCase()
::\leftleftarrows::
send {U+21C7}
return


;; Glyph: '⇈' Descr: UPWARDS PAIRED ARROWS

#if EmacsCase() && EmacsEnabled
::\upuparrows::
send ^x8{Enter}21c8{Enter}
return

#if GtkApplicationCase()
::\upuparrows::
send ^+u21c8{Enter}
return

#if OtherCase()
::\upuparrows::
send {U+21C8}
return


;; Glyph: '⇉' Descr: RIGHTWARDS PAIRED ARROWS

#if EmacsCase() && EmacsEnabled
::\rightrightarrows::
send ^x8{Enter}21c9{Enter}
return

#if GtkApplicationCase()
::\rightrightarrows::
send ^+u21c9{Enter}
return

#if OtherCase()
::\rightrightarrows::
send {U+21C9}
return


;; Glyph: '⇊' Descr: DOWNWARDS PAIRED ARROWS

#if EmacsCase() && EmacsEnabled
::\downdownarrows::
send ^x8{Enter}21ca{Enter}
return

#if GtkApplicationCase()
::\downdownarrows::
send ^+u21ca{Enter}
return

#if OtherCase()
::\downdownarrows::
send {U+21CA}
return


;; Glyph: '⇋' Descr: LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON

#if EmacsCase() && EmacsEnabled
::\leftrightharpoons::
send ^x8{Enter}21cb{Enter}
return

#if GtkApplicationCase()
::\leftrightharpoons::
send ^+u21cb{Enter}
return

#if OtherCase()
::\leftrightharpoons::
send {U+21CB}
return


;; Glyph: '⇌' Descr: RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON

#if EmacsCase() && EmacsEnabled
::\rightleftharpoons::
send ^x8{Enter}21cc{Enter}
return

#if GtkApplicationCase()
::\rightleftharpoons::
send ^+u21cc{Enter}
return

#if OtherCase()
::\rightleftharpoons::
send {U+21CC}
return


;; Glyph: '⇍' Descr: LEFTWARDS DOUBLE ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nLeftarrow::
send ^x8{Enter}21cd{Enter}
return

#if GtkApplicationCase()
::\nLeftarrow::
send ^+u21cd{Enter}
return

#if OtherCase()
::\nLeftarrow::
send {U+21CD}
return


;; Glyph: '⇎' Descr: LEFT RIGHT DOUBLE ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nLeftrightarrow::
send ^x8{Enter}21ce{Enter}
return

#if GtkApplicationCase()
::\nLeftrightarrow::
send ^+u21ce{Enter}
return

#if OtherCase()
::\nLeftrightarrow::
send {U+21CE}
return


;; Glyph: '⇏' Descr: RIGHTWARDS DOUBLE ARROW WITH STROKE

#if EmacsCase() && EmacsEnabled
::\nRightarrow::
send ^x8{Enter}21cf{Enter}
return

#if GtkApplicationCase()
::\nRightarrow::
send ^+u21cf{Enter}
return

#if OtherCase()
::\nRightarrow::
send {U+21CF}
return


;; Glyph: '⇐' Descr: LEFTWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Leftarrow::
send ^x8{Enter}21d0{Enter}
return

#if GtkApplicationCase()
::\Leftarrow::
send ^+u21d0{Enter}
return

#if OtherCase()
::\Leftarrow::
send {U+21D0}
return


;; Glyph: '⇐' Descr: LEFTWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Longleftarrow::
send ^x8{Enter}21d0{Enter}
return

#if GtkApplicationCase()
::\Longleftarrow::
send ^+u21d0{Enter}
return

#if OtherCase()
::\Longleftarrow::
send {U+21D0}
return


;; Glyph: '⇑' Descr: UPWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Uparrow::
send ^x8{Enter}21d1{Enter}
return

#if GtkApplicationCase()
::\Uparrow::
send ^+u21d1{Enter}
return

#if OtherCase()
::\Uparrow::
send {U+21D1}
return


;; Glyph: '⇒' Descr: RIGHTWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Longrightarrow::
send ^x8{Enter}21d2{Enter}
return

#if GtkApplicationCase()
::\Longrightarrow::
send ^+u21d2{Enter}
return

#if OtherCase()
::\Longrightarrow::
send {U+21D2}
return


;; Glyph: '⇒' Descr: RIGHTWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Rightarrow::
send ^x8{Enter}21d2{Enter}
return

#if GtkApplicationCase()
::\Rightarrow::
send ^+u21d2{Enter}
return

#if OtherCase()
::\Rightarrow::
send {U+21D2}
return


;; Glyph: '⇓' Descr: DOWNWARDS DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Downarrow::
send ^x8{Enter}21d3{Enter}
return

#if GtkApplicationCase()
::\Downarrow::
send ^+u21d3{Enter}
return

#if OtherCase()
::\Downarrow::
send {U+21D3}
return


;; Glyph: '⇔' Descr: LEFT RIGHT DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Leftrightarrow::
send ^x8{Enter}21d4{Enter}
return

#if GtkApplicationCase()
::\Leftrightarrow::
send ^+u21d4{Enter}
return

#if OtherCase()
::\Leftrightarrow::
send {U+21D4}
return


;; Glyph: '⇔' Descr: LEFT RIGHT DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Longleftrightarrow::
send ^x8{Enter}21d4{Enter}
return

#if GtkApplicationCase()
::\Longleftrightarrow::
send ^+u21d4{Enter}
return

#if OtherCase()
::\Longleftrightarrow::
send {U+21D4}
return


;; Glyph: '⇔' Descr: LEFT RIGHT DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\iff::
send ^x8{Enter}21d4{Enter}
return

#if GtkApplicationCase()
::\iff::
send ^+u21d4{Enter}
return

#if OtherCase()
::\iff::
send {U+21D4}
return


;; Glyph: '⇕' Descr: UP DOWN DOUBLE ARROW

#if EmacsCase() && EmacsEnabled
::\Updownarrow::
send ^x8{Enter}21d5{Enter}
return

#if GtkApplicationCase()
::\Updownarrow::
send ^+u21d5{Enter}
return

#if OtherCase()
::\Updownarrow::
send {U+21D5}
return


;; Glyph: '⇚' Descr: LEFTWARDS TRIPLE ARROW

#if EmacsCase() && EmacsEnabled
::\Lleftarrow::
send ^x8{Enter}21da{Enter}
return

#if GtkApplicationCase()
::\Lleftarrow::
send ^+u21da{Enter}
return

#if OtherCase()
::\Lleftarrow::
send {U+21DA}
return


;; Glyph: '⇛' Descr: RIGHTWARDS TRIPLE ARROW

#if EmacsCase() && EmacsEnabled
::\Rrightarrow::
send ^x8{Enter}21db{Enter}
return

#if GtkApplicationCase()
::\Rrightarrow::
send ^+u21db{Enter}
return

#if OtherCase()
::\Rrightarrow::
send {U+21DB}
return


;; Glyph: '⇝' Descr: RIGHTWARDS SQUIGGLE ARROW

#if EmacsCase() && EmacsEnabled
::\squigarrowright::
send ^x8{Enter}21dd{Enter}
return

#if GtkApplicationCase()
::\squigarrowright::
send ^+u21dd{Enter}
return

#if OtherCase()
::\squigarrowright::
send {U+21DD}
return


;; Glyph: '∀' Descr: FOR ALL

#if EmacsCase() && EmacsEnabled
::\forall::
send ^x8{Enter}2200{Enter}
return

#if GtkApplicationCase()
::\forall::
send ^+u2200{Enter}
return

#if OtherCase()
::\forall::
send {U+2200}
return


;; Glyph: '∁' Descr: COMPLEMENT

#if EmacsCase() && EmacsEnabled
::\complement::
send ^x8{Enter}2201{Enter}
return

#if GtkApplicationCase()
::\complement::
send ^+u2201{Enter}
return

#if OtherCase()
::\complement::
send {U+2201}
return


;; Glyph: '∂' Descr: PARTIAL DIFFERENTIAL

#if EmacsCase() && EmacsEnabled
::\partial::
send ^x8{Enter}2202{Enter}
return

#if GtkApplicationCase()
::\partial::
send ^+u2202{Enter}
return

#if OtherCase()
::\partial::
send {U+2202}
return


;; Glyph: '∃' Descr: THERE EXISTS

#if EmacsCase() && EmacsEnabled
::\exists::
send ^x8{Enter}2203{Enter}
return

#if GtkApplicationCase()
::\exists::
send ^+u2203{Enter}
return

#if OtherCase()
::\exists::
send {U+2203}
return


;; Glyph: '∄' Descr: THERE DOES NOT EXIST

#if EmacsCase() && EmacsEnabled
::\nexists::
send ^x8{Enter}2204{Enter}
return

#if GtkApplicationCase()
::\nexists::
send ^+u2204{Enter}
return

#if OtherCase()
::\nexists::
send {U+2204}
return


;; Glyph: '∅' Descr: EMPTY SET

#if EmacsCase() && EmacsEnabled
::\emptyset::
send ^x8{Enter}2205{Enter}
return

#if GtkApplicationCase()
::\emptyset::
send ^+u2205{Enter}
return

#if OtherCase()
::\emptyset::
send {U+2205}
return


;; Glyph: '∇' Descr: NABLA

#if EmacsCase() && EmacsEnabled
::\nabla::
send ^x8{Enter}2207{Enter}
return

#if GtkApplicationCase()
::\nabla::
send ^+u2207{Enter}
return

#if OtherCase()
::\nabla::
send {U+2207}
return


;; Glyph: '∈' Descr: ELEMENT OF

#if EmacsCase() && EmacsEnabled
::\in::
send ^x8{Enter}2208{Enter}
return

#if GtkApplicationCase()
::\in::
send ^+u2208{Enter}
return

#if OtherCase()
::\in::
send {U+2208}
return


;; Glyph: '∉' Descr: NOT AN ELEMENT OF

#if EmacsCase() && EmacsEnabled
::\notin::
send ^x8{Enter}2209{Enter}
return

#if GtkApplicationCase()
::\notin::
send ^+u2209{Enter}
return

#if OtherCase()
::\notin::
send {U+2209}
return


;; Glyph: '∋' Descr: CONTAINS AS MEMBER

#if EmacsCase() && EmacsEnabled
::\ni::
send ^x8{Enter}220b{Enter}
return

#if GtkApplicationCase()
::\ni::
send ^+u220b{Enter}
return

#if OtherCase()
::\ni::
send {U+220B}
return


;; Glyph: '∍' Descr: SMALL CONTAINS AS MEMBER

#if EmacsCase() && EmacsEnabled
::\backepsilon::
send ^x8{Enter}220d{Enter}
return

#if GtkApplicationCase()
::\backepsilon::
send ^+u220d{Enter}
return

#if OtherCase()
::\backepsilon::
send {U+220D}
return


;; Glyph: '∎' Descr: END OF PROOF

#if EmacsCase() && EmacsEnabled
::\qed::
send ^x8{Enter}220e{Enter}
return

#if GtkApplicationCase()
::\qed::
send ^+u220e{Enter}
return

#if OtherCase()
::\qed::
send {U+220E}
return


;; Glyph: '∏' Descr: N-ARY PRODUCT

#if EmacsCase() && EmacsEnabled
::\prod::
send ^x8{Enter}220f{Enter}
return

#if GtkApplicationCase()
::\prod::
send ^+u220f{Enter}
return

#if OtherCase()
::\prod::
send {U+220F}
return


;; Glyph: '∐' Descr: N-ARY COPRODUCT

#if EmacsCase() && EmacsEnabled
::\amalg::
send ^x8{Enter}2210{Enter}
return

#if GtkApplicationCase()
::\amalg::
send ^+u2210{Enter}
return

#if OtherCase()
::\amalg::
send {U+2210}
return


;; Glyph: '∐' Descr: N-ARY COPRODUCT

#if EmacsCase() && EmacsEnabled
::\coprod::
send ^x8{Enter}2210{Enter}
return

#if GtkApplicationCase()
::\coprod::
send ^+u2210{Enter}
return

#if OtherCase()
::\coprod::
send {U+2210}
return


;; Glyph: '∐' Descr: N-ARY COPRODUCT

#if EmacsCase() && EmacsEnabled
::\smallamalg::
send ^x8{Enter}2210{Enter}
return

#if GtkApplicationCase()
::\smallamalg::
send ^+u2210{Enter}
return

#if OtherCase()
::\smallamalg::
send {U+2210}
return


;; Glyph: '∑' Descr: N-ARY SUMMATION

#if EmacsCase() && EmacsEnabled
::\sum::
send ^x8{Enter}2211{Enter}
return

#if GtkApplicationCase()
::\sum::
send ^+u2211{Enter}
return

#if OtherCase()
::\sum::
send {U+2211}
return


;; Glyph: '−' Descr: MINUS SIGN

#if EmacsCase() && EmacsEnabled
::\minus::
send ^x8{Enter}2212{Enter}
return

#if GtkApplicationCase()
::\minus::
send ^+u2212{Enter}
return

#if OtherCase()
::\minus::
send {U+2212}
return


;; Glyph: '∓' Descr: MINUS-OR-PLUS SIGN

#if EmacsCase() && EmacsEnabled
::\mp::
send ^x8{Enter}2213{Enter}
return

#if GtkApplicationCase()
::\mp::
send ^+u2213{Enter}
return

#if OtherCase()
::\mp::
send {U+2213}
return


;; Glyph: '∔' Descr: DOT PLUS

#if EmacsCase() && EmacsEnabled
::\dotplus::
send ^x8{Enter}2214{Enter}
return

#if GtkApplicationCase()
::\dotplus::
send ^+u2214{Enter}
return

#if OtherCase()
::\dotplus::
send {U+2214}
return


;; Glyph: '∖' Descr: SET MINUS

#if EmacsCase() && EmacsEnabled
::\setminus::
send ^x8{Enter}2216{Enter}
return

#if GtkApplicationCase()
::\setminus::
send ^+u2216{Enter}
return

#if OtherCase()
::\setminus::
send {U+2216}
return


;; Glyph: '∖' Descr: SET MINUS

#if EmacsCase() && EmacsEnabled
::\smallsetminus::
send ^x8{Enter}2216{Enter}
return

#if GtkApplicationCase()
::\smallsetminus::
send ^+u2216{Enter}
return

#if OtherCase()
::\smallsetminus::
send {U+2216}
return


;; Glyph: '∗' Descr: ASTERISK OPERATOR

#if EmacsCase() && EmacsEnabled
::\ast::
send ^x8{Enter}2217{Enter}
return

#if GtkApplicationCase()
::\ast::
send ^+u2217{Enter}
return

#if OtherCase()
::\ast::
send {U+2217}
return


;; Glyph: '∘' Descr: RING OPERATOR

#if EmacsCase() && EmacsEnabled
::\circ::
send ^x8{Enter}2218{Enter}
return

#if GtkApplicationCase()
::\circ::
send ^+u2218{Enter}
return

#if OtherCase()
::\circ::
send {U+2218}
return


;; Glyph: '√' Descr: SQUARE ROOT

#if EmacsCase() && EmacsEnabled
::\surd::
send ^x8{Enter}221a{Enter}
return

#if GtkApplicationCase()
::\surd::
send ^+u221a{Enter}
return

#if OtherCase()
::\surd::
send {U+221A}
return


;; Glyph: '∝' Descr: PROPORTIONAL TO

#if EmacsCase() && EmacsEnabled
::\propto::
send ^x8{Enter}221d{Enter}
return

#if GtkApplicationCase()
::\propto::
send ^+u221d{Enter}
return

#if OtherCase()
::\propto::
send {U+221D}
return


;; Glyph: '∝' Descr: PROPORTIONAL TO

#if EmacsCase() && EmacsEnabled
::\varpropto::
send ^x8{Enter}221d{Enter}
return

#if GtkApplicationCase()
::\varpropto::
send ^+u221d{Enter}
return

#if OtherCase()
::\varpropto::
send {U+221D}
return


;; Glyph: '∞' Descr: INFINITY

#if EmacsCase() && EmacsEnabled
::\infty::
send ^x8{Enter}221e{Enter}
return

#if GtkApplicationCase()
::\infty::
send ^+u221e{Enter}
return

#if OtherCase()
::\infty::
send {U+221E}
return


;; Glyph: '∠' Descr: ANGLE

#if EmacsCase() && EmacsEnabled
::\angle::
send ^x8{Enter}2220{Enter}
return

#if GtkApplicationCase()
::\angle::
send ^+u2220{Enter}
return

#if OtherCase()
::\angle::
send {U+2220}
return


;; Glyph: '∡' Descr: MEASURED ANGLE

#if EmacsCase() && EmacsEnabled
::\measuredangle::
send ^x8{Enter}2221{Enter}
return

#if GtkApplicationCase()
::\measuredangle::
send ^+u2221{Enter}
return

#if OtherCase()
::\measuredangle::
send {U+2221}
return


;; Glyph: '∢' Descr: SPHERICAL ANGLE

#if EmacsCase() && EmacsEnabled
::\sphericalangle::
send ^x8{Enter}2222{Enter}
return

#if GtkApplicationCase()
::\sphericalangle::
send ^+u2222{Enter}
return

#if OtherCase()
::\sphericalangle::
send {U+2222}
return


;; Glyph: '∣' Descr: DIVIDES

#if EmacsCase() && EmacsEnabled
::\mid::
send ^x8{Enter}2223{Enter}
return

#if GtkApplicationCase()
::\mid::
send ^+u2223{Enter}
return

#if OtherCase()
::\mid::
send {U+2223}
return


;; Glyph: '∣' Descr: DIVIDES

#if EmacsCase() && EmacsEnabled
::\shortmid::
send ^x8{Enter}2223{Enter}
return

#if GtkApplicationCase()
::\shortmid::
send ^+u2223{Enter}
return

#if OtherCase()
::\shortmid::
send {U+2223}
return


;; Glyph: '∤' Descr: DOES NOT DIVIDE

#if EmacsCase() && EmacsEnabled
::\nmid::
send ^x8{Enter}2224{Enter}
return

#if GtkApplicationCase()
::\nmid::
send ^+u2224{Enter}
return

#if OtherCase()
::\nmid::
send {U+2224}
return


;; Glyph: '∤' Descr: DOES NOT DIVIDE

#if EmacsCase() && EmacsEnabled
::\nshortmid::
send ^x8{Enter}2224{Enter}
return

#if GtkApplicationCase()
::\nshortmid::
send ^+u2224{Enter}
return

#if OtherCase()
::\nshortmid::
send {U+2224}
return


;; Glyph: '∥' Descr: PARALLEL TO

#if EmacsCase() && EmacsEnabled
::\parallel::
send ^x8{Enter}2225{Enter}
return

#if GtkApplicationCase()
::\parallel::
send ^+u2225{Enter}
return

#if OtherCase()
::\parallel::
send {U+2225}
return


;; Glyph: '∥' Descr: PARALLEL TO

#if EmacsCase() && EmacsEnabled
::\shortparallel::
send ^x8{Enter}2225{Enter}
return

#if GtkApplicationCase()
::\shortparallel::
send ^+u2225{Enter}
return

#if OtherCase()
::\shortparallel::
send {U+2225}
return


;; Glyph: '∦' Descr: NOT PARALLEL TO

#if EmacsCase() && EmacsEnabled
::\nparallel::
send ^x8{Enter}2226{Enter}
return

#if GtkApplicationCase()
::\nparallel::
send ^+u2226{Enter}
return

#if OtherCase()
::\nparallel::
send {U+2226}
return


;; Glyph: '∦' Descr: NOT PARALLEL TO

#if EmacsCase() && EmacsEnabled
::\nshortparallel::
send ^x8{Enter}2226{Enter}
return

#if GtkApplicationCase()
::\nshortparallel::
send ^+u2226{Enter}
return

#if OtherCase()
::\nshortparallel::
send {U+2226}
return


;; Glyph: '∧' Descr: LOGICAL AND

#if EmacsCase() && EmacsEnabled
::\wedge::
send ^x8{Enter}2227{Enter}
return

#if GtkApplicationCase()
::\wedge::
send ^+u2227{Enter}
return

#if OtherCase()
::\wedge::
send {U+2227}
return


;; Glyph: '∨' Descr: LOGICAL OR

#if EmacsCase() && EmacsEnabled
::\vee::
send ^x8{Enter}2228{Enter}
return

#if GtkApplicationCase()
::\vee::
send ^+u2228{Enter}
return

#if OtherCase()
::\vee::
send {U+2228}
return


;; Glyph: '∩' Descr: INTERSECTION

#if EmacsCase() && EmacsEnabled
::\cap::
send ^x8{Enter}2229{Enter}
return

#if GtkApplicationCase()
::\cap::
send ^+u2229{Enter}
return

#if OtherCase()
::\cap::
send {U+2229}
return


;; Glyph: '∪' Descr: UNION

#if EmacsCase() && EmacsEnabled
::\cup::
send ^x8{Enter}222a{Enter}
return

#if GtkApplicationCase()
::\cup::
send ^+u222a{Enter}
return

#if OtherCase()
::\cup::
send {U+222A}
return


;; Glyph: '∫' Descr: INTEGRAL

#if EmacsCase() && EmacsEnabled
::\int::
send ^x8{Enter}222b{Enter}
return

#if GtkApplicationCase()
::\int::
send ^+u222b{Enter}
return

#if OtherCase()
::\int::
send {U+222B}
return


;; Glyph: '∮' Descr: CONTOUR INTEGRAL

#if EmacsCase() && EmacsEnabled
::\oint::
send ^x8{Enter}222e{Enter}
return

#if GtkApplicationCase()
::\oint::
send ^+u222e{Enter}
return

#if OtherCase()
::\oint::
send {U+222E}
return


;; Glyph: '∴' Descr: THEREFORE

#if EmacsCase() && EmacsEnabled
::\therefore::
send ^x8{Enter}2234{Enter}
return

#if GtkApplicationCase()
::\therefore::
send ^+u2234{Enter}
return

#if OtherCase()
::\therefore::
send {U+2234}
return


;; Glyph: '∵' Descr: BECAUSE

#if EmacsCase() && EmacsEnabled
::\because::
send ^x8{Enter}2235{Enter}
return

#if GtkApplicationCase()
::\because::
send ^+u2235{Enter}
return

#if OtherCase()
::\because::
send {U+2235}
return


;; Glyph: '∼' Descr: TILDE OPERATOR

#if EmacsCase() && EmacsEnabled
::\sim::
send ^x8{Enter}223c{Enter}
return

#if GtkApplicationCase()
::\sim::
send ^+u223c{Enter}
return

#if OtherCase()
::\sim::
send {U+223C}
return


;; Glyph: '∼' Descr: TILDE OPERATOR

#if EmacsCase() && EmacsEnabled
::\thicksim::
send ^x8{Enter}223c{Enter}
return

#if GtkApplicationCase()
::\thicksim::
send ^+u223c{Enter}
return

#if OtherCase()
::\thicksim::
send {U+223C}
return


;; Glyph: '∽' Descr: REVERSED TILDE

#if EmacsCase() && EmacsEnabled
::\backsim::
send ^x8{Enter}223d{Enter}
return

#if GtkApplicationCase()
::\backsim::
send ^+u223d{Enter}
return

#if OtherCase()
::\backsim::
send {U+223D}
return


;; Glyph: '≀' Descr: WREATH PRODUCT

#if EmacsCase() && EmacsEnabled
::\wr::
send ^x8{Enter}2240{Enter}
return

#if GtkApplicationCase()
::\wr::
send ^+u2240{Enter}
return

#if OtherCase()
::\wr::
send {U+2240}
return


;; Glyph: '≁' Descr: NOT TILDE

#if EmacsCase() && EmacsEnabled
::\nsim::
send ^x8{Enter}2241{Enter}
return

#if GtkApplicationCase()
::\nsim::
send ^+u2241{Enter}
return

#if OtherCase()
::\nsim::
send {U+2241}
return


;; Glyph: '≃' Descr: ASYMPTOTICALLY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\simeq::
send ^x8{Enter}2243{Enter}
return

#if GtkApplicationCase()
::\simeq::
send ^+u2243{Enter}
return

#if OtherCase()
::\simeq::
send {U+2243}
return


;; Glyph: '≄' Descr: NOT ASYMPTOTICALLY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nsimeq::
send ^x8{Enter}2244{Enter}
return

#if GtkApplicationCase()
::\nsimeq::
send ^+u2244{Enter}
return

#if OtherCase()
::\nsimeq::
send {U+2244}
return


;; Glyph: '≅' Descr: APPROXIMATELY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\cong::
send ^x8{Enter}2245{Enter}
return

#if GtkApplicationCase()
::\cong::
send ^+u2245{Enter}
return

#if OtherCase()
::\cong::
send {U+2245}
return


;; Glyph: '≇' Descr: NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ncong::
send ^x8{Enter}2247{Enter}
return

#if GtkApplicationCase()
::\ncong::
send ^+u2247{Enter}
return

#if OtherCase()
::\ncong::
send {U+2247}
return


;; Glyph: '≈' Descr: ALMOST EQUAL TO

#if EmacsCase() && EmacsEnabled
::\approx::
send ^x8{Enter}2248{Enter}
return

#if GtkApplicationCase()
::\approx::
send ^+u2248{Enter}
return

#if OtherCase()
::\approx::
send {U+2248}
return


;; Glyph: '≈' Descr: ALMOST EQUAL TO

#if EmacsCase() && EmacsEnabled
::\thickapprox::
send ^x8{Enter}2248{Enter}
return

#if GtkApplicationCase()
::\thickapprox::
send ^+u2248{Enter}
return

#if OtherCase()
::\thickapprox::
send {U+2248}
return


;; Glyph: '≉' Descr: NOT ALMOST EQUAL TO

#if EmacsCase() && EmacsEnabled
::\napprox::
send ^x8{Enter}2249{Enter}
return

#if GtkApplicationCase()
::\napprox::
send ^+u2249{Enter}
return

#if OtherCase()
::\napprox::
send {U+2249}
return


;; Glyph: '≊' Descr: ALMOST EQUAL OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\approxeq::
send ^x8{Enter}224a{Enter}
return

#if GtkApplicationCase()
::\approxeq::
send ^+u224a{Enter}
return

#if OtherCase()
::\approxeq::
send {U+224A}
return


;; Glyph: '≌' Descr: ALL EQUAL TO

#if EmacsCase() && EmacsEnabled
::\backcong::
send ^x8{Enter}224c{Enter}
return

#if GtkApplicationCase()
::\backcong::
send ^+u224c{Enter}
return

#if OtherCase()
::\backcong::
send {U+224C}
return


;; Glyph: '≍' Descr: EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\asymp::
send ^x8{Enter}224d{Enter}
return

#if GtkApplicationCase()
::\asymp::
send ^+u224d{Enter}
return

#if OtherCase()
::\asymp::
send {U+224D}
return


;; Glyph: '≎' Descr: GEOMETRICALLY EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\Bumpeq::
send ^x8{Enter}224e{Enter}
return

#if GtkApplicationCase()
::\Bumpeq::
send ^+u224e{Enter}
return

#if OtherCase()
::\Bumpeq::
send {U+224E}
return


;; Glyph: '≏' Descr: DIFFERENCE BETWEEN

#if EmacsCase() && EmacsEnabled
::\bumpeq::
send ^x8{Enter}224f{Enter}
return

#if GtkApplicationCase()
::\bumpeq::
send ^+u224f{Enter}
return

#if OtherCase()
::\bumpeq::
send {U+224F}
return


;; Glyph: '≐' Descr: APPROACHES THE LIMIT

#if EmacsCase() && EmacsEnabled
::\doteq::
send ^x8{Enter}2250{Enter}
return

#if GtkApplicationCase()
::\doteq::
send ^+u2250{Enter}
return

#if OtherCase()
::\doteq::
send {U+2250}
return


;; Glyph: '≑' Descr: GEOMETRICALLY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\doteqdot::
send ^x8{Enter}2251{Enter}
return

#if GtkApplicationCase()
::\doteqdot::
send ^+u2251{Enter}
return

#if OtherCase()
::\doteqdot::
send {U+2251}
return


;; Glyph: '≒' Descr: APPROXIMATELY EQUAL TO OR THE IMAGE OF

#if EmacsCase() && EmacsEnabled
::\fallingdotseq::
send ^x8{Enter}2252{Enter}
return

#if GtkApplicationCase()
::\fallingdotseq::
send ^+u2252{Enter}
return

#if OtherCase()
::\fallingdotseq::
send {U+2252}
return


;; Glyph: '≓' Descr: IMAGE OF OR APPROXIMATELY EQUAL TO

#if EmacsCase() && EmacsEnabled
::\risingdotseq::
send ^x8{Enter}2253{Enter}
return

#if GtkApplicationCase()
::\risingdotseq::
send ^+u2253{Enter}
return

#if OtherCase()
::\risingdotseq::
send {U+2253}
return


;; Glyph: '≔' Descr: COLON EQUALS

#if EmacsCase() && EmacsEnabled
::\coloneq::
send ^x8{Enter}2254{Enter}
return

#if GtkApplicationCase()
::\coloneq::
send ^+u2254{Enter}
return

#if OtherCase()
::\coloneq::
send {U+2254}
return


;; Glyph: '≕' Descr: EQUALS COLON

#if EmacsCase() && EmacsEnabled
::\eqcolon::
send ^x8{Enter}2255{Enter}
return

#if GtkApplicationCase()
::\eqcolon::
send ^+u2255{Enter}
return

#if OtherCase()
::\eqcolon::
send {U+2255}
return


;; Glyph: '≖' Descr: RING IN EQUAL TO

#if EmacsCase() && EmacsEnabled
::\eqcirc::
send ^x8{Enter}2256{Enter}
return

#if GtkApplicationCase()
::\eqcirc::
send ^+u2256{Enter}
return

#if OtherCase()
::\eqcirc::
send {U+2256}
return


;; Glyph: '≗' Descr: RING EQUAL TO

#if EmacsCase() && EmacsEnabled
::\circeq::
send ^x8{Enter}2257{Enter}
return

#if GtkApplicationCase()
::\circeq::
send ^+u2257{Enter}
return

#if OtherCase()
::\circeq::
send {U+2257}
return


;; Glyph: '≙' Descr: ESTIMATES

#if EmacsCase() && EmacsEnabled
::\defs::
send ^x8{Enter}2259{Enter}
return

#if GtkApplicationCase()
::\defs::
send ^+u2259{Enter}
return

#if OtherCase()
::\defs::
send {U+2259}
return


;; Glyph: '≜' Descr: DELTA EQUAL TO

#if EmacsCase() && EmacsEnabled
::\triangleq::
send ^x8{Enter}225c{Enter}
return

#if GtkApplicationCase()
::\triangleq::
send ^+u225c{Enter}
return

#if OtherCase()
::\triangleq::
send {U+225C}
return


;; Glyph: '≠' Descr: NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ne::
send ^x8{Enter}2260{Enter}
return

#if GtkApplicationCase()
::\ne::
send ^+u2260{Enter}
return

#if OtherCase()
::\ne::
send {U+2260}
return


;; Glyph: '≠' Descr: NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\neq::
send ^x8{Enter}2260{Enter}
return

#if GtkApplicationCase()
::\neq::
send ^+u2260{Enter}
return

#if OtherCase()
::\neq::
send {U+2260}
return


;; Glyph: '≡' Descr: IDENTICAL TO

#if EmacsCase() && EmacsEnabled
::\equiv::
send ^x8{Enter}2261{Enter}
return

#if GtkApplicationCase()
::\equiv::
send ^+u2261{Enter}
return

#if OtherCase()
::\equiv::
send {U+2261}
return


;; Glyph: '≢' Descr: NOT IDENTICAL TO

#if EmacsCase() && EmacsEnabled
::\nequiv::
send ^x8{Enter}2262{Enter}
return

#if GtkApplicationCase()
::\nequiv::
send ^+u2262{Enter}
return

#if OtherCase()
::\nequiv::
send {U+2262}
return


;; Glyph: '≤' Descr: LESS-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\le::
send ^x8{Enter}2264{Enter}
return

#if GtkApplicationCase()
::\le::
send ^+u2264{Enter}
return

#if OtherCase()
::\le::
send {U+2264}
return


;; Glyph: '≤' Descr: LESS-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\leq::
send ^x8{Enter}2264{Enter}
return

#if GtkApplicationCase()
::\leq::
send ^+u2264{Enter}
return

#if OtherCase()
::\leq::
send {U+2264}
return


;; Glyph: '≤' Descr: LESS-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\leqslant::
send ^x8{Enter}2264{Enter}
return

#if GtkApplicationCase()
::\leqslant::
send ^+u2264{Enter}
return

#if OtherCase()
::\leqslant::
send {U+2264}
return


;; Glyph: '≥' Descr: GREATER-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ge::
send ^x8{Enter}2265{Enter}
return

#if GtkApplicationCase()
::\ge::
send ^+u2265{Enter}
return

#if OtherCase()
::\ge::
send {U+2265}
return


;; Glyph: '≥' Descr: GREATER-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\geq::
send ^x8{Enter}2265{Enter}
return

#if GtkApplicationCase()
::\geq::
send ^+u2265{Enter}
return

#if OtherCase()
::\geq::
send {U+2265}
return


;; Glyph: '≥' Descr: GREATER-THAN OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\geqslant::
send ^x8{Enter}2265{Enter}
return

#if GtkApplicationCase()
::\geqslant::
send ^+u2265{Enter}
return

#if OtherCase()
::\geqslant::
send {U+2265}
return


;; Glyph: '≦' Descr: LESS-THAN OVER EQUAL TO

#if EmacsCase() && EmacsEnabled
::\leqq::
send ^x8{Enter}2266{Enter}
return

#if GtkApplicationCase()
::\leqq::
send ^+u2266{Enter}
return

#if OtherCase()
::\leqq::
send {U+2266}
return


;; Glyph: '≧' Descr: GREATER-THAN OVER EQUAL TO

#if EmacsCase() && EmacsEnabled
::\geqq::
send ^x8{Enter}2267{Enter}
return

#if GtkApplicationCase()
::\geqq::
send ^+u2267{Enter}
return

#if OtherCase()
::\geqq::
send {U+2267}
return


;; Glyph: '≨' Descr: LESS-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\lneq::
send ^x8{Enter}2268{Enter}
return

#if GtkApplicationCase()
::\lneq::
send ^+u2268{Enter}
return

#if OtherCase()
::\lneq::
send {U+2268}
return


;; Glyph: '≨' Descr: LESS-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\lneqq::
send ^x8{Enter}2268{Enter}
return

#if GtkApplicationCase()
::\lneqq::
send ^+u2268{Enter}
return

#if OtherCase()
::\lneqq::
send {U+2268}
return


;; Glyph: '≨' Descr: LESS-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\lvertneqq::
send ^x8{Enter}2268{Enter}
return

#if GtkApplicationCase()
::\lvertneqq::
send ^+u2268{Enter}
return

#if OtherCase()
::\lvertneqq::
send {U+2268}
return


;; Glyph: '≩' Descr: GREATER-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\gneq::
send ^x8{Enter}2269{Enter}
return

#if GtkApplicationCase()
::\gneq::
send ^+u2269{Enter}
return

#if OtherCase()
::\gneq::
send {U+2269}
return


;; Glyph: '≩' Descr: GREATER-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\gneqq::
send ^x8{Enter}2269{Enter}
return

#if GtkApplicationCase()
::\gneqq::
send ^+u2269{Enter}
return

#if OtherCase()
::\gneqq::
send {U+2269}
return


;; Glyph: '≩' Descr: GREATER-THAN BUT NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\gvertneqq::
send ^x8{Enter}2269{Enter}
return

#if GtkApplicationCase()
::\gvertneqq::
send ^+u2269{Enter}
return

#if OtherCase()
::\gvertneqq::
send {U+2269}
return


;; Glyph: '≪' Descr: MUCH LESS-THAN

#if EmacsCase() && EmacsEnabled
::\ll::
send ^x8{Enter}226a{Enter}
return

#if GtkApplicationCase()
::\ll::
send ^+u226a{Enter}
return

#if OtherCase()
::\ll::
send {U+226A}
return


;; Glyph: '≫' Descr: MUCH GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\gg::
send ^x8{Enter}226b{Enter}
return

#if GtkApplicationCase()
::\gg::
send ^+u226b{Enter}
return

#if OtherCase()
::\gg::
send {U+226B}
return


;; Glyph: '≬' Descr: BETWEEN

#if EmacsCase() && EmacsEnabled
::\between::
send ^x8{Enter}226c{Enter}
return

#if GtkApplicationCase()
::\between::
send ^+u226c{Enter}
return

#if OtherCase()
::\between::
send {U+226C}
return


;; Glyph: '≮' Descr: NOT LESS-THAN

#if EmacsCase() && EmacsEnabled
::\nless::
send ^x8{Enter}226e{Enter}
return

#if GtkApplicationCase()
::\nless::
send ^+u226e{Enter}
return

#if OtherCase()
::\nless::
send {U+226E}
return


;; Glyph: '≯' Descr: NOT GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\ngtr::
send ^x8{Enter}226f{Enter}
return

#if GtkApplicationCase()
::\ngtr::
send ^+u226f{Enter}
return

#if OtherCase()
::\ngtr::
send {U+226F}
return


;; Glyph: '≰' Descr: NEITHER LESS-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nleq::
send ^x8{Enter}2270{Enter}
return

#if GtkApplicationCase()
::\nleq::
send ^+u2270{Enter}
return

#if OtherCase()
::\nleq::
send {U+2270}
return


;; Glyph: '≰' Descr: NEITHER LESS-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nleqq::
send ^x8{Enter}2270{Enter}
return

#if GtkApplicationCase()
::\nleqq::
send ^+u2270{Enter}
return

#if OtherCase()
::\nleqq::
send {U+2270}
return


;; Glyph: '≰' Descr: NEITHER LESS-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nleqslant::
send ^x8{Enter}2270{Enter}
return

#if GtkApplicationCase()
::\nleqslant::
send ^+u2270{Enter}
return

#if OtherCase()
::\nleqslant::
send {U+2270}
return


;; Glyph: '≱' Descr: NEITHER GREATER-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ngeq::
send ^x8{Enter}2271{Enter}
return

#if GtkApplicationCase()
::\ngeq::
send ^+u2271{Enter}
return

#if OtherCase()
::\ngeq::
send {U+2271}
return


;; Glyph: '≱' Descr: NEITHER GREATER-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ngeqq::
send ^x8{Enter}2271{Enter}
return

#if GtkApplicationCase()
::\ngeqq::
send ^+u2271{Enter}
return

#if OtherCase()
::\ngeqq::
send {U+2271}
return


;; Glyph: '≱' Descr: NEITHER GREATER-THAN NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ngeqslant::
send ^x8{Enter}2271{Enter}
return

#if GtkApplicationCase()
::\ngeqslant::
send ^+u2271{Enter}
return

#if OtherCase()
::\ngeqslant::
send {U+2271}
return


;; Glyph: '≲' Descr: LESS-THAN OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\lessapprox::
send ^x8{Enter}2272{Enter}
return

#if GtkApplicationCase()
::\lessapprox::
send ^+u2272{Enter}
return

#if OtherCase()
::\lessapprox::
send {U+2272}
return


;; Glyph: '≲' Descr: LESS-THAN OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\lesssim::
send ^x8{Enter}2272{Enter}
return

#if GtkApplicationCase()
::\lesssim::
send ^+u2272{Enter}
return

#if OtherCase()
::\lesssim::
send {U+2272}
return


;; Glyph: '≳' Descr: GREATER-THAN OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\gtrapprox::
send ^x8{Enter}2273{Enter}
return

#if GtkApplicationCase()
::\gtrapprox::
send ^+u2273{Enter}
return

#if OtherCase()
::\gtrapprox::
send {U+2273}
return


;; Glyph: '≳' Descr: GREATER-THAN OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\gtrsim::
send ^x8{Enter}2273{Enter}
return

#if GtkApplicationCase()
::\gtrsim::
send ^+u2273{Enter}
return

#if OtherCase()
::\gtrsim::
send {U+2273}
return


;; Glyph: '≶' Descr: LESS-THAN OR GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\lessgtr::
send ^x8{Enter}2276{Enter}
return

#if GtkApplicationCase()
::\lessgtr::
send ^+u2276{Enter}
return

#if OtherCase()
::\lessgtr::
send {U+2276}
return


;; Glyph: '≷' Descr: GREATER-THAN OR LESS-THAN

#if EmacsCase() && EmacsEnabled
::\gtrless::
send ^x8{Enter}2277{Enter}
return

#if GtkApplicationCase()
::\gtrless::
send ^+u2277{Enter}
return

#if OtherCase()
::\gtrless::
send {U+2277}
return


;; Glyph: '≺' Descr: PRECEDES

#if EmacsCase() && EmacsEnabled
::\prec::
send ^x8{Enter}227a{Enter}
return

#if GtkApplicationCase()
::\prec::
send ^+u227a{Enter}
return

#if OtherCase()
::\prec::
send {U+227A}
return


;; Glyph: '≻' Descr: SUCCEEDS

#if EmacsCase() && EmacsEnabled
::\succ::
send ^x8{Enter}227b{Enter}
return

#if GtkApplicationCase()
::\succ::
send ^+u227b{Enter}
return

#if OtherCase()
::\succ::
send {U+227B}
return


;; Glyph: '≼' Descr: PRECEDES OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\curlypreceq::
send ^x8{Enter}227c{Enter}
return

#if GtkApplicationCase()
::\curlypreceq::
send ^+u227c{Enter}
return

#if OtherCase()
::\curlypreceq::
send {U+227C}
return


;; Glyph: '≼' Descr: PRECEDES OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\preceq::
send ^x8{Enter}227c{Enter}
return

#if GtkApplicationCase()
::\preceq::
send ^+u227c{Enter}
return

#if OtherCase()
::\preceq::
send {U+227C}
return


;; Glyph: '≽' Descr: SUCCEEDS OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\succcurlyeq::
send ^x8{Enter}227d{Enter}
return

#if GtkApplicationCase()
::\succcurlyeq::
send ^+u227d{Enter}
return

#if OtherCase()
::\succcurlyeq::
send {U+227D}
return


;; Glyph: '≽' Descr: SUCCEEDS OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\succeq::
send ^x8{Enter}227d{Enter}
return

#if GtkApplicationCase()
::\succeq::
send ^+u227d{Enter}
return

#if OtherCase()
::\succeq::
send {U+227D}
return


;; Glyph: '≾' Descr: PRECEDES OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\precapprox::
send ^x8{Enter}227e{Enter}
return

#if GtkApplicationCase()
::\precapprox::
send ^+u227e{Enter}
return

#if OtherCase()
::\precapprox::
send {U+227E}
return


;; Glyph: '≾' Descr: PRECEDES OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\precsim::
send ^x8{Enter}227e{Enter}
return

#if GtkApplicationCase()
::\precsim::
send ^+u227e{Enter}
return

#if OtherCase()
::\precsim::
send {U+227E}
return


;; Glyph: '≿' Descr: SUCCEEDS OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\succapprox::
send ^x8{Enter}227f{Enter}
return

#if GtkApplicationCase()
::\succapprox::
send ^+u227f{Enter}
return

#if OtherCase()
::\succapprox::
send {U+227F}
return


;; Glyph: '≿' Descr: SUCCEEDS OR EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\succsim::
send ^x8{Enter}227f{Enter}
return

#if GtkApplicationCase()
::\succsim::
send ^+u227f{Enter}
return

#if OtherCase()
::\succsim::
send {U+227F}
return


;; Glyph: '⊀' Descr: DOES NOT PRECEDE

#if EmacsCase() && EmacsEnabled
::\nprec::
send ^x8{Enter}2280{Enter}
return

#if GtkApplicationCase()
::\nprec::
send ^+u2280{Enter}
return

#if OtherCase()
::\nprec::
send {U+2280}
return


;; Glyph: '⊁' Descr: DOES NOT SUCCEED

#if EmacsCase() && EmacsEnabled
::\nsucc::
send ^x8{Enter}2281{Enter}
return

#if GtkApplicationCase()
::\nsucc::
send ^+u2281{Enter}
return

#if OtherCase()
::\nsucc::
send {U+2281}
return


;; Glyph: '⊂' Descr: SUBSET OF

#if EmacsCase() && EmacsEnabled
::\subset::
send ^x8{Enter}2282{Enter}
return

#if GtkApplicationCase()
::\subset::
send ^+u2282{Enter}
return

#if OtherCase()
::\subset::
send {U+2282}
return


;; Glyph: '⊃' Descr: SUPERSET OF

#if EmacsCase() && EmacsEnabled
::\supset::
send ^x8{Enter}2283{Enter}
return

#if GtkApplicationCase()
::\supset::
send ^+u2283{Enter}
return

#if OtherCase()
::\supset::
send {U+2283}
return


;; Glyph: '⊄' Descr: NOT A SUBSET OF

#if EmacsCase() && EmacsEnabled
::\nsubset::
send ^x8{Enter}2284{Enter}
return

#if GtkApplicationCase()
::\nsubset::
send ^+u2284{Enter}
return

#if OtherCase()
::\nsubset::
send {U+2284}
return


;; Glyph: '⊅' Descr: NOT A SUPERSET OF

#if EmacsCase() && EmacsEnabled
::\nsupset::
send ^x8{Enter}2285{Enter}
return

#if GtkApplicationCase()
::\nsupset::
send ^+u2285{Enter}
return

#if OtherCase()
::\nsupset::
send {U+2285}
return


;; Glyph: '⊆' Descr: SUBSET OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\subseteq::
send ^x8{Enter}2286{Enter}
return

#if GtkApplicationCase()
::\subseteq::
send ^+u2286{Enter}
return

#if OtherCase()
::\subseteq::
send {U+2286}
return


;; Glyph: '⊆' Descr: SUBSET OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\subseteqq::
send ^x8{Enter}2286{Enter}
return

#if GtkApplicationCase()
::\subseteqq::
send ^+u2286{Enter}
return

#if OtherCase()
::\subseteqq::
send {U+2286}
return


;; Glyph: '⊇' Descr: SUPERSET OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\supseteq::
send ^x8{Enter}2287{Enter}
return

#if GtkApplicationCase()
::\supseteq::
send ^+u2287{Enter}
return

#if OtherCase()
::\supseteq::
send {U+2287}
return


;; Glyph: '⊇' Descr: SUPERSET OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\supseteqq::
send ^x8{Enter}2287{Enter}
return

#if GtkApplicationCase()
::\supseteqq::
send ^+u2287{Enter}
return

#if OtherCase()
::\supseteqq::
send {U+2287}
return


;; Glyph: '⊈' Descr: NEITHER A SUBSET OF NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nsubseteq::
send ^x8{Enter}2288{Enter}
return

#if GtkApplicationCase()
::\nsubseteq::
send ^+u2288{Enter}
return

#if OtherCase()
::\nsubseteq::
send {U+2288}
return


;; Glyph: '⊈' Descr: NEITHER A SUBSET OF NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nsubseteqq::
send ^x8{Enter}2288{Enter}
return

#if GtkApplicationCase()
::\nsubseteqq::
send ^+u2288{Enter}
return

#if OtherCase()
::\nsubseteqq::
send {U+2288}
return


;; Glyph: '⊉' Descr: NEITHER A SUPERSET OF NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nsupseteq::
send ^x8{Enter}2289{Enter}
return

#if GtkApplicationCase()
::\nsupseteq::
send ^+u2289{Enter}
return

#if OtherCase()
::\nsupseteq::
send {U+2289}
return


;; Glyph: '⊉' Descr: NEITHER A SUPERSET OF NOR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\nsupseteqq::
send ^x8{Enter}2289{Enter}
return

#if GtkApplicationCase()
::\nsupseteqq::
send ^+u2289{Enter}
return

#if OtherCase()
::\nsupseteqq::
send {U+2289}
return


;; Glyph: '⊊' Descr: SUBSET OF WITH NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\subsetneq::
send ^x8{Enter}228a{Enter}
return

#if GtkApplicationCase()
::\subsetneq::
send ^+u228a{Enter}
return

#if OtherCase()
::\subsetneq::
send {U+228A}
return


;; Glyph: '⊊' Descr: SUBSET OF WITH NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\subsetneqq::
send ^x8{Enter}228a{Enter}
return

#if GtkApplicationCase()
::\subsetneqq::
send ^+u228a{Enter}
return

#if OtherCase()
::\subsetneqq::
send {U+228A}
return


;; Glyph: '⊋' Descr: SUPERSET OF WITH NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\supsetneq::
send ^x8{Enter}228b{Enter}
return

#if GtkApplicationCase()
::\supsetneq::
send ^+u228b{Enter}
return

#if OtherCase()
::\supsetneq::
send {U+228B}
return


;; Glyph: '⊋' Descr: SUPERSET OF WITH NOT EQUAL TO

#if EmacsCase() && EmacsEnabled
::\supsetneqq::
send ^x8{Enter}228b{Enter}
return

#if GtkApplicationCase()
::\supsetneqq::
send ^+u228b{Enter}
return

#if OtherCase()
::\supsetneqq::
send {U+228B}
return


;; Glyph: '⊎' Descr: MULTISET UNION

#if EmacsCase() && EmacsEnabled
::\uplus::
send ^x8{Enter}228e{Enter}
return

#if GtkApplicationCase()
::\uplus::
send ^+u228e{Enter}
return

#if OtherCase()
::\uplus::
send {U+228E}
return


;; Glyph: '⊏' Descr: SQUARE IMAGE OF

#if EmacsCase() && EmacsEnabled
::\sqsubset::
send ^x8{Enter}228f{Enter}
return

#if GtkApplicationCase()
::\sqsubset::
send ^+u228f{Enter}
return

#if OtherCase()
::\sqsubset::
send {U+228F}
return


;; Glyph: '⊐' Descr: SQUARE ORIGINAL OF

#if EmacsCase() && EmacsEnabled
::\sqsupset::
send ^x8{Enter}2290{Enter}
return

#if GtkApplicationCase()
::\sqsupset::
send ^+u2290{Enter}
return

#if OtherCase()
::\sqsupset::
send {U+2290}
return


;; Glyph: '⊑' Descr: SQUARE IMAGE OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\sqsubseteq::
send ^x8{Enter}2291{Enter}
return

#if GtkApplicationCase()
::\sqsubseteq::
send ^+u2291{Enter}
return

#if OtherCase()
::\sqsubseteq::
send {U+2291}
return


;; Glyph: '⊒' Descr: SQUARE ORIGINAL OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\sqsupseteq::
send ^x8{Enter}2292{Enter}
return

#if GtkApplicationCase()
::\sqsupseteq::
send ^+u2292{Enter}
return

#if OtherCase()
::\sqsupseteq::
send {U+2292}
return


;; Glyph: '⊓' Descr: SQUARE CAP

#if EmacsCase() && EmacsEnabled
::\sqcap::
send ^x8{Enter}2293{Enter}
return

#if GtkApplicationCase()
::\sqcap::
send ^+u2293{Enter}
return

#if OtherCase()
::\sqcap::
send {U+2293}
return


;; Glyph: '⊔' Descr: SQUARE CUP

#if EmacsCase() && EmacsEnabled
::\sqcup::
send ^x8{Enter}2294{Enter}
return

#if GtkApplicationCase()
::\sqcup::
send ^+u2294{Enter}
return

#if OtherCase()
::\sqcup::
send {U+2294}
return


;; Glyph: '⊕' Descr: CIRCLED PLUS

#if EmacsCase() && EmacsEnabled
::\oplus::
send ^x8{Enter}2295{Enter}
return

#if GtkApplicationCase()
::\oplus::
send ^+u2295{Enter}
return

#if OtherCase()
::\oplus::
send {U+2295}
return


;; Glyph: '⊖' Descr: CIRCLED MINUS

#if EmacsCase() && EmacsEnabled
::\ominus::
send ^x8{Enter}2296{Enter}
return

#if GtkApplicationCase()
::\ominus::
send ^+u2296{Enter}
return

#if OtherCase()
::\ominus::
send {U+2296}
return


;; Glyph: '⊗' Descr: CIRCLED TIMES

#if EmacsCase() && EmacsEnabled
::\otimes::
send ^x8{Enter}2297{Enter}
return

#if GtkApplicationCase()
::\otimes::
send ^+u2297{Enter}
return

#if OtherCase()
::\otimes::
send {U+2297}
return


;; Glyph: '⊘' Descr: CIRCLED DIVISION SLASH

#if EmacsCase() && EmacsEnabled
::\oslash::
send ^x8{Enter}2298{Enter}
return

#if GtkApplicationCase()
::\oslash::
send ^+u2298{Enter}
return

#if OtherCase()
::\oslash::
send {U+2298}
return


;; Glyph: '⊙' Descr: CIRCLED DOT OPERATOR

#if EmacsCase() && EmacsEnabled
::\odot::
send ^x8{Enter}2299{Enter}
return

#if GtkApplicationCase()
::\odot::
send ^+u2299{Enter}
return

#if OtherCase()
::\odot::
send {U+2299}
return


;; Glyph: '⊚' Descr: CIRCLED RING OPERATOR

#if EmacsCase() && EmacsEnabled
::\circledcirc::
send ^x8{Enter}229a{Enter}
return

#if GtkApplicationCase()
::\circledcirc::
send ^+u229a{Enter}
return

#if OtherCase()
::\circledcirc::
send {U+229A}
return


;; Glyph: '⊛' Descr: CIRCLED ASTERISK OPERATOR

#if EmacsCase() && EmacsEnabled
::\circledast::
send ^x8{Enter}229b{Enter}
return

#if GtkApplicationCase()
::\circledast::
send ^+u229b{Enter}
return

#if OtherCase()
::\circledast::
send {U+229B}
return


;; Glyph: '⊝' Descr: CIRCLED DASH

#if EmacsCase() && EmacsEnabled
::\circleddash::
send ^x8{Enter}229d{Enter}
return

#if GtkApplicationCase()
::\circleddash::
send ^+u229d{Enter}
return

#if OtherCase()
::\circleddash::
send {U+229D}
return


;; Glyph: '⊞' Descr: SQUARED PLUS

#if EmacsCase() && EmacsEnabled
::\boxplus::
send ^x8{Enter}229e{Enter}
return

#if GtkApplicationCase()
::\boxplus::
send ^+u229e{Enter}
return

#if OtherCase()
::\boxplus::
send {U+229E}
return


;; Glyph: '⊟' Descr: SQUARED MINUS

#if EmacsCase() && EmacsEnabled
::\boxminus::
send ^x8{Enter}229f{Enter}
return

#if GtkApplicationCase()
::\boxminus::
send ^+u229f{Enter}
return

#if OtherCase()
::\boxminus::
send {U+229F}
return


;; Glyph: '⊠' Descr: SQUARED TIMES

#if EmacsCase() && EmacsEnabled
::\boxtimes::
send ^x8{Enter}22a0{Enter}
return

#if GtkApplicationCase()
::\boxtimes::
send ^+u22a0{Enter}
return

#if OtherCase()
::\boxtimes::
send {U+22A0}
return


;; Glyph: '⊡' Descr: SQUARED DOT OPERATOR

#if EmacsCase() && EmacsEnabled
::\dotsquare::
send ^x8{Enter}22a1{Enter}
return

#if GtkApplicationCase()
::\dotsquare::
send ^+u22a1{Enter}
return

#if OtherCase()
::\dotsquare::
send {U+22A1}
return


;; Glyph: '⊢' Descr: RIGHT TACK

#if EmacsCase() && EmacsEnabled
::\vdash::
send ^x8{Enter}22a2{Enter}
return

#if GtkApplicationCase()
::\vdash::
send ^+u22a2{Enter}
return

#if OtherCase()
::\vdash::
send {U+22A2}
return


;; Glyph: '⊣' Descr: LEFT TACK

#if EmacsCase() && EmacsEnabled
::\dashv::
send ^x8{Enter}22a3{Enter}
return

#if GtkApplicationCase()
::\dashv::
send ^+u22a3{Enter}
return

#if OtherCase()
::\dashv::
send {U+22A3}
return


;; Glyph: '⊤' Descr: DOWN TACK

#if EmacsCase() && EmacsEnabled
::\top::
send ^x8{Enter}22a4{Enter}
return

#if GtkApplicationCase()
::\top::
send ^+u22a4{Enter}
return

#if OtherCase()
::\top::
send {U+22A4}
return


;; Glyph: '⊥' Descr: UP TACK

#if EmacsCase() && EmacsEnabled
::\bot::
send ^x8{Enter}22a5{Enter}
return

#if GtkApplicationCase()
::\bot::
send ^+u22a5{Enter}
return

#if OtherCase()
::\bot::
send {U+22A5}
return


;; Glyph: '⊥' Descr: UP TACK

#if EmacsCase() && EmacsEnabled
::\perp::
send ^x8{Enter}22a5{Enter}
return

#if GtkApplicationCase()
::\perp::
send ^+u22a5{Enter}
return

#if OtherCase()
::\perp::
send {U+22A5}
return


;; Glyph: '⊧' Descr: MODELS

#if EmacsCase() && EmacsEnabled
::\models::
send ^x8{Enter}22a7{Enter}
return

#if GtkApplicationCase()
::\models::
send ^+u22a7{Enter}
return

#if OtherCase()
::\models::
send {U+22A7}
return


;; Glyph: '⊨' Descr: TRUE

#if EmacsCase() && EmacsEnabled
::\vDash::
send ^x8{Enter}22a8{Enter}
return

#if GtkApplicationCase()
::\vDash::
send ^+u22a8{Enter}
return

#if OtherCase()
::\vDash::
send {U+22A8}
return


;; Glyph: '⊩' Descr: FORCES

#if EmacsCase() && EmacsEnabled
::\Vdash::
send ^x8{Enter}22a9{Enter}
return

#if GtkApplicationCase()
::\Vdash::
send ^+u22a9{Enter}
return

#if OtherCase()
::\Vdash::
send {U+22A9}
return


;; Glyph: '⊪' Descr: TRIPLE VERTICAL BAR RIGHT TURNSTILE

#if EmacsCase() && EmacsEnabled
::\Vvdash::
send ^x8{Enter}22aa{Enter}
return

#if GtkApplicationCase()
::\Vvdash::
send ^+u22aa{Enter}
return

#if OtherCase()
::\Vvdash::
send {U+22AA}
return


;; Glyph: '⊬' Descr: DOES NOT PROVE

#if EmacsCase() && EmacsEnabled
::\nvdash::
send ^x8{Enter}22ac{Enter}
return

#if GtkApplicationCase()
::\nvdash::
send ^+u22ac{Enter}
return

#if OtherCase()
::\nvdash::
send {U+22AC}
return


;; Glyph: '⊭' Descr: NOT TRUE

#if EmacsCase() && EmacsEnabled
::\nvDash::
send ^x8{Enter}22ad{Enter}
return

#if GtkApplicationCase()
::\nvDash::
send ^+u22ad{Enter}
return

#if OtherCase()
::\nvDash::
send {U+22AD}
return


;; Glyph: '⊮' Descr: DOES NOT FORCE

#if EmacsCase() && EmacsEnabled
::\nVdash::
send ^x8{Enter}22ae{Enter}
return

#if GtkApplicationCase()
::\nVdash::
send ^+u22ae{Enter}
return

#if OtherCase()
::\nVdash::
send {U+22AE}
return


;; Glyph: '⊯' Descr: NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE

#if EmacsCase() && EmacsEnabled
::\nVDash::
send ^x8{Enter}22af{Enter}
return

#if GtkApplicationCase()
::\nVDash::
send ^+u22af{Enter}
return

#if OtherCase()
::\nVDash::
send {U+22AF}
return


;; Glyph: '⊲' Descr: NORMAL SUBGROUP OF

#if EmacsCase() && EmacsEnabled
::\vartriangleleft::
send ^x8{Enter}22b2{Enter}
return

#if GtkApplicationCase()
::\vartriangleleft::
send ^+u22b2{Enter}
return

#if OtherCase()
::\vartriangleleft::
send {U+22B2}
return


;; Glyph: '⊳' Descr: CONTAINS AS NORMAL SUBGROUP

#if EmacsCase() && EmacsEnabled
::\vartriangleright::
send ^x8{Enter}22b3{Enter}
return

#if GtkApplicationCase()
::\vartriangleright::
send ^+u22b3{Enter}
return

#if OtherCase()
::\vartriangleright::
send {U+22B3}
return


;; Glyph: '⊴' Descr: NORMAL SUBGROUP OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\trianglelefteq::
send ^x8{Enter}22b4{Enter}
return

#if GtkApplicationCase()
::\trianglelefteq::
send ^+u22b4{Enter}
return

#if OtherCase()
::\trianglelefteq::
send {U+22B4}
return


;; Glyph: '⊵' Descr: CONTAINS AS NORMAL SUBGROUP OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\trianglerighteq::
send ^x8{Enter}22b5{Enter}
return

#if GtkApplicationCase()
::\trianglerighteq::
send ^+u22b5{Enter}
return

#if OtherCase()
::\trianglerighteq::
send {U+22B5}
return


;; Glyph: '⊸' Descr: MULTIMAP

#if EmacsCase() && EmacsEnabled
::\multimap::
send ^x8{Enter}22b8{Enter}
return

#if GtkApplicationCase()
::\multimap::
send ^+u22b8{Enter}
return

#if OtherCase()
::\multimap::
send {U+22B8}
return


;; Glyph: '⊺' Descr: INTERCALATE

#if EmacsCase() && EmacsEnabled
::\intercal::
send ^x8{Enter}22ba{Enter}
return

#if GtkApplicationCase()
::\intercal::
send ^+u22ba{Enter}
return

#if OtherCase()
::\intercal::
send {U+22BA}
return


;; Glyph: '⊻' Descr: XOR

#if EmacsCase() && EmacsEnabled
::\veebar::
send ^x8{Enter}22bb{Enter}
return

#if GtkApplicationCase()
::\veebar::
send ^+u22bb{Enter}
return

#if OtherCase()
::\veebar::
send {U+22BB}
return


;; Glyph: '⊼' Descr: NAND

#if EmacsCase() && EmacsEnabled
::\barwedge::
send ^x8{Enter}22bc{Enter}
return

#if GtkApplicationCase()
::\barwedge::
send ^+u22bc{Enter}
return

#if OtherCase()
::\barwedge::
send {U+22BC}
return


;; Glyph: '⋀' Descr: N-ARY LOGICAL AND

#if EmacsCase() && EmacsEnabled
::\bigwedge::
send ^x8{Enter}22c0{Enter}
return

#if GtkApplicationCase()
::\bigwedge::
send ^+u22c0{Enter}
return

#if OtherCase()
::\bigwedge::
send {U+22C0}
return


;; Glyph: '⋁' Descr: N-ARY LOGICAL OR

#if EmacsCase() && EmacsEnabled
::\bigvee::
send ^x8{Enter}22c1{Enter}
return

#if GtkApplicationCase()
::\bigvee::
send ^+u22c1{Enter}
return

#if OtherCase()
::\bigvee::
send {U+22C1}
return


;; Glyph: '⋂' Descr: N-ARY INTERSECTION

#if EmacsCase() && EmacsEnabled
::\bigcap::
send ^x8{Enter}22c2{Enter}
return

#if GtkApplicationCase()
::\bigcap::
send ^+u22c2{Enter}
return

#if OtherCase()
::\bigcap::
send {U+22C2}
return


;; Glyph: '⋃' Descr: N-ARY UNION

#if EmacsCase() && EmacsEnabled
::\bigcup::
send ^x8{Enter}22c3{Enter}
return

#if GtkApplicationCase()
::\bigcup::
send ^+u22c3{Enter}
return

#if OtherCase()
::\bigcup::
send {U+22C3}
return


;; Glyph: '⋄' Descr: DIAMOND OPERATOR

#if EmacsCase() && EmacsEnabled
::\diamond::
send ^x8{Enter}22c4{Enter}
return

#if GtkApplicationCase()
::\diamond::
send ^+u22c4{Enter}
return

#if OtherCase()
::\diamond::
send {U+22C4}
return


;; Glyph: '⋆' Descr: STAR OPERATOR

#if EmacsCase() && EmacsEnabled
::\star::
send ^x8{Enter}22c6{Enter}
return

#if GtkApplicationCase()
::\star::
send ^+u22c6{Enter}
return

#if OtherCase()
::\star::
send {U+22C6}
return


;; Glyph: '⋇' Descr: DIVISION TIMES

#if EmacsCase() && EmacsEnabled
::\divideontimes::
send ^x8{Enter}22c7{Enter}
return

#if GtkApplicationCase()
::\divideontimes::
send ^+u22c7{Enter}
return

#if OtherCase()
::\divideontimes::
send {U+22C7}
return


;; Glyph: '⋈' Descr: BOWTIE

#if EmacsCase() && EmacsEnabled
::\Join::
send ^x8{Enter}22c8{Enter}
return

#if GtkApplicationCase()
::\Join::
send ^+u22c8{Enter}
return

#if OtherCase()
::\Join::
send {U+22C8}
return


;; Glyph: '⋈' Descr: BOWTIE

#if EmacsCase() && EmacsEnabled
::\bowtie::
send ^x8{Enter}22c8{Enter}
return

#if GtkApplicationCase()
::\bowtie::
send ^+u22c8{Enter}
return

#if OtherCase()
::\bowtie::
send {U+22C8}
return


;; Glyph: '⋉' Descr: LEFT NORMAL FACTOR SEMIDIRECT PRODUCT

#if EmacsCase() && EmacsEnabled
::\ltimes::
send ^x8{Enter}22c9{Enter}
return

#if GtkApplicationCase()
::\ltimes::
send ^+u22c9{Enter}
return

#if OtherCase()
::\ltimes::
send {U+22C9}
return


;; Glyph: '⋊' Descr: RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT

#if EmacsCase() && EmacsEnabled
::\rtimes::
send ^x8{Enter}22ca{Enter}
return

#if GtkApplicationCase()
::\rtimes::
send ^+u22ca{Enter}
return

#if OtherCase()
::\rtimes::
send {U+22CA}
return


;; Glyph: '⋋' Descr: LEFT SEMIDIRECT PRODUCT

#if EmacsCase() && EmacsEnabled
::\leftthreetimes::
send ^x8{Enter}22cb{Enter}
return

#if GtkApplicationCase()
::\leftthreetimes::
send ^+u22cb{Enter}
return

#if OtherCase()
::\leftthreetimes::
send {U+22CB}
return


;; Glyph: '⋌' Descr: RIGHT SEMIDIRECT PRODUCT

#if EmacsCase() && EmacsEnabled
::\rightthreetimes::
send ^x8{Enter}22cc{Enter}
return

#if GtkApplicationCase()
::\rightthreetimes::
send ^+u22cc{Enter}
return

#if OtherCase()
::\rightthreetimes::
send {U+22CC}
return


;; Glyph: '⋍' Descr: REVERSED TILDE EQUALS

#if EmacsCase() && EmacsEnabled
::\backsimeq::
send ^x8{Enter}22cd{Enter}
return

#if GtkApplicationCase()
::\backsimeq::
send ^+u22cd{Enter}
return

#if OtherCase()
::\backsimeq::
send {U+22CD}
return


;; Glyph: '⋎' Descr: CURLY LOGICAL OR

#if EmacsCase() && EmacsEnabled
::\curlyvee::
send ^x8{Enter}22ce{Enter}
return

#if GtkApplicationCase()
::\curlyvee::
send ^+u22ce{Enter}
return

#if OtherCase()
::\curlyvee::
send {U+22CE}
return


;; Glyph: '⋏' Descr: CURLY LOGICAL AND

#if EmacsCase() && EmacsEnabled
::\curlywedge::
send ^x8{Enter}22cf{Enter}
return

#if GtkApplicationCase()
::\curlywedge::
send ^+u22cf{Enter}
return

#if OtherCase()
::\curlywedge::
send {U+22CF}
return


;; Glyph: '⋐' Descr: DOUBLE SUBSET

#if EmacsCase() && EmacsEnabled
::\Subset::
send ^x8{Enter}22d0{Enter}
return

#if GtkApplicationCase()
::\Subset::
send ^+u22d0{Enter}
return

#if OtherCase()
::\Subset::
send {U+22D0}
return


;; Glyph: '⋑' Descr: DOUBLE SUPERSET

#if EmacsCase() && EmacsEnabled
::\Supset::
send ^x8{Enter}22d1{Enter}
return

#if GtkApplicationCase()
::\Supset::
send ^+u22d1{Enter}
return

#if OtherCase()
::\Supset::
send {U+22D1}
return


;; Glyph: '⋒' Descr: DOUBLE INTERSECTION

#if EmacsCase() && EmacsEnabled
::\Cap::
send ^x8{Enter}22d2{Enter}
return

#if GtkApplicationCase()
::\Cap::
send ^+u22d2{Enter}
return

#if OtherCase()
::\Cap::
send {U+22D2}
return


;; Glyph: '⋓' Descr: DOUBLE UNION

#if EmacsCase() && EmacsEnabled
::\Cup::
send ^x8{Enter}22d3{Enter}
return

#if GtkApplicationCase()
::\Cup::
send ^+u22d3{Enter}
return

#if OtherCase()
::\Cup::
send {U+22D3}
return


;; Glyph: '⋔' Descr: PITCHFORK

#if EmacsCase() && EmacsEnabled
::\pitchfork::
send ^x8{Enter}22d4{Enter}
return

#if GtkApplicationCase()
::\pitchfork::
send ^+u22d4{Enter}
return

#if OtherCase()
::\pitchfork::
send {U+22D4}
return


;; Glyph: '⋖' Descr: LESS-THAN WITH DOT

#if EmacsCase() && EmacsEnabled
::\lessdot::
send ^x8{Enter}22d6{Enter}
return

#if GtkApplicationCase()
::\lessdot::
send ^+u22d6{Enter}
return

#if OtherCase()
::\lessdot::
send {U+22D6}
return


;; Glyph: '⋗' Descr: GREATER-THAN WITH DOT

#if EmacsCase() && EmacsEnabled
::\gtrdot::
send ^x8{Enter}22d7{Enter}
return

#if GtkApplicationCase()
::\gtrdot::
send ^+u22d7{Enter}
return

#if OtherCase()
::\gtrdot::
send {U+22D7}
return


;; Glyph: '⋘' Descr: VERY MUCH LESS-THAN

#if EmacsCase() && EmacsEnabled
::\Ll::
send ^x8{Enter}22d8{Enter}
return

#if GtkApplicationCase()
::\Ll::
send ^+u22d8{Enter}
return

#if OtherCase()
::\Ll::
send {U+22D8}
return


;; Glyph: '⋙' Descr: VERY MUCH GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\ggg::
send ^x8{Enter}22d9{Enter}
return

#if GtkApplicationCase()
::\ggg::
send ^+u22d9{Enter}
return

#if OtherCase()
::\ggg::
send {U+22D9}
return


;; Glyph: '⋚' Descr: LESS-THAN EQUAL TO OR GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\lesseqgtr::
send ^x8{Enter}22da{Enter}
return

#if GtkApplicationCase()
::\lesseqgtr::
send ^+u22da{Enter}
return

#if OtherCase()
::\lesseqgtr::
send {U+22DA}
return


;; Glyph: '⋚' Descr: LESS-THAN EQUAL TO OR GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\lesseqqgtr::
send ^x8{Enter}22da{Enter}
return

#if GtkApplicationCase()
::\lesseqqgtr::
send ^+u22da{Enter}
return

#if OtherCase()
::\lesseqqgtr::
send {U+22DA}
return


;; Glyph: '⋛' Descr: GREATER-THAN EQUAL TO OR LESS-THAN

#if EmacsCase() && EmacsEnabled
::\gtreqless::
send ^x8{Enter}22db{Enter}
return

#if GtkApplicationCase()
::\gtreqless::
send ^+u22db{Enter}
return

#if OtherCase()
::\gtreqless::
send {U+22DB}
return


;; Glyph: '⋛' Descr: GREATER-THAN EQUAL TO OR LESS-THAN

#if EmacsCase() && EmacsEnabled
::\gtreqqless::
send ^x8{Enter}22db{Enter}
return

#if GtkApplicationCase()
::\gtreqqless::
send ^+u22db{Enter}
return

#if OtherCase()
::\gtreqqless::
send {U+22DB}
return


;; Glyph: '⋜' Descr: EQUAL TO OR LESS-THAN

#if EmacsCase() && EmacsEnabled
::\eqslantless::
send ^x8{Enter}22dc{Enter}
return

#if GtkApplicationCase()
::\eqslantless::
send ^+u22dc{Enter}
return

#if OtherCase()
::\eqslantless::
send {U+22DC}
return


;; Glyph: '⋝' Descr: EQUAL TO OR GREATER-THAN

#if EmacsCase() && EmacsEnabled
::\eqslantgtr::
send ^x8{Enter}22dd{Enter}
return

#if GtkApplicationCase()
::\eqslantgtr::
send ^+u22dd{Enter}
return

#if OtherCase()
::\eqslantgtr::
send {U+22DD}
return


;; Glyph: '⋞' Descr: EQUAL TO OR PRECEDES

#if EmacsCase() && EmacsEnabled
::\curlyeqprec::
send ^x8{Enter}22de{Enter}
return

#if GtkApplicationCase()
::\curlyeqprec::
send ^+u22de{Enter}
return

#if OtherCase()
::\curlyeqprec::
send {U+22DE}
return


;; Glyph: '⋟' Descr: EQUAL TO OR SUCCEEDS

#if EmacsCase() && EmacsEnabled
::\curlyeqsucc::
send ^x8{Enter}22df{Enter}
return

#if GtkApplicationCase()
::\curlyeqsucc::
send ^+u22df{Enter}
return

#if OtherCase()
::\curlyeqsucc::
send {U+22DF}
return


;; Glyph: '⋠' Descr: DOES NOT PRECEDE OR EQUAL

#if EmacsCase() && EmacsEnabled
::\npreceq::
send ^x8{Enter}22e0{Enter}
return

#if GtkApplicationCase()
::\npreceq::
send ^+u22e0{Enter}
return

#if OtherCase()
::\npreceq::
send {U+22E0}
return


;; Glyph: '⋡' Descr: DOES NOT SUCCEED OR EQUAL

#if EmacsCase() && EmacsEnabled
::\nsucceq::
send ^x8{Enter}22e1{Enter}
return

#if GtkApplicationCase()
::\nsucceq::
send ^+u22e1{Enter}
return

#if OtherCase()
::\nsucceq::
send {U+22E1}
return


;; Glyph: '⋦' Descr: LESS-THAN BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\lnapprox::
send ^x8{Enter}22e6{Enter}
return

#if GtkApplicationCase()
::\lnapprox::
send ^+u22e6{Enter}
return

#if OtherCase()
::\lnapprox::
send {U+22E6}
return


;; Glyph: '⋦' Descr: LESS-THAN BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\lnsim::
send ^x8{Enter}22e6{Enter}
return

#if GtkApplicationCase()
::\lnsim::
send ^+u22e6{Enter}
return

#if OtherCase()
::\lnsim::
send {U+22E6}
return


;; Glyph: '⋧' Descr: GREATER-THAN BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\gnapprox::
send ^x8{Enter}22e7{Enter}
return

#if GtkApplicationCase()
::\gnapprox::
send ^+u22e7{Enter}
return

#if OtherCase()
::\gnapprox::
send {U+22E7}
return


;; Glyph: '⋧' Descr: GREATER-THAN BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\gnsim::
send ^x8{Enter}22e7{Enter}
return

#if GtkApplicationCase()
::\gnsim::
send ^+u22e7{Enter}
return

#if OtherCase()
::\gnsim::
send {U+22E7}
return


;; Glyph: '⋨' Descr: PRECEDES BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\precnapprox::
send ^x8{Enter}22e8{Enter}
return

#if GtkApplicationCase()
::\precnapprox::
send ^+u22e8{Enter}
return

#if OtherCase()
::\precnapprox::
send {U+22E8}
return


;; Glyph: '⋨' Descr: PRECEDES BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\precnsim::
send ^x8{Enter}22e8{Enter}
return

#if GtkApplicationCase()
::\precnsim::
send ^+u22e8{Enter}
return

#if OtherCase()
::\precnsim::
send {U+22E8}
return


;; Glyph: '⋩' Descr: SUCCEEDS BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\succnapprox::
send ^x8{Enter}22e9{Enter}
return

#if GtkApplicationCase()
::\succnapprox::
send ^+u22e9{Enter}
return

#if OtherCase()
::\succnapprox::
send {U+22E9}
return


;; Glyph: '⋩' Descr: SUCCEEDS BUT NOT EQUIVALENT TO

#if EmacsCase() && EmacsEnabled
::\succnsim::
send ^x8{Enter}22e9{Enter}
return

#if GtkApplicationCase()
::\succnsim::
send ^+u22e9{Enter}
return

#if OtherCase()
::\succnsim::
send {U+22E9}
return


;; Glyph: '⋪' Descr: NOT NORMAL SUBGROUP OF

#if EmacsCase() && EmacsEnabled
::\ntriangleleft::
send ^x8{Enter}22ea{Enter}
return

#if GtkApplicationCase()
::\ntriangleleft::
send ^+u22ea{Enter}
return

#if OtherCase()
::\ntriangleleft::
send {U+22EA}
return


;; Glyph: '⋫' Descr: DOES NOT CONTAIN AS NORMAL SUBGROUP

#if EmacsCase() && EmacsEnabled
::\ntriangleright::
send ^x8{Enter}22eb{Enter}
return

#if GtkApplicationCase()
::\ntriangleright::
send ^+u22eb{Enter}
return

#if OtherCase()
::\ntriangleright::
send {U+22EB}
return


;; Glyph: '⋬' Descr: NOT NORMAL SUBGROUP OF OR EQUAL TO

#if EmacsCase() && EmacsEnabled
::\ntrianglelefteq::
send ^x8{Enter}22ec{Enter}
return

#if GtkApplicationCase()
::\ntrianglelefteq::
send ^+u22ec{Enter}
return

#if OtherCase()
::\ntrianglelefteq::
send {U+22EC}
return


;; Glyph: '⋭' Descr: DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL

#if EmacsCase() && EmacsEnabled
::\ntrianglerighteq::
send ^x8{Enter}22ed{Enter}
return

#if GtkApplicationCase()
::\ntrianglerighteq::
send ^+u22ed{Enter}
return

#if OtherCase()
::\ntrianglerighteq::
send {U+22ED}
return


;; Glyph: '⋮' Descr: VERTICAL ELLIPSIS

#if EmacsCase() && EmacsEnabled
::\vdots::
send ^x8{Enter}22ee{Enter}
return

#if GtkApplicationCase()
::\vdots::
send ^+u22ee{Enter}
return

#if OtherCase()
::\vdots::
send {U+22EE}
return


;; Glyph: '⋯' Descr: MIDLINE HORIZONTAL ELLIPSIS

#if EmacsCase() && EmacsEnabled
::\cdots::
send ^x8{Enter}22ef{Enter}
return

#if GtkApplicationCase()
::\cdots::
send ^+u22ef{Enter}
return

#if OtherCase()
::\cdots::
send {U+22EF}
return


;; Glyph: '⋱' Descr: DOWN RIGHT DIAGONAL ELLIPSIS

#if EmacsCase() && EmacsEnabled
::\ddots::
send ^x8{Enter}22f1{Enter}
return

#if GtkApplicationCase()
::\ddots::
send ^+u22f1{Enter}
return

#if OtherCase()
::\ddots::
send {U+22F1}
return


;; Glyph: '⌀' Descr: DIAMETER SIGN

#if EmacsCase() && EmacsEnabled
::\diameter::
send ^x8{Enter}2300{Enter}
return

#if GtkApplicationCase()
::\diameter::
send ^+u2300{Enter}
return

#if OtherCase()
::\diameter::
send {U+2300}
return


;; Glyph: '⌈' Descr: LEFT CEILING

#if EmacsCase() && EmacsEnabled
::\lceil::
send ^x8{Enter}2308{Enter}
return

#if GtkApplicationCase()
::\lceil::
send ^+u2308{Enter}
return

#if OtherCase()
::\lceil::
send {U+2308}
return


;; Glyph: '⌉' Descr: RIGHT CEILING

#if EmacsCase() && EmacsEnabled
::\rceil::
send ^x8{Enter}2309{Enter}
return

#if GtkApplicationCase()
::\rceil::
send ^+u2309{Enter}
return

#if OtherCase()
::\rceil::
send {U+2309}
return


;; Glyph: '⌊' Descr: LEFT FLOOR

#if EmacsCase() && EmacsEnabled
::\lfloor::
send ^x8{Enter}230a{Enter}
return

#if GtkApplicationCase()
::\lfloor::
send ^+u230a{Enter}
return

#if OtherCase()
::\lfloor::
send {U+230A}
return


;; Glyph: '⌋' Descr: RIGHT FLOOR

#if EmacsCase() && EmacsEnabled
::\rfloor::
send ^x8{Enter}230b{Enter}
return

#if GtkApplicationCase()
::\rfloor::
send ^+u230b{Enter}
return

#if OtherCase()
::\rfloor::
send {U+230B}
return


;; Glyph: '⌜' Descr: TOP LEFT CORNER

#if EmacsCase() && EmacsEnabled
::\ulcorner::
send ^x8{Enter}231c{Enter}
return

#if GtkApplicationCase()
::\ulcorner::
send ^+u231c{Enter}
return

#if OtherCase()
::\ulcorner::
send {U+231C}
return


;; Glyph: '⌝' Descr: TOP RIGHT CORNER

#if EmacsCase() && EmacsEnabled
::\urcorner::
send ^x8{Enter}231d{Enter}
return

#if GtkApplicationCase()
::\urcorner::
send ^+u231d{Enter}
return

#if OtherCase()
::\urcorner::
send {U+231D}
return


;; Glyph: '⌞' Descr: BOTTOM LEFT CORNER

#if EmacsCase() && EmacsEnabled
::\llcorner::
send ^x8{Enter}231e{Enter}
return

#if GtkApplicationCase()
::\llcorner::
send ^+u231e{Enter}
return

#if OtherCase()
::\llcorner::
send {U+231E}
return


;; Glyph: '⌟' Descr: BOTTOM RIGHT CORNER

#if EmacsCase() && EmacsEnabled
::\lrcorner::
send ^x8{Enter}231f{Enter}
return

#if GtkApplicationCase()
::\lrcorner::
send ^+u231f{Enter}
return

#if OtherCase()
::\lrcorner::
send {U+231F}
return


;; Glyph: '⌢' Descr: FROWN

#if EmacsCase() && EmacsEnabled
::\frown::
send ^x8{Enter}2322{Enter}
return

#if GtkApplicationCase()
::\frown::
send ^+u2322{Enter}
return

#if OtherCase()
::\frown::
send {U+2322}
return


;; Glyph: '⌣' Descr: SMILE

#if EmacsCase() && EmacsEnabled
::\smallsmile::
send ^x8{Enter}2323{Enter}
return

#if GtkApplicationCase()
::\smallsmile::
send ^+u2323{Enter}
return

#if OtherCase()
::\smallsmile::
send {U+2323}
return


;; Glyph: '⌣' Descr: SMILE

#if EmacsCase() && EmacsEnabled
::\smile::
send ^x8{Enter}2323{Enter}
return

#if GtkApplicationCase()
::\smile::
send ^+u2323{Enter}
return

#if OtherCase()
::\smile::
send {U+2323}
return


;; Glyph: 'Ⓢ' Descr: CIRCLED LATIN CAPITAL LETTER S

#if EmacsCase() && EmacsEnabled
::\circledS::
send ^x8{Enter}24c8{Enter}
return

#if GtkApplicationCase()
::\circledS::
send ^+u24c8{Enter}
return

#if OtherCase()
::\circledS::
send {U+24C8}
return


;; Glyph: '□' Descr: WHITE SQUARE

#if EmacsCase() && EmacsEnabled
::\Box::
send ^x8{Enter}25a1{Enter}
return

#if GtkApplicationCase()
::\Box::
send ^+u25a1{Enter}
return

#if OtherCase()
::\Box::
send {U+25A1}
return


;; Glyph: '□' Descr: WHITE SQUARE

#if EmacsCase() && EmacsEnabled
::\square::
send ^x8{Enter}25a1{Enter}
return

#if GtkApplicationCase()
::\square::
send ^+u25a1{Enter}
return

#if OtherCase()
::\square::
send {U+25A1}
return


;; Glyph: '▪' Descr: BLACK SMALL SQUARE

#if EmacsCase() && EmacsEnabled
::\blacksquare::
send ^x8{Enter}25aa{Enter}
return

#if GtkApplicationCase()
::\blacksquare::
send ^+u25aa{Enter}
return

#if OtherCase()
::\blacksquare::
send {U+25AA}
return


;; Glyph: '△' Descr: WHITE UP-POINTING TRIANGLE

#if EmacsCase() && EmacsEnabled
::\bigtriangleup::
send ^x8{Enter}25b3{Enter}
return

#if GtkApplicationCase()
::\bigtriangleup::
send ^+u25b3{Enter}
return

#if OtherCase()
::\bigtriangleup::
send {U+25B3}
return


;; Glyph: '▴' Descr: BLACK UP-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\blacktriangle::
send ^x8{Enter}25b4{Enter}
return

#if GtkApplicationCase()
::\blacktriangle::
send ^+u25b4{Enter}
return

#if OtherCase()
::\blacktriangle::
send {U+25B4}
return


;; Glyph: '▵' Descr: WHITE UP-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\triangle::
send ^x8{Enter}25b5{Enter}
return

#if GtkApplicationCase()
::\triangle::
send ^+u25b5{Enter}
return

#if OtherCase()
::\triangle::
send {U+25B5}
return


;; Glyph: '▷' Descr: WHITE RIGHT-POINTING TRIANGLE

#if EmacsCase() && EmacsEnabled
::\rhd::
send ^x8{Enter}25b7{Enter}
return

#if GtkApplicationCase()
::\rhd::
send ^+u25b7{Enter}
return

#if OtherCase()
::\rhd::
send {U+25B7}
return


;; Glyph: '▸' Descr: BLACK RIGHT-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\blacktriangleright::
send ^x8{Enter}25b8{Enter}
return

#if GtkApplicationCase()
::\blacktriangleright::
send ^+u25b8{Enter}
return

#if OtherCase()
::\blacktriangleright::
send {U+25B8}
return


;; Glyph: '▹' Descr: WHITE RIGHT-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\triangleright::
send ^x8{Enter}25b9{Enter}
return

#if GtkApplicationCase()
::\triangleright::
send ^+u25b9{Enter}
return

#if OtherCase()
::\triangleright::
send {U+25B9}
return


;; Glyph: '▽' Descr: WHITE DOWN-POINTING TRIANGLE

#if EmacsCase() && EmacsEnabled
::\bigtriangledown::
send ^x8{Enter}25bd{Enter}
return

#if GtkApplicationCase()
::\bigtriangledown::
send ^+u25bd{Enter}
return

#if OtherCase()
::\bigtriangledown::
send {U+25BD}
return


;; Glyph: '▾' Descr: BLACK DOWN-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\blacktriangledown::
send ^x8{Enter}25be{Enter}
return

#if GtkApplicationCase()
::\blacktriangledown::
send ^+u25be{Enter}
return

#if OtherCase()
::\blacktriangledown::
send {U+25BE}
return


;; Glyph: '▿' Descr: WHITE DOWN-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\triangledown::
send ^x8{Enter}25bf{Enter}
return

#if GtkApplicationCase()
::\triangledown::
send ^+u25bf{Enter}
return

#if OtherCase()
::\triangledown::
send {U+25BF}
return


;; Glyph: '◁' Descr: WHITE LEFT-POINTING TRIANGLE

#if EmacsCase() && EmacsEnabled
::\lhd::
send ^x8{Enter}25c1{Enter}
return

#if GtkApplicationCase()
::\lhd::
send ^+u25c1{Enter}
return

#if OtherCase()
::\lhd::
send {U+25C1}
return


;; Glyph: '◂' Descr: BLACK LEFT-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\blacktriangleleft::
send ^x8{Enter}25c2{Enter}
return

#if GtkApplicationCase()
::\blacktriangleleft::
send ^+u25c2{Enter}
return

#if OtherCase()
::\blacktriangleleft::
send {U+25C2}
return


;; Glyph: '◃' Descr: WHITE LEFT-POINTING SMALL TRIANGLE

#if EmacsCase() && EmacsEnabled
::\triangleleft::
send ^x8{Enter}25c3{Enter}
return

#if GtkApplicationCase()
::\triangleleft::
send ^+u25c3{Enter}
return

#if OtherCase()
::\triangleleft::
send {U+25C3}
return


;; Glyph: '◇' Descr: WHITE DIAMOND

#if EmacsCase() && EmacsEnabled
::\Diamond::
send ^x8{Enter}25c7{Enter}
return

#if GtkApplicationCase()
::\Diamond::
send ^+u25c7{Enter}
return

#if OtherCase()
::\Diamond::
send {U+25C7}
return


;; Glyph: '◦' Descr: WHITE BULLET

#if EmacsCase() && EmacsEnabled
::\textopenbullet::
send ^x8{Enter}25e6{Enter}
return

#if GtkApplicationCase()
::\textopenbullet::
send ^+u25e6{Enter}
return

#if OtherCase()
::\textopenbullet::
send {U+25E6}
return


;; Glyph: '◯' Descr: LARGE CIRCLE

#if EmacsCase() && EmacsEnabled
::\bigcirc::
send ^x8{Enter}25ef{Enter}
return

#if GtkApplicationCase()
::\bigcirc::
send ^+u25ef{Enter}
return

#if OtherCase()
::\bigcirc::
send {U+25EF}
return


;; Glyph: '★' Descr: BLACK STAR

#if EmacsCase() && EmacsEnabled
::\bigstar::
send ^x8{Enter}2605{Enter}
return

#if GtkApplicationCase()
::\bigstar::
send ^+u2605{Enter}
return

#if OtherCase()
::\bigstar::
send {U+2605}
return


;; Glyph: '☡' Descr: CAUTION SIGN

#if EmacsCase() && EmacsEnabled
::\caution::
send ^x8{Enter}2621{Enter}
return

#if GtkApplicationCase()
::\caution::
send ^+u2621{Enter}
return

#if OtherCase()
::\caution::
send {U+2621}
return


;; Glyph: '☢' Descr: RADIOACTIVE SIGN

#if EmacsCase() && EmacsEnabled
::\radioactive::
send ^x8{Enter}2622{Enter}
return

#if GtkApplicationCase()
::\radioactive::
send ^+u2622{Enter}
return

#if OtherCase()
::\radioactive::
send {U+2622}
return


;; Glyph: '☣' Descr: BIOHAZARD SIGN

#if EmacsCase() && EmacsEnabled
::\biohazard::
send ^x8{Enter}2623{Enter}
return

#if GtkApplicationCase()
::\biohazard::
send ^+u2623{Enter}
return

#if OtherCase()
::\biohazard::
send {U+2623}
return


;; Glyph: '☹' Descr: WHITE FROWNING FACE

#if EmacsCase() && EmacsEnabled
::\Frowny::
send ^x8{Enter}2639{Enter}
return

#if GtkApplicationCase()
::\Frowny::
send ^+u2639{Enter}
return

#if OtherCase()
::\Frowny::
send {U+2639}
return


;; Glyph: '☺' Descr: WHITE SMILING FACE

#if EmacsCase() && EmacsEnabled
::\Smiley::
send ^x8{Enter}263a{Enter}
return

#if GtkApplicationCase()
::\Smiley::
send ^+u263a{Enter}
return

#if OtherCase()
::\Smiley::
send {U+263A}
return


;; Glyph: '☻' Descr: BLACK SMILING FACE

#if EmacsCase() && EmacsEnabled
::\blacksmiley::
send ^x8{Enter}263b{Enter}
return

#if GtkApplicationCase()
::\blacksmiley::
send ^+u263b{Enter}
return

#if OtherCase()
::\blacksmiley::
send {U+263B}
return


;; Glyph: '♀' Descr: FEMALE SIGN

#if EmacsCase() && EmacsEnabled
::\female::
send ^x8{Enter}2640{Enter}
return

#if GtkApplicationCase()
::\female::
send ^+u2640{Enter}
return

#if OtherCase()
::\female::
send {U+2640}
return


;; Glyph: '♂' Descr: MALE SIGN

#if EmacsCase() && EmacsEnabled
::\male::
send ^x8{Enter}2642{Enter}
return

#if GtkApplicationCase()
::\male::
send ^+u2642{Enter}
return

#if OtherCase()
::\male::
send {U+2642}
return


;; Glyph: '♠' Descr: BLACK SPADE SUIT

#if EmacsCase() && EmacsEnabled
::\spadesuit::
send ^x8{Enter}2660{Enter}
return

#if GtkApplicationCase()
::\spadesuit::
send ^+u2660{Enter}
return

#if OtherCase()
::\spadesuit::
send {U+2660}
return


;; Glyph: '♢' Descr: WHITE DIAMOND SUIT

#if EmacsCase() && EmacsEnabled
::\diamondsuit::
send ^x8{Enter}2662{Enter}
return

#if GtkApplicationCase()
::\diamondsuit::
send ^+u2662{Enter}
return

#if OtherCase()
::\diamondsuit::
send {U+2662}
return


;; Glyph: '♣' Descr: BLACK CLUB SUIT

#if EmacsCase() && EmacsEnabled
::\clubsuit::
send ^x8{Enter}2663{Enter}
return

#if GtkApplicationCase()
::\clubsuit::
send ^+u2663{Enter}
return

#if OtherCase()
::\clubsuit::
send {U+2663}
return


;; Glyph: '♥' Descr: BLACK HEART SUIT

#if EmacsCase() && EmacsEnabled
::\heartsuit::
send ^x8{Enter}2665{Enter}
return

#if GtkApplicationCase()
::\heartsuit::
send ^+u2665{Enter}
return

#if OtherCase()
::\heartsuit::
send {U+2665}
return


;; Glyph: '♪' Descr: EIGHTH NOTE

#if EmacsCase() && EmacsEnabled
::\textmusicalnote::
send ^x8{Enter}266a{Enter}
return

#if GtkApplicationCase()
::\textmusicalnote::
send ^+u266a{Enter}
return

#if OtherCase()
::\textmusicalnote::
send {U+266A}
return


;; Glyph: '♭' Descr: MUSIC FLAT SIGN

#if EmacsCase() && EmacsEnabled
::\flat::
send ^x8{Enter}266d{Enter}
return

#if GtkApplicationCase()
::\flat::
send ^+u266d{Enter}
return

#if OtherCase()
::\flat::
send {U+266D}
return


;; Glyph: '♮' Descr: MUSIC NATURAL SIGN

#if EmacsCase() && EmacsEnabled
::\natural::
send ^x8{Enter}266e{Enter}
return

#if GtkApplicationCase()
::\natural::
send ^+u266e{Enter}
return

#if OtherCase()
::\natural::
send {U+266E}
return


;; Glyph: '♯' Descr: MUSIC SHARP SIGN

#if EmacsCase() && EmacsEnabled
::\sharp::
send ^x8{Enter}266f{Enter}
return

#if GtkApplicationCase()
::\sharp::
send ^+u266f{Enter}
return

#if OtherCase()
::\sharp::
send {U+266F}
return


;; Glyph: '⚠' Descr: WARNING SIGN

#if EmacsCase() && EmacsEnabled
::\warning::
send ^x8{Enter}26a0{Enter}
return

#if GtkApplicationCase()
::\warning::
send ^+u26a0{Enter}
return

#if OtherCase()
::\warning::
send {U+26A0}
return


;; Glyph: '✉' Descr: ENVELOPE

#if EmacsCase() && EmacsEnabled
::\Letter::
send ^x8{Enter}2709{Enter}
return

#if GtkApplicationCase()
::\Letter::
send ^+u2709{Enter}
return

#if OtherCase()
::\Letter::
send {U+2709}
return


;; Glyph: '✓' Descr: CHECK MARK

#if EmacsCase() && EmacsEnabled
::\checkmark::
send ^x8{Enter}2713{Enter}
return

#if GtkApplicationCase()
::\checkmark::
send ^+u2713{Enter}
return

#if OtherCase()
::\checkmark::
send {U+2713}
return


;; Glyph: '✝' Descr: LATIN CROSS

#if EmacsCase() && EmacsEnabled
::\textdied::
send ^x8{Enter}271d{Enter}
return

#if GtkApplicationCase()
::\textdied::
send ^+u271d{Enter}
return

#if OtherCase()
::\textdied::
send {U+271D}
return


;; Glyph: '✠' Descr: MALTESE CROSS

#if EmacsCase() && EmacsEnabled
::\maltese::
send ^x8{Enter}2720{Enter}
return

#if GtkApplicationCase()
::\maltese::
send ^+u2720{Enter}
return

#if OtherCase()
::\maltese::
send {U+2720}
return


;; Glyph: '✦' Descr: BLACK FOUR POINTED STAR

#if EmacsCase() && EmacsEnabled
::\blacklozenge::
send ^x8{Enter}2726{Enter}
return

#if GtkApplicationCase()
::\blacklozenge::
send ^+u2726{Enter}
return

#if OtherCase()
::\blacklozenge::
send {U+2726}
return


;; Glyph: '✧' Descr: WHITE FOUR POINTED STAR

#if EmacsCase() && EmacsEnabled
::\lozenge::
send ^x8{Enter}2727{Enter}
return

#if GtkApplicationCase()
::\lozenge::
send ^+u2727{Enter}
return

#if OtherCase()
::\lozenge::
send {U+2727}
return


;; Glyph: '⟨' Descr: MATHEMATICAL LEFT ANGLE BRACKET

#if EmacsCase() && EmacsEnabled
::\langle::
send ^x8{Enter}27e8{Enter}
return

#if GtkApplicationCase()
::\langle::
send ^+u27e8{Enter}
return

#if OtherCase()
::\langle::
send {U+27E8}
return


;; Glyph: '⟩' Descr: MATHEMATICAL RIGHT ANGLE BRACKET

#if EmacsCase() && EmacsEnabled
::\rangle::
send ^x8{Enter}27e9{Enter}
return

#if GtkApplicationCase()
::\rangle::
send ^+u27e9{Enter}
return

#if OtherCase()
::\rangle::
send {U+27E9}
return


;; Glyph: '⯑' Descr: UNCERTAINTY SIGN

#if EmacsCase() && EmacsEnabled
::\uncertainty::
send ^x8{Enter}2bd1{Enter}
return

#if GtkApplicationCase()
::\uncertainty::
send ^+u2bd1{Enter}
return

#if OtherCase()
::\uncertainty::
send {U+2BD1}
return


;; Glyph: 'ⱼ' Descr: LATIN SUBSCRIPT SMALL LETTER J

#if EmacsCase() && EmacsEnabled
::_j::
send ^x8{Enter}2c7c{Enter}
return

#if GtkApplicationCase()
::_j::
send ^+u2c7c{Enter}
return

#if OtherCase()
::_j::
send {U+2C7C}
return


;; Glyph: 'ⱽ' Descr: MODIFIER LETTER CAPITAL V

#if EmacsCase() && EmacsEnabled
::^V::
send ^x8{Enter}2c7d{Enter}
return

#if GtkApplicationCase()
::^V::
send ^+u2c7d{Enter}
return

#if OtherCase()
::^V::
send {U+2C7D}
return


;; Glyph: '《' Descr: LEFT DOUBLE ANGLE BRACKET

#if EmacsCase() && EmacsEnabled
::\ldata::
send ^x8{Enter}300a{Enter}
return

#if GtkApplicationCase()
::\ldata::
send ^+u300a{Enter}
return

#if OtherCase()
::\ldata::
send {U+300A}
return


;; Glyph: '》' Descr: RIGHT DOUBLE ANGLE BRACKET

#if EmacsCase() && EmacsEnabled
::\rdata::
send ^x8{Enter}300b{Enter}
return

#if GtkApplicationCase()
::\rdata::
send ^+u300b{Enter}
return

#if OtherCase()
::\rdata::
send {U+300B}
return


;; Glyph: '〚' Descr: LEFT WHITE SQUARE BRACKET

#if EmacsCase() && EmacsEnabled
::\llbracket::
send ^x8{Enter}301a{Enter}
return

#if GtkApplicationCase()
::\llbracket::
send ^+u301a{Enter}
return

#if OtherCase()
::\llbracket::
send {U+301A}
return


;; Glyph: '〛' Descr: RIGHT WHITE SQUARE BRACKET

#if EmacsCase() && EmacsEnabled
::\rrbracket::
send ^x8{Enter}301b{Enter}
return

#if GtkApplicationCase()
::\rrbracket::
send ^+u301b{Enter}
return

#if OtherCase()
::\rrbracket::
send {U+301B}
return


;; Glyph: '㉐' Descr: PARTNERSHIP SIGN

#if EmacsCase() && EmacsEnabled
::\partnership::
send ^x8{Enter}3250{Enter}
return

#if GtkApplicationCase()
::\partnership::
send ^+u3250{Enter}
return

#if OtherCase()
::\partnership::
send {U+3250}
return


;; Glyph: 'ꟸ' Descr: MODIFIER LETTER CAPITAL H WITH STROKE

#if EmacsCase() && EmacsEnabled
::^\H With Stroke::
send ^x8{Enter}a7f8{Enter}
return

#if GtkApplicationCase()
::^\H With Stroke::
send ^+ua7f8{Enter}
return

#if OtherCase()
::^\H With Stroke::
send {U+A7F8}
return


;; Glyph: 'ꟹ' Descr: MODIFIER LETTER SMALL LIGATURE OE

#if EmacsCase() && EmacsEnabled
::^\ligature oe::
send ^x8{Enter}a7f9{Enter}
return

#if GtkApplicationCase()
::^\ligature oe::
send ^+ua7f9{Enter}
return

#if OtherCase()
::^\ligature oe::
send {U+A7F9}
return


;; Glyph: 'ꭜ' Descr: MODIFIER LETTER SMALL HENG

#if EmacsCase() && EmacsEnabled
::^\heng::
send ^x8{Enter}ab5c{Enter}
return

#if GtkApplicationCase()
::^\heng::
send ^+uab5c{Enter}
return

#if OtherCase()
::^\heng::
send {U+AB5C}
return


;; Glyph: 'ꭝ' Descr: MODIFIER LETTER SMALL L WITH INVERTED LAZY S

#if EmacsCase() && EmacsEnabled
::^\l with inverted lazy s::
send ^x8{Enter}ab5d{Enter}
return

#if GtkApplicationCase()
::^\l with inverted lazy s::
send ^+uab5d{Enter}
return

#if OtherCase()
::^\l with inverted lazy s::
send {U+AB5D}
return


;; Glyph: 'ꭞ' Descr: MODIFIER LETTER SMALL L WITH MIDDLE TILDE

#if EmacsCase() && EmacsEnabled
::^\l with middle tilde::
send ^x8{Enter}ab5e{Enter}
return

#if GtkApplicationCase()
::^\l with middle tilde::
send ^+uab5e{Enter}
return

#if OtherCase()
::^\l with middle tilde::
send {U+AB5E}
return


;; Glyph: 'ꭟ' Descr: MODIFIER LETTER SMALL U WITH LEFT HOOK

#if EmacsCase() && EmacsEnabled
::^\u with left hook::
send ^x8{Enter}ab5f{Enter}
return

#if GtkApplicationCase()
::^\u with left hook::
send ^+uab5f{Enter}
return

#if OtherCase()
::^\u with left hook::
send {U+AB5F}
return


;; Glyph: '﷼' Descr: RIAL SIGN

#if EmacsCase() && EmacsEnabled
::\rial::
send ^x8{Enter}fdfc{Enter}
return

#if GtkApplicationCase()
::\rial::
send ^+ufdfc{Enter}
return

#if OtherCase()
::\rial::
send {U+FDFC}
return


;; Glyph: '﹨' Descr: SMALL REVERSE SOLIDUS

#if EmacsCase() && EmacsEnabled
::\sbs::
send ^x8{Enter}fe68{Enter}
return

#if GtkApplicationCase()
::\sbs::
send ^+ufe68{Enter}
return

#if OtherCase()
::\sbs::
send {U+FE68}
return


;; Glyph: '𐆎' Descr: NOMISMA SIGN

#if EmacsCase() && EmacsEnabled
::\nomisma::
send ^x8{Enter}1018e{Enter}
return

#if GtkApplicationCase()
::\nomisma::
send ^+u1018e{Enter}
return

#if OtherCase()
::\nomisma::
send {U+1018E}
return


;; Glyph: '🚧' Descr: CONSTRUCTION SIGN

#if EmacsCase() && EmacsEnabled
::\construction::
send ^x8{Enter}1f6a7{Enter}
return

#if GtkApplicationCase()
::\construction::
send ^+u1f6a7{Enter}
return

#if OtherCase()
::\construction::
send {U+1F6A7}
return


;; Glyph: '🛇' Descr: PROHIBITED SIGN

#if EmacsCase() && EmacsEnabled
::\prohibited::
send ^x8{Enter}1f6c7{Enter}
return

#if GtkApplicationCase()
::\prohibited::
send ^+u1f6c7{Enter}
return

#if OtherCase()
::\prohibited::
send {U+1F6C7}
return


;; Glyph: '🛑' Descr: OCTAGONAL SIGN

#if EmacsCase() && EmacsEnabled
::\octagonal::
send ^x8{Enter}1f6d1{Enter}
return

#if GtkApplicationCase()
::\octagonal::
send ^+u1f6d1{Enter}
return

#if OtherCase()
::\octagonal::
send {U+1F6D1}
return

#if EmacsCase() && EmacsEnabled
::\sqrt::
send √
return

#if GtkApplicationCase()
::\sqrt::
send √
return

#if OtherCase()
::\sqrt::
send √
return
